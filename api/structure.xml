<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="v2.9.0">
  <partials/>
  <file path="lib/Phile/Model/Meta.php" generated-path="lib.Phile.Model.Meta.html" hash="3294cdc37fb340d57e5f7364817143ea" package="Default">
    <docblock line="0">
      <description>Model class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Container">\Phile\Core\Container</namespace-alias>
    <namespace-alias name="ServiceLocator">\Phile\Core\ServiceLocator</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Model" line="18" package="Phile\Model">
      <extends>\Phile\Model\AbstractModel</extends>
      <name>Meta</name>
      <full_name>\Phile\Model\Meta</full_name>
      <docblock line="18">
        <description>Meta model</description>
        <long-description></long-description>
        <tag name="author" line="18" description="Frank NÃ¤gler"/>
        <tag name="link" line="18" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="18" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="18" description="Phile\Model"/>
        <tag name="inherited_from" description="\Phile\Model\AbstractModel" refers="\Phile\Model\AbstractModel" link="/classes/Phile.Model.AbstractModel.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Model" line="20" package="Phile\Model">
        <name>$data</name>
        <full_name>\Phile\Model\AbstractModel::data</full_name>
        <default>array()</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="20" description="&lt;p&gt;the storage&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="26" package="Phile\Model">
        <name>__construct</name>
        <full_name>\Phile\Model\Meta::__construct()</full_name>
        <docblock line="26">
          <description>the construtor</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;the raw data to parse&lt;/p&gt;" type="string" variable="$rawData">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rawData</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="38" package="Phile\Model">
        <name>setRawData</name>
        <full_name>\Phile\Model\Meta::setRawData()</full_name>
        <docblock line="38">
          <description>set the raw data to parse</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;the raw data&lt;/p&gt;" type="string" variable="$rawData">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rawData</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="68" package="Phile\Model">
        <name>getFormattedDate</name>
        <full_name>\Phile\Model\Meta::getFormattedDate()</full_name>
        <docblock line="68">
          <description>get formatted date</description>
          <long-description></long-description>
          <tag name="return" line="68" description="" type="boolean|null|string">
            <type>boolean</type>
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Model" line="86" package="Phile\Model">
        <name>parseRawData</name>
        <full_name>\Phile\Model\Meta::parseRawData()</full_name>
        <docblock line="86">
          <description>parse the raw data</description>
          <long-description></long-description>
          <tag name="param" line="86" description="" type="string" variable="$rawData">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rawData</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="29" package="Phile\Model">
        <name>get</name>
        <full_name>\Phile\Model\AbstractModel::get()</full_name>
        <docblock line="29">
          <description>get value for given key</description>
          <long-description></long-description>
          <tag name="param" line="29" description="" type="" variable="$key"/>
          <tag name="return" line="29" description="" type="null|mixed">
            <type>null</type>
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Phile\Model\AbstractModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="39" package="Phile\Model">
        <name>getAll</name>
        <full_name>\Phile\Model\AbstractModel::getAll()</full_name>
        <docblock line="39">
          <description>get all entries</description>
          <long-description></long-description>
          <tag name="return" line="39" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Phile\Model\AbstractModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="50" package="Phile\Model">
        <name>set</name>
        <full_name>\Phile\Model\AbstractModel::set()</full_name>
        <docblock line="50">
          <description>set value for given key</description>
          <long-description></long-description>
          <tag name="param" line="50" description="&lt;p&gt;the key&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="50" description="&lt;p&gt;the value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Phile\Model\AbstractModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="62" package="Phile\Model">
        <name>__get</name>
        <full_name>\Phile\Model\AbstractModel::__get()</full_name>
        <docblock line="62">
          <description>magic method to get value</description>
          <long-description></long-description>
          <tag name="param" line="62" description="" type="" variable="$name"/>
          <tag name="return" line="62" description="" type="null|mixed">
            <type>null</type>
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Phile\Model\AbstractModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="73" package="Phile\Model">
        <name>__set</name>
        <full_name>\Phile\Model\AbstractModel::__set()</full_name>
        <docblock line="73">
          <description>magic method to set value</description>
          <long-description></long-description>
          <tag name="param" line="73" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="73" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Phile\Model\AbstractModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="86" package="Phile\Model">
        <name>__call</name>
        <full_name>\Phile\Model\AbstractModel::__call()</full_name>
        <docblock line="86">
          <description>magic method to access properties by getter / setter</description>
          <long-description></long-description>
          <tag name="param" line="86" description="&lt;p&gt;the name of method&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="86" description="&lt;p&gt;the arguments of the method&lt;/p&gt;" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="86" description="" type="mixed|null|void">
            <type>mixed</type>
            <type>null</type>
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Model\AbstractModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="112" package="Phile\Model">
        <name>offsetExists</name>
        <full_name>\Phile\Model\AbstractModel::offsetExists()</full_name>
        <docblock line="112">
          <description>(PHP 5 &gt;= 5.0.0)
Whether a offset exists</description>
          <long-description></long-description>
          <tag name="link" line="112" description="http://php.net/manual/en/arrayaccess.offsetexists.php" link="http://php.net/manual/en/arrayaccess.offsetexists.php"/>
          <tag name="param" line="112" description="&lt;p&gt;An offset to check for.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="112" description="true on success or false on failure.&#10;                     The return value will be casted to boolean if non-boolean was returned." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Phile\Model\AbstractModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="128" package="Phile\Model">
        <name>offsetGet</name>
        <full_name>\Phile\Model\AbstractModel::offsetGet()</full_name>
        <docblock line="128">
          <description>(PHP 5 &gt;= 5.0.0)
Offset to retrieve</description>
          <long-description></long-description>
          <tag name="link" line="128" description="http://php.net/manual/en/arrayaccess.offsetget.php" link="http://php.net/manual/en/arrayaccess.offsetget.php"/>
          <tag name="param" line="128" description="&lt;p&gt;The offset to retrieve.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="128" description="Can return all value types." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Phile\Model\AbstractModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="146" package="Phile\Model">
        <name>offsetSet</name>
        <full_name>\Phile\Model\AbstractModel::offsetSet()</full_name>
        <docblock line="146">
          <description>(PHP 5 &gt;= 5.0.0)
Offset to set</description>
          <long-description></long-description>
          <tag name="link" line="146" description="http://php.net/manual/en/arrayaccess.offsetset.php" link="http://php.net/manual/en/arrayaccess.offsetset.php"/>
          <tag name="param" line="146" description="&lt;p&gt;The offset to assign the value to.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;The value to set.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="146" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Phile\Model\AbstractModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="162" package="Phile\Model">
        <name>offsetUnset</name>
        <full_name>\Phile\Model\AbstractModel::offsetUnset()</full_name>
        <docblock line="162">
          <description>(PHP 5 &gt;= 5.0.0)
Offset to unset</description>
          <long-description></long-description>
          <tag name="link" line="162" description="http://php.net/manual/en/arrayaccess.offsetunset.php" link="http://php.net/manual/en/arrayaccess.offsetunset.php"/>
          <tag name="param" line="162" description="&lt;p&gt;The offset to unset.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="162" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Phile\Model\AbstractModel</inherited_from>
      </method>
    </class>
    <source>eJzlVktu2zAQ3esUE8CoZMOJ9kmdftIGCNAUQdtdEgg0PZaFSKRBUm6LJLfpTXqxDj9SJFt1U6C7ciGLnDefNzMc+eWr9WodpZNJBBO4lAssgZdMa9qmkWAV6jXjCFerosQbJz+Jolo3J2dS2YcwrBCoTrYln1FtCo4fJGdGkrh1hIZBZa3Rzh68ZrVZSQVwrpi4g48/f+QlKicpCzqgtTJmrY/TdG3N80ofcVkFAEdBfi2A5HJNO1krjkdS5WmQ6vTy4ouDE587lvcoObKOto8MvxkUCw1v5tooxo0H3UeRjcNRsGsCZoXApSBQTfTCaSMkR4pVQMJC5DBS7Os7RratDr3Dwm0kEEpj0End77qeU9CwrAU3hRSQZcEHN0lrZgaiLsuxU7j36rSKJTxBDmYB1AHYNTKrQh+eajSfPLJVGZ+0wMfIP7cpk9ZeCn/Bfi/poei2yLZRBY/kKs9Rvd+gMDDHJTVgppAtsiUVOqvQuS80oAPQS1DARUC76BzOMbO6JGNi4RkuOt56jntUu0xr4RU7dHsqN50evPF3wj7gKZBwR1rNtH1vL93xcY7mghqECY7J+PCUtknsLGcuF29rHdNxYJv0eiEezFM87YGu40AqhtkpvGjqMYXYgf2hTe1tq9bppNBuLhN7Gm5vNdnSoHpuMR34f6zlUJb+WSl3RwHFBtQ8FTPGp2VnBig0tRIwl7J8sJPowed178Unq+eNUQqNsrB17Uc0DZdFThPwWWk7c+i402l2SB4UmiZMEnrTlvQ6tgzi2/H2uAwkbPzb49GFY9UomAFTOy4zUVeoCp44pR1PjSnKkpGmqDDghtyGqKw8CRkJtO1R5usSj6fQNbFbQ9fTQ1N5/xzvV1BJg9z2QFvE4cv+h/m9Yaq5Rf3/De46XQhq7qX9LzKyrXplPajB29SRUzL7plynhKOmQzw0s066bTJyg8OvWddomGXdIdYq2WHK+AoSr800jO7wu71Wow0ra/z9tzixwGkD2/0QP0a/APGKyaI=</source>
  </file>
  <file path="lib/Phile/Plugin/PluginRepository.php" generated-path="lib.Phile.Plugin.PluginRepository.html" hash="d3d0d46afe5bdc79fb66ec2e4a3640b7" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="PluginException">\Phile\Exception\PluginException</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin" line="15" package="Phile\Core">
      <extends/>
      <name>PluginRepository</name>
      <full_name>\Phile\Plugin\PluginRepository</full_name>
      <docblock line="15">
        <description>Class PluginRepository manages plugin loading</description>
        <long-description></long-description>
        <tag name="author" line="15" description="PhileCMS"/>
        <tag name="link" line="15" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="15" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="15" description="Phile\Core"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin" line="21" package="Phile\Core">
        <name>$plugins</name>
        <full_name>\Phile\Plugin\PluginRepository::plugins</full_name>
        <default>array()</default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="21" description="&lt;p&gt;of AbstractPlugin&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin" line="26" package="Phile\Core">
        <name>$loadErrors</name>
        <full_name>\Phile\Plugin\PluginRepository::loadErrors</full_name>
        <default>array()</default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="26" description="&lt;p&gt;errors during load; keys: 'message' and 'code'&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin" line="31" package="Phile\Core">
        <name>$directory</name>
        <full_name>\Phile\Plugin\PluginRepository::directory</full_name>
        <default></default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="31" description="&lt;p&gt;plug-in root directory&lt;/p&gt;" type="\Phile\Plugin\directory" variable="">
            <type>\Phile\Plugin\directory</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin" line="38" package="Phile\Core">
        <name>__construct</name>
        <full_name>\Phile\Plugin\PluginRepository::__construct()</full_name>
        <docblock line="38">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;root directory for plug-in folder&lt;/p&gt;" type="string" variable="$directory">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$directory</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin" line="49" package="Phile\Core">
        <name>getLoadErrors</name>
        <full_name>\Phile\Plugin\PluginRepository::getLoadErrors()</full_name>
        <docblock line="49">
          <description>get load errors</description>
          <long-description></long-description>
          <tag name="return" line="49" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin" line="61" package="Phile\Core">
        <name>loadAll</name>
        <full_name>\Phile\Plugin\PluginRepository::loadAll()</full_name>
        <docblock line="61">
          <description>loads all activated plugins from $settings</description>
          <long-description></long-description>
          <tag name="param" line="61" description="&lt;p&gt;plugin-settings&lt;/p&gt;" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="return" line="61" description="of AbstractPlugin" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="61" description="" type="\Phile\Exception\PluginException">
            <type>\Phile\Exception\PluginException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin" line="87" package="Phile\Core">
        <name>load</name>
        <full_name>\Phile\Plugin\PluginRepository::load()</full_name>
        <docblock line="87">
          <description>load and return single plugin</description>
          <long-description></long-description>
          <tag name="param" line="87" description="" type="" variable="$pluginKey"/>
          <tag name="return" line="87" description="" type="\Phile\Plugin\AbstractPlugin">
            <type>\Phile\Plugin\AbstractPlugin</type>
          </tag>
          <tag name="throws" line="87" description="" type="\Phile\Exception\PluginException">
            <type>\Phile\Exception\PluginException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pluginKey</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin" line="118" package="Phile\Core">
        <name>reset</name>
        <full_name>\Phile\Plugin\PluginRepository::reset()</full_name>
        <docblock line="118">
          <description>clear out repository</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin" line="129" package="Phile\Core">
        <name>autoload</name>
        <full_name>\Phile\Plugin\PluginRepository::autoload()</full_name>
        <docblock line="129">
          <description>auto-loader plugin namespace</description>
          <long-description></long-description>
          <tag name="param" line="129" description="" type="" variable="$className"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytV1tv2zYUftevOAkMSAp8WZe1W+sla+H2YdgyBOuwFzswGOnIJiKLAkmlyVL/9x1S1N02Nmx6aGGeC8/5vo+HzI8/5dvc8zK2Q5WzCOF2y1Nc3abFhmdzzytUtfTpKcJcc5E5Y/2bvGYXFx5cwCJlSkFp/h1zobgW8hl2LGMbVJBbA6SCxTzbUICJec8KvRUSyl0WN5/tYsqzB6Bvq3Wu3s1muTFGOzWNxM45RJhRbcaB7CKnX6KQEU6F3MycVc1ufv7DulNrD1SDa2UhJNLyzIsOFuy9eJ7Z3HZlPkrwyCQwKdkziAQ+3CstWaTLQOczs//nUmiMNMYwKttVcAXLu/mpjCilkAriQhIsFp45POCzegc+saKobh9YFoMfiRj9Y9uZuE9lphM7xlySv2HFlDchOqQQulk+lr12GOZdiIzgKIzVLdU75kyyHZDVNNbk6O0JCfFflZOINEbZLaO4J0IhKbLI6A3W66jaMmiShtb3pYykb6S3XE2um12uOl1UbipP1yRBYeBbS9xwpVEGSxs9Br8y+XdhGbMf9L9BbUlzPPYxkKgLmZVUn2yL8vxacxj023FpXFcN2ceqMh4KWJoCCZU/MsNipchEih2MFGpNvAwKLklz2qy9XPCkF9Xt7+jhgPd6K8WX6qzVs+MkIKaFD2ka1DUcoVgiOQRhwynpCVm0hSYSmKoO5C9IUriGEWko4Zuwlc58PIHgjCuT0HksfQsgkgLg61c4O7DcTWE+8qF9C5x3LPvOL02aHEa6nhxVy6boOyPghv2gsYS9XSBi2nTfwxpGeKjUgaKWZqflwK+ZRQY9nFyTXm/KpSAcD93tsGr5Lui3U3X7uzsG0f6I9B0yp3Rvp6WLUkR/ik69R6TeQNlX9X8Qcz07O3pu09ZTc0qjJxg9YhYLOa5q+o0u5pD4wKc8NQD6q5U/hoPcz2ZQ5DnKiNG9mHCpaCyR/FEaNVLapkSoW7Y3ttmDtqDU5fXoLnjaCaZQRDZVVVhIS37P0q7UWst4310V5rPHyt62a3yiPlXQLyDsa9NiDBl+6cMcDDR0rrcVw+C/NODsfWq9SGPI6Lq5R0sAxmfnQ7W+unz7w+vLN999/7ZjaqG7b5pxrx17n67a76VVVy4VyJ6TRAt3gtt01gdh3gGswghI7pplEQ6mKynj6goSlqrB0f5/4OPKYseaGsyIHwilW9VxfF9/++Yf4OsqmFzzjGvOUv4XlokPz7xqPOTuzdrK1poLUYpElyg0+dcPvdJ29MC6i+XwrTN4b/Xs3eff4aLM62JiVSkrAuqX+OFZNYoqrZy8OqtnS9D499swCiPWCIuW0xjOe9Seh3BGGvumr68S9cP8Ra2pogqjjc4Wry5b7DWGWya1Go66poF5XyF/2pFEIakbRfYRslZbnuiglzgchrsK/22wNd0yvaXYMmaHki7BDjzLTomdcU6vSnvgUfl33ZPS27W2ha1JOkqIHlf54Ik7Bb4rwfv4edyq1M7lKf2l53cnjMlVD+Qq8WAS8yxKixjXwhz/2q1Nffnv3vsb6zUabQ==</source>
  </file>
  <file path="lib/Phile/Core/Event.php" generated-path="lib.Phile.Core.Event.html" hash="8d3045cdf0dc1527fcd7aee9e7956c3d" package="Default">
    <docblock line="0">
      <description>The Event class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="EventObserverInterface">\Phile\Gateway\EventObserverInterface</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Core" line="17" package="Phile\Core">
      <extends/>
      <name>Event</name>
      <full_name>\Phile\Core\Event</full_name>
      <docblock line="17">
        <description>the Event class for implementing a hook/event system</description>
        <long-description></long-description>
        <tag name="author" line="17" description="PhileCMS"/>
        <tag name="link" line="17" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="17" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="17" description="Phile\Core"/>
      </docblock>
      <property static="true" visibility="protected" namespace="Phile\Core" line="24" package="Phile\Core">
        <name>$instance</name>
        <full_name>\Phile\Core\Event::instance</full_name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="24" description="&lt;p&gt;global instance&lt;/p&gt;" type="\Phile\Core\Event" variable="">
            <type>\Phile\Core\Event</type>
          </tag>
          <tag name="deprecated" line="24" description="static use is deprecated"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Core" line="31" package="Phile\Core">
        <name>$registry</name>
        <full_name>\Phile\Core\Event::registry</full_name>
        <default>array()</default>
        <docblock line="31">
          <description>Registry object provides storage for objects.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="39" package="Phile\Core">
        <name>getInstance</name>
        <full_name>\Phile\Core\Event::getInstance()</full_name>
        <docblock line="39">
          <description>get global event instance</description>
          <long-description></long-description>
          <tag name="return" line="39" description="" type="\Phile\Core\Event">
            <type>\Phile\Core\Event</type>
          </tag>
          <tag name="deprecated" line="39" description="static use is deprectated"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="50" package="Phile\Core">
        <name>setInstance</name>
        <full_name>\Phile\Core\Event::setInstance()</full_name>
        <docblock line="50">
          <description>Set global event instance</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="\Phile\Core\Event" variable="$instance">
            <type>\Phile\Core\Event</type>
          </tag>
          <tag name="deprecated" line="50" description="static use is deprecated"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$instance</name>
          <default></default>
          <type>\Phile\Core\Event</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="62" package="Phile\Core">
        <name>registerEvent</name>
        <full_name>\Phile\Core\Event::registerEvent()</full_name>
        <docblock line="62">
          <description>Global register</description>
          <long-description></long-description>
          <tag name="param" line="62" description="" type="" variable="$eventName"/>
          <tag name="param" line="62" description="" type="" variable="$object"/>
          <tag name="deprecated" line="62" description="static use is deprecated"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="74" package="Phile\Core">
        <name>triggerEvent</name>
        <full_name>\Phile\Core\Event::triggerEvent()</full_name>
        <docblock line="74">
          <description>Global trigger</description>
          <long-description></long-description>
          <tag name="param" line="74" description="" type="" variable="$eventName"/>
          <tag name="param" line="74" description="" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="74" description="static use is deprecated"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="85" package="Phile\Core">
        <name>register</name>
        <full_name>\Phile\Core\Event::register()</full_name>
        <docblock line="85">
          <description>method to register an event</description>
          <long-description></long-description>
          <tag name="param" line="85" description="&lt;p&gt;the event to observe&lt;/p&gt;" type="string" variable="$eventName">
            <type>string</type>
          </tag>
          <tag name="param" line="85" description="&lt;p&gt;observer&lt;/p&gt;" type="\Phile\Gateway\EventObserverInterface|callable" variable="$object">
            <type>\Phile\Gateway\EventObserverInterface</type>
            <type>callable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>\Phile\Gateway\EventObserverInterface|callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="105" package="Phile\Core">
        <name>trigger</name>
        <full_name>\Phile\Core\Event::trigger()</full_name>
        <docblock line="105">
          <description>method to trigger an event</description>
          <long-description></long-description>
          <tag name="param" line="105" description="&lt;p&gt;the event name (register for this name)&lt;/p&gt;" type="string" variable="$eventName">
            <type>string</type>
          </tag>
          <tag name="param" line="105" description="&lt;p&gt;array with some additional data&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJytVltv2jAUfs+v8CqkQsXINnXa1u6qqqp46DatfaMImeSQeE3syHZgqOO/79ixuSUUptYvgM/1+87FfPxSpEUQnpwE5ITcpkAup8A1iTKqFF6FAac5qIJGQH6mLIO7CyHhPAhK5S+uqIYZnd9Zwx9jBXIKss81yAlaoapzrjedk4mQhOVFBjneMZ4QSlIh7kOwOmquNORoZ0y/0lKnqF5FvLi+sZcZ4/cET6p1oc7CsDDCKFe9SOROIQKOeRoFlIsCf4lSRtATMgmdVIXX/VurjiDvabKO0xJQZWszDx6CwES0iMxBqymVDlaSiTHNCONKUx7BUiOGQkKELMUEJZpFxJDHFFkJnG5oPwspNERr6i3v8rwW/hckTGk5J2L8G22M7ZTFoNBUSAPGsFzJVM8ZbaROpaTzHeFb0nv/RAbDevAElqCrom1BXwaSoEvJHYcH0qLrvJRjrJlXnpQ80kxwk0XfxW13rOJDZYbHBa5Mzs7WiDTSRQ3RzaGICipp7ureenrFm5GpNWRbobaB1hBiyfaivaqQVlUG2YyxZYn4jltgW1C11XOD9tlYwO1V9K4PuBf6y8/eR6P5Hja0ZEny32TYMSKtmGr63IS4hBr4MNGwzrzMsgNIcX7qLnYykgNu3ZhosSwKobwajGZ6cFeYRb6KYJd+NUnoRVSPQ9MQ1d6NvxHNMjrOwNfNW8smzmrdc0jjsAlpe+eeJjHZkU9nzdAcb4ib0X3tkmPBj4fnS7XFRqQXTI08Jh+2s+1Vp1LMCIcZuevzKc1Y/E0mpXkgL/9EUBiI7Q0Dc44uKD/WqxpZ5D3iIZiO4wJfXRe8d9StuXh9+ubd+9enH1693RB1msC0dMqUnzE5H6yYHg6GZu1U2PY3lWvIJ/SU+W9C2kvg5q0zydn7zu4Jdd9nTKdECXRB45gZbnH81ya4ucN2jtGOSTS1h7zQ8/YjxNUaoXq4muhHkECjlDzmjlBlylDVf9u16YMRbiI5MphGlov2UrtLBjVkw1ofLIJF8A8E5gkA</source>
  </file>
  <file path="plugins/phile/parserMeta/Classes/Plugin.php" generated-path="plugins.phile.parserMeta.Classes.Plugin.html" hash="db7ed9256bb4b26864b3502dd6ec8239" package="Default">
    <docblock line="0">
      <description>Plugin class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ServiceLocator">\Phile\Core\ServiceLocator</namespace-alias>
    <namespace-alias name="AbstractPlugin">\Phile\Plugin\AbstractPlugin</namespace-alias>
    <namespace-alias name="Meta">\Phile\Plugin\Phile\ParserMeta\Parser\Meta</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\ParserMeta" line="20" package="Phile\Plugin\Phile\ParserMeta">
      <extends>\Phile\Plugin\AbstractPlugin</extends>
      <name>Plugin</name>
      <full_name>\Phile\Plugin\Phile\ParserMeta\Plugin</full_name>
      <docblock line="20">
        <description>Class Plugin
Default Phile parser plugin for Markdown</description>
        <long-description></long-description>
        <tag name="author" line="20" description="PhileCMS"/>
        <tag name="link" line="20" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="20" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="20" description="Phile\Plugin\Phile\ParserMeta"/>
        <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin" refers="\Phile\Plugin\AbstractPlugin" link="/classes/Phile.Plugin.AbstractPlugin.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\ParserMeta" line="23" package="Phile\Plugin\Phile\ParserMeta">
        <name>$events</name>
        <full_name>\Phile\Plugin\Phile\ParserMeta\Plugin::events</full_name>
        <default>array('plugins_loaded' =&gt; 'onPluginsLoaded')</default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin::events" refers="\Phile\Plugin\AbstractPlugin::events" link="/classes/Phile.Plugin.AbstractPlugin.html#property_events"/>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Phile\Plugin\Phile\ParserMeta" line="25" package="Phile\Plugin">
        <name>$plugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::plugin</full_name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;plugin attributes&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\ParserMeta" line="30" package="Phile\Plugin">
        <name>$events</name>
        <full_name>\Phile\Plugin\AbstractPlugin::events</full_name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="&lt;p&gt;subscribed Phile events ['eventName' =&gt; 'classMethodToCall']&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\ParserMeta" line="35" package="Phile\Plugin">
        <name>$settings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::settings</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;the plugin settings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMeta" line="32" package="Phile\Plugin\Phile\ParserMeta">
        <name>onPluginsLoaded</name>
        <full_name>\Phile\Plugin\Phile\ParserMeta\Plugin::onPluginsLoaded()</full_name>
        <docblock line="32">
          <description>onPluginsLoaded method</description>
          <long-description></long-description>
          <tag name="param" line="32" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="32" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMeta" line="46" package="Phile\Plugin">
        <name>initializePlugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::initializePlugin()</full_name>
        <docblock line="46">
          <description>initialize plugin</description>
          <long-description>try to keep all initialization in one method to have a clean class
for the plugin-user</long-description>
          <tag name="param" line="46" description="" type="string" variable="$pluginKey">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="46" description="since 1.5.1 will be declared 'final'"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pluginKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMeta" line="98" package="Phile\Plugin">
        <name>injectSettings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::injectSettings()</full_name>
        <docblock line="98">
          <description>inject settings</description>
          <long-description>backwards compatibility to Phile 1.4</long-description>
          <tag name="param" line="98" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="98" description="since 1.5.1 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMeta" line="109" package="Phile\Plugin">
        <name>on</name>
        <full_name>\Phile\Plugin\AbstractPlugin::on()</full_name>
        <docblock line="109">
          <description>implements EventObserverInterface</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="string" variable="$eventKey">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Gateway\EventObserverInterface::on()" refers="\Phile\Gateway\EventObserverInterface::on()" link="/classes/Phile.Gateway.EventObserverInterface.html#method_on"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ParserMeta" line="131" package="Phile\Plugin">
        <name>getPluginPath</name>
        <full_name>\Phile\Plugin\AbstractPlugin::getPluginPath()</full_name>
        <docblock line="131">
          <description>get file path to plugin root (trailing slash) or to a sub-item</description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="string" variable="$subPath">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="null if item does not exist" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subPath</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="23" code="PPC:ERR-50007">No summary for property $events</error>
    </parse_markers>
    <source>eJyFkk1LAzEQhu/5FXMobFvUvbd+Ui+CBUFvVkrMTndDd5OQTKqg/nfzVbFFcE47M89M3nnZ8yvTGVZPpwym8ND7VioQPXcu5DVTfEBnuEB46GSPqwysSsKtQ7tE4nPGvNszC21x9Yh2JwXea8FJ2/mvdllx8+rIckE5/QM4fqN8rsp7RfEiSi26Y36LG+57yqvApBEw+ayNtrDkdtvot8hG/Jp76kI584vlYyr2Um0hREdk3KyuTWyKwZ0JPRRAoAqCIxD62oRMeyvwTNu2Ll1XL++eEh4M3PL2n/uS3+LXOYDvhKpxcGgV+2AsijNWEwrCBka4Q0UOLuC5yqe6da95g00FF5dQaZUn3X0uvszzhmRhjCkcITBgsKUp3T0U7rB8AOX7HkYNj5IP+xbJWwWDfMfmc6flfkGdBfvX4AxsvBIktTp+c5xWhiPi/kma+MjzIQ5/p9nMYisdoS318Q8Yo0rWrrO16+htdXIAKHyDWB6PqJPu9NIhkVStm/xQk3n6/GJf7Bs69/1H</source>
  </file>
  <file path="lib/Phile/Exception.php" generated-path="lib.Phile.Exception.html" hash="1592c8e02b0853a6ea43116a84f7ea1b" package="Default">
    <docblock line="0">
      <description>Created by PhpStorm.</description>
      <long-description>User: franae
Date: 30/10/13
Time: 14:47</long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile" line="21" package="Phile">
      <extends>\Phile\Exception\AbstractException</extends>
      <name>Exception</name>
      <full_name>\Phile\Exception</full_name>
      <docblock line="21">
        <description>the Exception class</description>
        <long-description></long-description>
        <tag name="author" line="21" description="Frank NÃ¤gler"/>
        <tag name="link" line="21" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="21" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="21" description="Phile"/>
        <tag name="deprecated" line="21" description="since 1.4 will be removed"/>
        <tag name="use" line="21" description="\Phile\Exception\AbstractException"/>
        <tag name="inherited_from" description="\Phile\Exception\AbstractException" refers="\Phile\Exception\AbstractException" link="/classes/Phile.Exception.AbstractException.html"/>
      </docblock>
    </class>
    <source>eJyNkMtKxTAQhvd5ill30VhOQaiCihdwoQged92k6diGkxtJqkfEt/FNfDEnORdcOmSTb/65/HN+4WfPeFUxqOA6oEg4wvABT7N/Ti6YOvOXiKGD1yCswPy/IVUHqxPe0FtlslaGSNN27Sl9OWNWGIxeSKROSuMZO8xIM8LtVqJPylmQWsRIOGcuxZJmFyDHHc3awOPP96QxlKRWBHYxp+Rjx7nPnaWJtXRmr5FoIx40JHGegFuCxNqFie8FkT/cr0sFbbgRU6koexY4og8oyyWismShqVt4V1rDgBDQuDcci3DZzcrRl/L+6Ky/GmIKQqYjKXcpfv/4x21CO8b/lH+yL/YL7kCGmg==</source>
  </file>
  <file path="plugins/phile/phpFastCache/config.php" generated-path="plugins.phile.phpFastCache.config.html" hash="41ce98d606b4a4bc05cee7b2a51a7873" package="Default">
    <docblock line="0">
      <description>config file for plugin</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <source>eJx1VGFP2zAQ/Z5fcYqQslUhoQhRacAQK1QgNAltTPswIeQm18QisTPbofTf73xJVlIg/VD77t7ze5dzTs+bsgnSySSACWRarWQBK1khrLSBpmoLqSiTBnt97gz+BEAPI/wzgUtcibZyYJ02okBARSDss0MRJkUCoWe24RfYy0RWIpHR4Qth3dxvP30+gdP9fVjLqoIlsgwLXLlDJlqn4y4fg/1bSYdxHxRNFhODYlgML/1/jfXOKo97tpT/o159BGdfIWLqKA4+snonXMkdWvhWzd+R+MuSgZaM3F3cX0MlnxDSUteYthaNErR4bQxuERuQDpaVUE8QhrHfcCO8rVo4mYFF1zZ86ka3Y/EN6WHl84v59dXj5c2Pt9rv0NTSWqmVZRJ+y73r/2xpynx55/MxK2udM/HBbDaLgdILglrMWiPdJqYJQUFOyRQcHB8fMzFBWqIWKqfY0RHHskImQcD04YC+xU3oqUNvMWTy/tzOeaF1nsBNv8sMCkes4L3CcsONTV9xDYYHvwtRVd9E9gSXRj6jGcJXL6Im1dRg5ftI0nROO1qyi+14+FFKEnQ0T8uWRJTIALL3jHkHXeMSSm2dVMVAf09jrXA9hCHXKnJQiucRNXXEs8PvUjgmzfU5/EQHKxK99KKdz+SsHJwG7UpadPtk522FAygEbmd3yeLdfiSlE1mG1kJjtMPMDYlR0+negTPteCLCARr6IJ3hK94cMFyO771PMmS8fP/+h9hobHtoZLnO8px1Xxf/bFdc5BvqK6Lp4Sw5oN80iscVjTZcAdPp4XQ6ToKfrsgKWz36C8hl1DaLPHa6cXQtRPURpBHWrrXJt7B3UQ+8eth+WB5OgsDQrTUK+u/nSfAPjGyEjw==</source>
  </file>
  <file path="lib/Phile/ServiceLocator/CacheInterface.php" generated-path="lib.Phile.ServiceLocator.CacheInterface.html" hash="9446e1926f407a5766613ff3795a0285" package="Default">
    <docblock line="0">
      <description>Interface for a service locator</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Phile\ServiceLocator" line="14" package="Phile\ServiceLocator">
      <name>CacheInterface</name>
      <full_name>\Phile\ServiceLocator\CacheInterface</full_name>
      <docblock line="14">
        <description>Interface CacheInterface</description>
        <long-description></long-description>
        <tag name="link" line="14" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="14" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="14" description="Phile\ServiceLocator"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="23" package="Phile\ServiceLocator">
        <name>has</name>
        <full_name>\Phile\ServiceLocator\CacheInterface::has()</full_name>
        <docblock line="23">
          <description>check if an entry with this key exists</description>
          <long-description></long-description>
          <tag name="param" line="23" description="" type="" variable="$key"/>
          <tag name="return" line="23" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="32" package="Phile\ServiceLocator">
        <name>get</name>
        <full_name>\Phile\ServiceLocator\CacheInterface::get()</full_name>
        <docblock line="32">
          <description>get the entry by given key</description>
          <long-description></long-description>
          <tag name="param" line="32" description="" type="" variable="$key"/>
          <tag name="return" line="32" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="44" package="Phile\ServiceLocator">
        <name>set</name>
        <full_name>\Phile\ServiceLocator\CacheInterface::set()</full_name>
        <docblock line="44">
          <description>set the entry to the given key</description>
          <long-description></long-description>
          <tag name="param" line="44" description="" type="" variable="$key"/>
          <tag name="param" line="44" description="" type="" variable="$value"/>
          <tag name="param" line="44" description="" type="integer" variable="$time">
            <type>integer</type>
          </tag>
          <tag name="param" line="44" description="&lt;p&gt;deprecated&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="44" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$time</name>
          <default>300</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="54" package="Phile\ServiceLocator">
        <name>delete</name>
        <full_name>\Phile\ServiceLocator\CacheInterface::delete()</full_name>
        <docblock line="54">
          <description>delete the entry by given key</description>
          <long-description></long-description>
          <tag name="param" line="54" description="" type="" variable="$key"/>
          <tag name="param" line="54" description="&lt;p&gt;deprecated&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="54" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="59" package="Phile\ServiceLocator">
        <name>clean</name>
        <full_name>\Phile\ServiceLocator\CacheInterface::clean()</full_name>
        <docblock line="59">
          <description>clean complete cache and delete all cached entries</description>
          <long-description></long-description>
        </docblock>
      </method>
    </interface>
    <source>eJy1k1FLwzAQx9/7Ke5hD1sZ68A3dSj4NFAQ9NGXLL22oWkSknSuiN/da5oNrJs40byEu/v37vdPmusbU5kkS9MEUlgrj7ZgHKHQFhg4tFtBkdSceW1JkiWKNehMr3mshMSXp0FzP0iukq+97hiv8BBSrS/fSqFqoFV5b9xllpm+G2/cgusmCjgqh0FAdW0o0q3luNC2zGLVZQ/r5yAnpJqVx6kCuDgF9Jb0HAG7XylQldcgCmAKUHnbwavwFfhKOKixA9wJ511U7z8iAMsamJBgXLHoW6ugETvMYzILu2k35AOKVnEvtIKKuWnfYEbHOGIq0RMARp5NB6XYooIj0/6Ag4ad4nCfOLwOwc9ZDqktky2OknRDFE68aMYVZi3rYKJNj+cgR2ORbvZg43yLLlqcR5T5MBdWcLFczscDV0NiOjtyIjlK9Pjby/k/hwNXNHmGHy6R/nt6hSb44v1joZeQ740yKYdkHvwKdN9ihHZTmvOefABAjEd8</source>
  </file>
  <file path="plugins/phile/parserMeta/config.php" generated-path="plugins.phile.parserMeta.config.html" hash="dd8eac63ee98ff00cf6486043388b655" package="Default">
    <docblock line="0">
      <description>config file</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <source>eJxtjcEOgyAMhu88RXdqQiQ8wJx7EMOBsKJmCEbYYW8/wMVk0//S9u//te19GRcmOWfAwQRvpwHs5CiPkq2UXquHnkFWzRRxCAt50P4BxoVIkMKTfAQbVpgpaUh6iN+orBUteUMR4dZtfla/dzVhyhJ6LKdri5Jjk/3yYTO4RNX8UmOa3QFsL0L8oUJ0B/atT1hxggpUO6mYurIPW0BHSw==</source>
  </file>
  <file path="plugins/phile/phpFastCache/Classes/PhileToPsr16CacheAdapter.php" generated-path="plugins.phile.phpFastCache.Classes.PhileToPsr16CacheAdapter.html" hash="90d3b88f67bb140def01dddd4e432757" package="Default">
    <docblock line="0">
      <description>Adapter to use PSR-16 compatible cache class with Phile</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="CacheInterface">\Psr\SimpleCache\CacheInterface</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\PhpFastCache" line="18" package="Phile\Plugin\Phile\PhpFastCache">
      <extends/>
      <implements>\Phile\ServiceLocator\CacheInterface</implements>
      <name>PhileToPsr16CacheAdapter</name>
      <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter</full_name>
      <docblock line="18">
        <description>Class PhpFastCache</description>
        <long-description></long-description>
        <tag name="author" line="18" description="PhileCMS"/>
        <tag name="link" line="18" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="18" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="18" description="Phile\Plugin\Phile\PhpFastCache"/>
      </docblock>
      <constant namespace="Phile\Plugin\Phile\PhpFastCache" line="21" package="Phile\Plugin\Phile\PhpFastCache">
        <name>SLUG_PREFIX</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter::SLUG_PREFIX</full_name>
        <value>'-phile.phpFastCache.slug-'</value>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="21" description="&lt;p&gt;slug&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="Phile\Plugin\Phile\PhpFastCache" line="23" package="Phile\Plugin\Phile\PhpFastCache">
        <name>SLUG</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter::SLUG</full_name>
        <value>array('{', '}', '(', ')', '/', '\\', '@', ':')</value>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\PhpFastCache" line="28" package="Phile\Plugin\Phile\PhpFastCache">
        <name>$cacheEngine</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter::cacheEngine</full_name>
        <default></default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="28" description="&lt;p&gt;the cache engine&lt;/p&gt;" type="\BasePhpFastCache" variable="">
            <type>\BasePhpFastCache</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\PhpFastCache" line="35" package="Phile\Plugin\Phile\PhpFastCache">
        <name>__construct</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter::__construct()</full_name>
        <docblock line="35">
          <description>the constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="\Psr\SimpleCache\CacheInterface" variable="$cacheEngine">
            <type>\Psr\SimpleCache\CacheInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$cacheEngine</name>
          <default></default>
          <type>\Psr\SimpleCache\CacheInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\PhpFastCache" line="47" package="Phile\Plugin\Phile\PhpFastCache">
        <name>has</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter::has()</full_name>
        <docblock line="47">
          <description>method to check if cache has entry for given key</description>
          <long-description></long-description>
          <tag name="param" line="47" description="" type="" variable="$key"/>
          <tag name="return" line="47" description="" type="boolean|mixed">
            <type>boolean</type>
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\CacheInterface::has()" refers="\Phile\ServiceLocator\CacheInterface::has()" link="/classes/Phile.ServiceLocator.CacheInterface.html#method_has"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\PhpFastCache" line="60" package="Phile\Plugin\Phile\PhpFastCache">
        <name>get</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter::get()</full_name>
        <docblock line="60">
          <description>method to get cache entry</description>
          <long-description></long-description>
          <tag name="param" line="60" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="60" description="" type="mixed|null">
            <type>mixed</type>
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\CacheInterface::get()" refers="\Phile\ServiceLocator\CacheInterface::get()" link="/classes/Phile.ServiceLocator.CacheInterface.html#method_get"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\PhpFastCache" line="76" package="Phile\Plugin\Phile\PhpFastCache">
        <name>set</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter::set()</full_name>
        <docblock line="76">
          <description>method to set cache entry</description>
          <long-description></long-description>
          <tag name="param" line="76" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="76" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="76" description="" type="integer" variable="$time">
            <type>integer</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;deprecated&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="76" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\CacheInterface::set()" refers="\Phile\ServiceLocator\CacheInterface::set()" link="/classes/Phile.ServiceLocator.CacheInterface.html#method_set"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$time</name>
          <default>300</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\PhpFastCache" line="94" package="Phile\Plugin\Phile\PhpFastCache">
        <name>delete</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter::delete()</full_name>
        <docblock line="94">
          <description>method to delete cache entry</description>
          <long-description></long-description>
          <tag name="param" line="94" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="94" description="&lt;p&gt;deprecated&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="94" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\CacheInterface::delete()" refers="\Phile\ServiceLocator\CacheInterface::delete()" link="/classes/Phile.ServiceLocator.CacheInterface.html#method_delete"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\PhpFastCache" line="107" package="Phile\Plugin\Phile\PhpFastCache">
        <name>clean</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter::clean()</full_name>
        <docblock line="107">
          <description>clean complete cache and delete all cached entries</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Phile\ServiceLocator\CacheInterface::clean()" refers="\Phile\ServiceLocator\CacheInterface::clean()" link="/classes/Phile.ServiceLocator.CacheInterface.html#method_clean"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\PhpFastCache" line="118" package="Phile\Plugin\Phile\PhpFastCache">
        <name>slug</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\PhileToPsr16CacheAdapter::slug()</full_name>
        <docblock line="118">
          <description>replaces chars forbidden in PSR-16 cache-keys</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;key to slug&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="118" description="$key slugged key" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJztVltv2zYUfvevOAMCWA58aTGgD8naJQvSIkBbBHGKFagHg5aOJcISSZCUO6P1f98hxciS7Ni7vk0Pcshz/b7zhdRPP6tM9Sbn5z04h+uEKYsarITSINxPH0YvX0EsC8UsX+QIMYszeufMGPjKbQb3Gc+RQie9nmAFGsVirDZn93mZcjELi0y9ZcbeuPjLXs9nN3o25YXK0e/O/PtOUP0lJSGn0NSNr9ZMQLvOcMVKm0kNVb2bD1O/mXOxAnoya5W5mEyUM8aFGROM4BCjoPrOgexS0UqWOsax1OkkWM3kw92jdydEK5aeBOU5iEOrZHyUhO/lK297otWDLVBYAyHDFPWaCr6XMbNSdyjofes5IEQDXK2ZBmM1FykYasEVc7ZYCmNh+v7Tu/n9w+3bu8/wGvojD3msGt2NXdCof+mDOpEU8qX/rT+E/rYP9I7cnwP3mvj1bOZ/rtzORf83Gkzoyv9CaG72CzPYJARs9qQXFMQZBveqcaWlxdhiAmfe59a77Of2SVyruoyJobBdV1ZMswLatLUytouWCxovLEsRWy4FzOd16uhIjoEProbhnjObcTN60/AgCtswnNt2D0yBpNfE/XeRa7wCvgwEZcwQSVZvYEl6TvkaBaxwcxjt2QGLRltqAQsp8+8F/x2To7ipXOSy7AGjPQelwuckU7ld1h6hzj4Dozd10tPoU7S1Mgj0YZhB7UfQeqDfRZnnR9FStX8fbZ30NFrz99B2LWuWl9ixcWErQfKia2Jasw2ZpHIkGEhQaaRTppbGYTbXkh/XjgnAh6GjYVWdiPzxxYthKFtXfV1tRIMu+ST96AcslN1ET86DQcPu2ZyAkBZyKVI6PE2plNTuxFhsQLVO3sZDZKXkPUetpY761zot3YG764g3qQAmEuCpkBqTMZ1vt/NP09uH+a/XDx/vPr5rKGH7F1RzSC7PsPYn1JNgjhb/iYD+KyVUnQVY/8/94NwbHD076zhHJvxHVmPSrsEwepbn1Wbi58/RHB2LTxedvrNoQZ46erYvjSqnq9DQZcW0cTfTgicJ3Uxc1F+GLt2IwJmTonT3mT8Nibmu4Jpuzp4S1J2Oux8Mu6OoHkIXbGjdKeBRrnAnyHnBVNQSTp2tytSRonuemsR8eXHR/NQa+44vWwHbYWtZFXUERbv4Qe2yf9cQFfPQfSNieADSEFqq2vb+ANXtZ9c=</source>
  </file>
  <file path="lib/Phile/Core/Router.php" generated-path="lib.Phile.Core.Router.html" hash="19e12591fac43f82e05b81db55287075" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile\Core" line="13" package="Default">
      <extends/>
      <name>Router</name>
      <full_name>\Phile\Core\Router</full_name>
      <docblock line="13">
        <description>this Router class is responsible for Phile's basic URL management</description>
        <long-description></long-description>
        <tag name="package" line="13" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Core" line="19" package="Default">
        <name>$server</name>
        <full_name>\Phile\Core\Router::server</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="19" description="&lt;p&gt;with $_SERVER environment&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="24" package="Default">
        <name>__construct</name>
        <full_name>\Phile\Core\Router::__construct()</full_name>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="24" description="&lt;p&gt;$_SERVER environment&lt;/p&gt;" type="array" variable="$server">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$server</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="37" package="Default">
        <name>getCurrentUrl</name>
        <full_name>\Phile\Core\Router::getCurrentUrl()</full_name>
        <docblock line="37">
          <description>get request-URL relative to Phile base-URL</description>
          <long-description></long-description>
          <tag name="return" line="37" description="relative URL e.g. `index`, `sub/`, `sub/page`" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="62" package="Default">
        <name>getBaseUrl</name>
        <full_name>\Phile\Core\Router::getBaseUrl()</full_name>
        <docblock line="62">
          <description>Get base-URL of the Phile installation</description>
          <long-description></long-description>
          <tag name="return" line="62" description="`scheme://host/path/phile-root`" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="94" package="Default">
        <name>urlForPage</name>
        <full_name>\Phile\Core\Router::urlForPage()</full_name>
        <docblock line="94">
          <description>get the URL for a page-Id</description>
          <long-description>e.g. `sub/index` --&gt; `http://host/phile-root/sub`</long-description>
          <tag name="param" line="94" description="" type="string" variable="$pageId">
            <type>string</type>
          </tag>
          <tag name="param" line="94" description="&lt;p&gt;return a full or root-relative URL&lt;/p&gt;" type="boolean" variable="$base">
            <type>boolean</type>
          </tag>
          <tag name="return" line="94" description="URL" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$base</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="111" package="Default">
        <name>url</name>
        <full_name>\Phile\Core\Router::url()</full_name>
        <docblock line="111">
          <description>converts Phile-root relative URL to full URL</description>
          <long-description>e.g. `foo/bar.ext` --&gt; `http://host/phile-root/foo/bar.ext`</long-description>
          <tag name="param" line="111" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="111" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="121" package="Default">
        <name>getProtocol</name>
        <full_name>\Phile\Core\Router::getProtocol()</full_name>
        <docblock line="121">
          <description>get the HTTP-protocol</description>
          <long-description></long-description>
          <tag name="return" line="121" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Core" line="141" package="Default">
        <name>getUrlPath</name>
        <full_name>\Phile\Core\Router::getUrlPath()</full_name>
        <docblock line="141">
          <description>get path of an URL</description>
          <long-description>`scheme://host/path/sub` --&gt; `/path/sub`</long-description>
          <tag name="param" line="141" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="141" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="24" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJytVttu4zYQffdXcAFjKQex1ee42RQNsk2AXdTrS1+ygU0rtC1UJlWSygWL/HtnSOouK1ugetGFM8PhnDNn9OtVekgH4dmAnJHfWGYOUhEyO8QJv/66sB+TWPxN4DoYk+qLMExxMTrqSSSP3iDiQnNrAOsyhTeZqYhPpNqHflWHX++WYB4OBoIduU5ZxN0+36+l4tMB5GCTMIdYk7nMDFckSpjWBN4VOEih423CyQ4ytI5Uky3TcURW8y/kyATb8yMXxm7iPF2YwY/BAA9gN8ALcn5iijCl2Ct5js2BDNeLm/lfN3PCxVOspHBxrG1o76mShkeGP5Kh5uqJq2k7ZsoUO/qo3uonAmdbqBDZZSIysRRkvY7goEZlkQnqoS7J/cPI+vxwEeCKdyTgx9S8Bt5qNKqs4lV656lMi/W34mmIVR9/Km3zQzqz5lH33AAk/2RcmzEWX/GEmfiJEyMdNAgMxyXvUdRIcZMpQeCAsdiXfhiET/YTsonFI3/ZnJONzrZhfk8B2k1v2SCj60wpqO5KJUGzTMNMJXiq6inv6fzm2+pmsVyv5nf0weNpDxpCYkcJacEJ1atPtlhOYm0CjDiCkPwlTeQjD+gVPbfbjJqBtEwgkpLSjKvHHafMHMoEsV6rapJwoN/dt2A0rdvNwLNmCEb4LcijVByQIB88Q3LfEfn4EQ+VSm3PcU4qS5eXl+SXFolc/QAKcPM+8JRwUYk66iSW80yghEfvSENaLZK3UOwZHh55hNVsFtKzBj+fouQfQMmcdETuQEa8vJAY2oklWHkp+um40dEBJAQ07CC1CREhp3ZjhO9dAhZ4NdlXgnsthWGx4OriAhzuMDMR8WBkYQyoTXgNRrt4T/OP6L2Gk9MeWBH0Jmh50fx6FZ1m8SmtFBtjx1rD1o1+md3OQEK+fKYPbZVxcVLF92vF0wTEPaCh7eXvExgwweRsdDUMoUco9snJuJ1JnkzodrmcrW//XCy7MkII2z1fcZnW7VHhZSTrLTjzH6s9WDlv6TQhFGhD4e42nlTI2l1z1WqJJnA9bEcBRoYj2XEeMoISOb57bBDcaSpKqNNVMh5/Ihs/qB3JC36HYLZpNoibaXmDDHGXYpNidSuhAp7nZf4MmiNJCGTXEr8T/VeudPcYFOSzVDPIIfCZeOmCcsLE5Kdk39nWu8f6naCxxx9eciUqYfwPIMEgB84Z7XTI1rg+8WBa2hK156TDbSdluGVqwl9MP3JVw3cQhHy7q/9e5V0pGhXOq9CeWdgRth/a0t9PaezQcd5XvXr9nh6XzXv6r+nnBcVvLQCwzkFX0Q+KMNE6304K2AL28gPZyEQ+c3XS6gPMZip3O9ribXNzTfs4m1v3QYHDD+coEx307BqUqB6OpOX7/8PF4te7Cm7xz9PBymHq/pBoA4PaP4/Va1fTHUs6tACS1bApTDV8WHeoQQNb53BPcfcOAlUza9jWQ771QQf2OWxvg38B7t/Gkw==</source>
  </file>
  <file path="plugins/phile/templateTwig/Classes/Template/Twig.php" generated-path="plugins.phile.templateTwig.Classes.Template.Twig.html" hash="8c2bca2c3f4bac5cd29be90bfb93a352" package="Default">
    <docblock line="0">
      <description>Template engine class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Container">\Phile\Core\Container</namespace-alias>
    <namespace-alias name="Registry">\Phile\Core\Registry</namespace-alias>
    <namespace-alias name="Page">\Phile\Model\Page</namespace-alias>
    <namespace-alias name="Repository">\Phile\Repository\Page</namespace-alias>
    <namespace-alias name="TemplateInterface">\Phile\ServiceLocator\TemplateInterface</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="21" package="Phile\Plugin\Phile\TemplateTwig\Template">
      <extends/>
      <implements>\Phile\ServiceLocator\TemplateInterface</implements>
      <name>Twig</name>
      <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig</full_name>
      <docblock line="21">
        <description>Class Twig</description>
        <long-description></long-description>
        <tag name="author" line="21" description="PhileCMS"/>
        <tag name="link" line="21" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="21" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="21" description="Phile\Plugin\Phile\TemplateTwig\Template"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="26" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>$settings</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::settings</full_name>
        <default></default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="26" description="&lt;p&gt;the complete phile config&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="31" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>$config</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::config</full_name>
        <default></default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="31" description="&lt;p&gt;the config for twig&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="36" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>$page</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::page</full_name>
        <default></default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="36" description="&lt;p&gt;the page model&lt;/p&gt;" type="\Phile\Model\Page" variable="">
            <type>\Phile\Model\Page</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="43" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>__construct</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::__construct()</full_name>
        <docblock line="43">
          <description>the constructor</description>
          <long-description></long-description>
          <tag name="param" line="43" description="&lt;p&gt;the configuration&lt;/p&gt;" type="array" variable="$config">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="56" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>setCurrentPage</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::setCurrentPage()</full_name>
        <docblock line="56">
          <description>method to set the current page</description>
          <long-description></long-description>
          <tag name="param" line="56" description="&lt;p&gt;the page model&lt;/p&gt;" type="\Phile\Model\Page" variable="$page">
            <type>\Phile\Model\Page</type>
          </tag>
          <tag name="return" line="56" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\TemplateInterface::setCurrentPage()" refers="\Phile\ServiceLocator\TemplateInterface::setCurrentPage()" link="/classes/Phile.ServiceLocator.TemplateInterface.html#method_setCurrentPage"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$page</name>
          <default></default>
          <type>\Phile\Model\Page</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="66" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>render</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::render()</full_name>
        <docblock line="66">
          <description>method to render the page/template</description>
          <long-description></long-description>
          <tag name="return" line="66" description="" type="mixed|string">
            <type>mixed</type>
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\TemplateInterface::render()" refers="\Phile\ServiceLocator\TemplateInterface::render()" link="/classes/Phile.ServiceLocator.TemplateInterface.html#method_render"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="84" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>doRender</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::doRender()</full_name>
        <docblock line="84">
          <description>wrapper to call the render engine</description>
          <long-description></long-description>
          <tag name="param" line="84" description="" type="" variable="$engine"/>
          <tag name="param" line="84" description="" type="" variable="$vars"/>
          <tag name="return" line="84" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$engine</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$vars</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="99" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>getEngine</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::getEngine()</full_name>
        <docblock line="99">
          <description>get template engine</description>
          <long-description></long-description>
          <tag name="return" line="99" description="" type="\Twig_Environment">
            <type>\Twig_Environment</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="117" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>getTemplateFileName</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::getTemplateFileName()</full_name>
        <docblock line="117">
          <description>get template file name</description>
          <long-description></long-description>
          <tag name="return" line="117" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="117" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="142" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>getTemplatePath</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::getTemplatePath()</full_name>
        <docblock line="142">
          <description>get file path to (sub-path) in theme-path</description>
          <long-description></long-description>
          <tag name="param" line="142" description="" type="string" variable="$sub">
            <type>string</type>
          </tag>
          <tag name="return" line="142" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sub</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig\Template" line="157" package="Phile\Plugin\Phile\TemplateTwig\Template">
        <name>getTemplateVars</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Template\Twig::getTemplateVars()</full_name>
        <docblock line="157">
          <description>get template vars</description>
          <long-description></long-description>
          <tag name="return" line="157" description="" type="array|mixed">
            <type>array</type>
            <type>mixed</type>
          </tag>
          <tag name="throws" line="157" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJydV21v2zYQ/u5fwRbBJGexve4FQ9s5a+Z6WIBmCxxjwJAEAiPRslC9jaTygjb/fXekSFNvjjF9SCzyeLx7nod31C+/lttyNDs+HpFjsmZZmVLJCMvjJGckTKkQMDEb5TRjoqQhI5fbJGU3l2kFFjf6xSxbPySxfXk/GlXCmC8Kjn9yScEtf9+eWbE4EZI/uRMXRcTSm0saM3d0xcpCJLLgT2qKUEF2Q67hFeP3Scg+FSGFKRvVeS4Z30AeEF6d9AKTJBg7vOHAB1rJbcGJ9rS4uFKDaZJ/JvBspSzFu9msxMkwE9OwyGqDkOWwPxrAfFHCW1HxkE0LHs/qWTG7OF8rcwDzM2ZwKJ6KhtDGShIYZhnLpSCd5EZfRhiqShAf2O6eckI5p09EboHYAlcD0SoLeM03mL6ynan/JS8kCyWLyJFgUiZ5LACyl7yiG7IB7OTDsD9tNuBNsYrOSvyRoQiG/JRKG20vdSAgpyoE5uthu0dJOc3qmOtInNgrTmVS5M0dqzsgj2yqPMQ5EgTWvW88zMn17VhZa+TxOZLbRExOrYXNu2Vg4AUTe0LevYuZPIddaB4yfzw5hVffU+oIFsqNB4OyOMM8/LH2+dzBImMg5IjIgsAmOs2Kc9CMQrcfGkWAwrafBmvOmax4TrLkkUVf74sk2osaBLDQe+MG/m6XAdjUvnND8kvpgd+IcRvwTNpDsydm4BBw3xu19ut3Yqzr49xEC/Qs1ZDhQlmBnkXDxhzUv2HCtTyI9+U9gPdbJRTzPIljCMx6wMczWQc6vICrsso4i7yThuW1py08Mj8l39TZnBAvopLWYxj7rV3kxFpDWCcVFSsNkXWiVg4q8oHTskSmChLSNFWM1eRpB/2iNIh3hnGzXnYHioZldijwFtPQlJw3rU/TJPuY/R2Y+hN6pcvuM6Qqwy3xb1ZVLpOMLR9DVqoojti45d7Ay5TbCyYEHhfXW4cJncDktBarDfAlLmKsCc2OP3BebrDjBMv8PuFFjj3nJXSd89A+OmlBke05ydlD7fiTGgoQO/EEgs38LrCXVG79sXu6sMU03Djx+fU2J80qPK7bhQJiRtBGKVC5ithdFRP2KKFPYw7JBhD+t0q4ERM8MOa/gojkk99wfO2p1d7tuM2nCnNySqNoaTz7TshmLPiI6xsJdolGVweRucGmjle2AT4blY98kFtePAjSkecBLHd13ynnneOCFbpWt6S2yBk7z4EA4TZo19M9AO828BI4AY9eH4bDzJn1E0t9L41mlylsM/XIlBzgpi8Q6wkV3VtDlNR3CTfheIXcBuwRCrvwG746MSta9floM9tsHPi8XjfE431p+H72SF5IuNlVeTR9fdJZ/ebH739++/a7Nz/81Jjar2b7oaDn+xStYikRKGgYvqjuJvgyJkmO5zZj6nWgZWiRw/W1utur/0PkrSkBTygyr+fKArHUfK7/WF4sr4KP56udRswVD1SClq4wXF2C/x7hWd+ovBkqL4XwM2V+QmCf5WL91+qf4Gp5ebY6g5/7UTfuDiokTnttY6iu0F/dXrsrJP+ngug7URvZiG1olUq8Rl03Lztw7uCcSXVdaReWhZ7zx02lenBhpL0LdCVqWdd35QCt2qtapjgkej3vvk6x0m2gQJ2lqbvVrduT9Bep81llTwnCM6qB1LpwJgAd8wmtbpC7aoqzXqNrusu+ne8QdsJon1C0NXJ5Hv0HTbWvPg==</source>
  </file>
  <file path="lib/Phile/Exception/AbstractException.php" generated-path="lib.Phile.Exception.AbstractException.html" hash="43721b2fab5d049b3441d1ebb8435dce" package="Default">
    <docblock line="0">
      <description>Created by PhpStorm.</description>
      <long-description>User: franae
Date: 30/10/13
Time: 14:47</long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile\Exception" line="20" package="Phile\Exception">
      <extends>\Exception</extends>
      <name>AbstractException</name>
      <full_name>\Phile\Exception\AbstractException</full_name>
      <docblock line="20">
        <description>Class AbstarctException</description>
        <long-description></long-description>
        <tag name="author" line="20" description="Frank NÃ¤gler"/>
        <tag name="link" line="20" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="20" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="20" description="Phile\Exception"/>
      </docblock>
    </class>
    <source>eJxlj81KA0EQhO/zFH3ew44hAWEVNKiBHBTBePPSmbS7S3Z+6J5ARHwb38QXs2eJS8BhLlX1MVVzfZO6ZGxVGajgjgkz7WD7Ac9desmRfV38VyFu4J0xIBV9r1QD8ws70zsvzqb36swWzeJSpTUmoCdJ6Ehf6gd6ezg6SrmP4cpMbQOKwHIrGdnlCdCopLd4yF1kgJXW7uHp57sdiMdk6NXQ0+WcpLE2lQbnpXbRnwBHQWgENI9JVTywozpya0+p2Mf15q9Ml+6x/Td2/IubdjKe7QQ6Zgo7gTP805gv8wuO+WrU</source>
  </file>
  <file path="plugins/phile/parserMarkdown/config.php" generated-path="plugins.phile.parserMarkdown.config.html" hash="c49d5965ad2ea2b117d7b5c748eb31a9" package="Default">
    <docblock line="0">
      <description>the configuration file</description>
      <long-description></long-description>
      <tag name="see" line="0" description="" link="https://michelf.ca/projects/php-markdown/configuration/"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <source>eJx90c1OwzAMB/B7n8LaJevEyIUTHwPBCyAkbpOqNHXWsDSpHJextyftgLXTRq7+2f4nuX9s6zaTi0UGC+AaQQdv7KYjxTZ4MNZhqvTFp4gINXMbb6VsrK7RmWutZEvhAzVHmQYtG0XbKuy8nIyRqV9mGSF35EERqf08g3QENi3vC3TYoOcidsbYLwEPKxAgV+LqgFiVxc5WXAsYnYRufoAPRb+4a0+BUS7iEaUdli1GcRG1hBWaoiN3gkahB1iqiD0bws497uC1Tm+1fgmE67fQMVK+XG2QnxN8JzfPQUr47QIbQcEmhAoIDRJ6jcABavWJw458mifFdqPYf3l+mfGFrYqEh+cbsdnsKJz128MkcUGUSm9P1LkZ2qk4CTMzIbAPjMuU4Ny8Y8dE9/VRhw4VHuj4KuMEg1DMVATfG/HPH6qypHN/mGf5XfYNf8LWwA==</source>
  </file>
  <file path="lib/Phile/Repository/PageCollection.php" generated-path="lib.Phile.Repository.PageCollection.html" hash="2bd250ced4bfacc236a2d8a6ca2564c7" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile\Repository" line="13" package="Phile\Repository">
      <extends/>
      <implements>\ArrayAccess</implements>
      <implements>\IteratorAggregate</implements>
      <implements>\Countable</implements>
      <name>PageCollection</name>
      <full_name>\Phile\Repository\PageCollection</full_name>
      <docblock line="13">
        <description>Page collection which delays searching for and loading pages until necessary.</description>
        <long-description></long-description>
        <tag name="author" line="13" description="PhileCMS"/>
        <tag name="link" line="13" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="13" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="13" description="Phile\Repository"/>
      </docblock>
      <property static="false" visibility="private" namespace="Phile\Repository" line="18" package="Phile\Repository">
        <name>$loader</name>
        <full_name>\Phile\Repository\PageCollection::loader</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="&lt;p&gt;A function to be used for loading the pages.&lt;/p&gt;" type="callback" variable="">
            <type>callback</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Phile\Repository" line="23" package="Phile\Repository">
        <name>$pages</name>
        <full_name>\Phile\Repository\PageCollection::pages</full_name>
        <default></default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="23" description="&lt;p&gt;of \Phile\Model\Page&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="30" package="Phile\Repository">
        <name>__construct</name>
        <full_name>\Phile\Repository\PageCollection::__construct()</full_name>
        <docblock line="30">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="30" description="&lt;p&gt;pages loader&lt;/p&gt;" type="callable" variable="$loader">
            <type>callable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$loader</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Phile\Repository" line="40" package="Phile\Repository">
        <name>load</name>
        <full_name>\Phile\Repository\PageCollection::load()</full_name>
        <docblock line="40">
          <description>Perform page loading.</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="52" package="Phile\Repository">
        <name>toArray</name>
        <full_name>\Phile\Repository\PageCollection::toArray()</full_name>
        <docblock line="52">
          <description>Get pages in a array.</description>
          <long-description></long-description>
          <tag name="return" line="52" description="of \Phile\Model\Page" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="58" package="Phile\Repository">
        <name>getIterator</name>
        <full_name>\Phile\Repository\PageCollection::getIterator()</full_name>
        <docblock line="58">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="64" package="Phile\Repository">
        <name>offsetExists</name>
        <full_name>\Phile\Repository\PageCollection::offsetExists()</full_name>
        <docblock line="64">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="70" package="Phile\Repository">
        <name>offsetGet</name>
        <full_name>\Phile\Repository\PageCollection::offsetGet()</full_name>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="76" package="Phile\Repository">
        <name>offsetSet</name>
        <full_name>\Phile\Repository\PageCollection::offsetSet()</full_name>
        <docblock line="76">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="82" package="Phile\Repository">
        <name>offsetUnset</name>
        <full_name>\Phile\Repository\PageCollection::offsetUnset()</full_name>
        <docblock line="82">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="88" package="Phile\Repository">
        <name>count</name>
        <full_name>\Phile\Repository\PageCollection::count()</full_name>
        <docblock line="88">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="58" code="PPC:ERR-50008">No summary for method getIterator()</error>
      <error line="64" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetExists</error>
      <error line="64" code="PPC:ERR-50008">No summary for method offsetExists()</error>
      <error line="70" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetGet</error>
      <error line="70" code="PPC:ERR-50008">No summary for method offsetGet()</error>
      <error line="76" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetSet</error>
      <error line="76" code="PPC:ERR-50015">Argument $value is missing from the Docblock of offsetSet</error>
      <error line="76" code="PPC:ERR-50008">No summary for method offsetSet()</error>
      <error line="82" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetUnset</error>
      <error line="82" code="PPC:ERR-50008">No summary for method offsetUnset()</error>
      <error line="88" code="PPC:ERR-50008">No summary for method count()</error>
    </parse_markers>
    <source>eJydVM1v2jAUv+eveAcOAXXk3o5tCFVVD0ho3U5jQsa8JFYdO/IHHZr432c7DgRIJ6gvyPF7v69n8/lrXdZJIkiFuiYUYVEyjsvvWEvNjFS7hyTJRqMERrAgBQKVnCM1TAp4KxktYYOc7DRoJIqWTBSQSwVEbIBLsvH72rVpsMIwDgIpak3UbuwAPeY3Yk3pGhra2fwlfORMvIJbpTG1vs+y2h/SSo+prGIBRaExFLhzWbudtIriWKoii6c6mz//COXO2KsXf+7NHWYJ5UTrYG529MaqmmOFwmhYTpUiuyn1yu9g+WxQEdc8LQqFBTHovs2ks0fWHJO/idcdAvPLcW+JAko4XzsNMIXciobBSFgjWI2bkFiblimxSWwcEbLwWyu2dVww8HWo3FD6eIhXCjKHZeN0Lt10lt5aP1ggusSaSaGNstS5bFUcaGqiSBUMeb+tnjjkZnPKZdduHEfbqxVt0dNzlGHoaCL0a2BKpj99iRSTo3l/uL+QvUDlkqyCljbPC/0KjVUCtpJtejM5CPUA6bkilkMaVTWOJ5MJCMv5sFPUkR6LQl4rN2u18vjpibHhw6Fz/46zJzQxYSaANGN+z9m1d+BsLkaGa37huCM17SiNZF2bJ2M5hy/QtA/nRgqBb/EJHgC6rMP/0so812ge/zBtdDpodrfRM+1aThh/RZzf11A/+eaP8PYyXkH4ciS8g8GWcItXEvcy+lcXQK6g/in0zW6t+GC81P/l3niVmp7e27NP/gHjkQ5Q</source>
  </file>
  <file path="lib/Phile/Core/Bootstrap.php" generated-path="lib.Phile.Core.Bootstrap.html" hash="f829358f69f70caa31194a9d61f1a97e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Config">\Phile\Core\Config</namespace-alias>
    <namespace-alias name="Event">\Phile\Core\Event</namespace-alias>
    <namespace-alias name="Registry">\Phile\Core\Registry</namespace-alias>
    <namespace-alias name="ServiceLocator">\Phile\Core\ServiceLocator</namespace-alias>
    <namespace-alias name="PluginException">\Phile\Exception\PluginException</namespace-alias>
    <namespace-alias name="PluginRepository">\Phile\Plugin\PluginRepository</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Core" line="20" package="Default">
      <extends/>
      <name>Bootstrap</name>
      <full_name>\Phile\Core\Bootstrap</full_name>
      <docblock line="20">
        <description>Bootstrap class</description>
        <long-description></long-description>
        <tag name="package" line="20" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="25" package="Default">
        <name>loadConfiguration</name>
        <full_name>\Phile\Core\Bootstrap::loadConfiguration()</full_name>
        <docblock line="25">
          <description>Loads $file into $configuration</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Phile\Core\Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="37" package="Default">
        <name>setupFolder</name>
        <full_name>\Phile\Core\Bootstrap::setupFolder()</full_name>
        <docblock line="37">
          <description>Creates and protects folder and path $directory</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$directory</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Phile\Core\Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="57" package="Default">
        <name>loadPlugins</name>
        <full_name>\Phile\Core\Bootstrap::loadPlugins()</full_name>
        <docblock line="57">
          <description>Loads all plug-ins</description>
          <long-description></long-description>
          <tag name="throws" line="57" description="" type="\Phile\Core\Exception\PluginException">
            <type>\Phile\Core\Exception\PluginException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventBus</name>
          <default></default>
          <type>\Phile\Core\Event</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Phile\Core\Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="82" package="Default">
        <name>setupErrorHandler</name>
        <full_name>\Phile\Core\Bootstrap::setupErrorHandler()</full_name>
        <docblock line="82">
          <description>Initializes error handling</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Phile\Core\Config</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="25" code="PPC:ERR-50015">Argument $file is missing from the Docblock of loadConfiguration</error>
      <error line="25" code="PPC:ERR-50015">Argument $config is missing from the Docblock of loadConfiguration</error>
      <error line="37" code="PPC:ERR-50015">Argument $directory is missing from the Docblock of setupFolder</error>
      <error line="37" code="PPC:ERR-50015">Argument $config is missing from the Docblock of setupFolder</error>
      <error line="57" code="PPC:ERR-50015">Argument $eventBus is missing from the Docblock of loadPlugins</error>
      <error line="57" code="PPC:ERR-50015">Argument $config is missing from the Docblock of loadPlugins</error>
      <error line="82" code="PPC:ERR-50015">Argument $config is missing from the Docblock of setupErrorHandler</error>
    </parse_markers>
    <source>eJyNVttu2zgQfddXTAMjkgI7TgsUAeLa29bIYgskQND0zQkElqIlojIpkFQd7zb/vkNSlnXJTQEieS5nDg+HI336q8zLYHoSwAl8JpXJpQK4yXnBlte3zlhw8Qvwyo0p9cV0Wlon3ehTKjd1AGVCMxeAflniL1kpyk6lyqa1V0+vv/3A8GkQCLJhuiSU+Tp3S6nYLAgq3TbgP7Hm2axvvvzNhBlYv7OMa6N2A8ctU7+RwJWkxEjVdl8+UFYaLsXdTVFlXDS/20HeVd++s1JqjjBYBhVzkn2V0mBhUgItiNZuge7p4An+C6x8LsFeJ3AlSaphtMYKwIWRMKJusZUilkAdNnX3svqJCoI26KKwrgS1IVAgxLKdFDm4MXjjHjF2GJ6AIzE9QHAtC2KYBgw17MGAXDtYloKF0k3SyFphfsj0teIWrr0UM5VCWEGLKmV+ebMm4vHwWHObLDZMZSxy8DVk7KMeg75kS8UcVyJSKJU0jBoNa1mkTHkbMTmMUq7QgRv0Fgk18i3/dhDRIfM1BfkaIrYpza6VE8OfPwivsD06SM1CM2aiUGFDJOgN4xjezedw9rSALck6Rd9ZgRL2gH3erhL3UTa/0NehcXZ+/nEMRlUsfgp8lBtCKdP6xmo4h6ND7unedTR7gUs7f0Cn8S5tlwljC0hlty1lYjcmRSG3d8I+w1rJDaDhTjir//3+w/npGf69b1Gwl2NQViahHrfHYzwoPFj7sMn8ucTiUOKBn3BRn4Em4LPJldxqeHZ2vPXo+jQduWkGI2ZvXyv9WvONSp/3Q175I9ntsNob4lK7hxfVnoNgW+gPsuhJgLpLZ4O6tqLHmyzs/UtRRF1O7SSmlFSdHCxigy6dI+rQ3EswWRjFswzPZMPGD6VwDKtmhTBfNKTu2zg44NweAVkbXHUfo9PFVFbCRDXNGBbDE+mhDsI1+7zPWp3dr0J8m2mSsfB+DG0zlSnaOm3Xponjx3CR6WZgcsENJwX/Fwewpz3xm6NByO1LSnU4hz6pUa3jXNVeL+B+7438ohTZRfEYs+3Lq+2+bwCeHc7fGuYanACQ40zG74bszXPYtcQ/NgvX88ohoAW/Rm2H7W9f2Ql6k42VPu7NrCbv+Bi6nwUXFznRtSkK3Zs/aRMKh1ONtdxIpI+HfF7E684yVCBxgEleK7DqFMBt8Q4H0ukpeyn38cNUovPKpHIrkr22z+Hc1oEDKOzBRFstU67Lguw8LR3232U9d/zEcH0M/gc+GihP</source>
  </file>
  <file path="plugins/phile/simpleFileDataPersistence/Classes/Persistence/SimpleFileDataPersistence.php" generated-path="plugins.phile.simpleFileDataPersistence.Classes.Persistence.SimpleFileDataPersistence.html" hash="12332e5eb24dce080f323c6b8bc498cb" package="Default">
    <docblock line="0">
      <description>persistence implementation class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="PersistenceInterface">\Phile\ServiceLocator\PersistenceInterface</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence" line="17" package="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence">
      <extends/>
      <implements>\Phile\ServiceLocator\PersistenceInterface</implements>
      <name>SimpleFileDataPersistence</name>
      <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence\SimpleFileDataPersistence</full_name>
      <docblock line="17">
        <description>Class SimpleFileDataPersistence</description>
        <long-description></long-description>
        <tag name="author" line="17" description="Frank NÃ¤gler"/>
        <tag name="link" line="17" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="17" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="17" description="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence" line="22" package="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence">
        <name>$dataDirectory</name>
        <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence\SimpleFileDataPersistence::dataDirectory</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="&lt;p&gt;the data storage directory&lt;/p&gt;" type="string" variable="$dataDirectory">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence" line="27" package="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence">
        <name>__construct</name>
        <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence\SimpleFileDataPersistence::__construct()</full_name>
        <docblock line="27">
          <description>the constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence" line="39" package="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence">
        <name>has</name>
        <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence\SimpleFileDataPersistence::has()</full_name>
        <docblock line="39">
          <description>check if key exists</description>
          <long-description></long-description>
          <tag name="param" line="39" description="" type="" variable="$key"/>
          <tag name="return" line="39" description="" type="boolean|mixed">
            <type>boolean</type>
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\PersistenceInterface::has()" refers="\Phile\ServiceLocator\PersistenceInterface::has()" link="/classes/Phile.ServiceLocator.PersistenceInterface.html#method_has"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence" line="52" package="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence">
        <name>get</name>
        <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence\SimpleFileDataPersistence::get()</full_name>
        <docblock line="52">
          <description>get value for given key</description>
          <long-description></long-description>
          <tag name="param" line="52" description="" type="" variable="$key"/>
          <tag name="return" line="52" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="52" description="" type="\Phile\Exception\AbstractException">
            <type>\Phile\Exception\AbstractException</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\PersistenceInterface::get()" refers="\Phile\ServiceLocator\PersistenceInterface::get()" link="/classes/Phile.ServiceLocator.PersistenceInterface.html#method_get"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence" line="69" package="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence">
        <name>set</name>
        <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence\SimpleFileDataPersistence::set()</full_name>
        <docblock line="69">
          <description>set value for given key</description>
          <long-description></long-description>
          <tag name="param" line="69" description="" type="" variable="$key"/>
          <tag name="param" line="69" description="" type="" variable="$value"/>
          <tag name="return" line="69" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\PersistenceInterface::set()" refers="\Phile\ServiceLocator\PersistenceInterface::set()" link="/classes/Phile.ServiceLocator.PersistenceInterface.html#method_set"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence" line="83" package="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence">
        <name>delete</name>
        <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence\SimpleFileDataPersistence::delete()</full_name>
        <docblock line="83">
          <description>delte given key/index</description>
          <long-description></long-description>
          <tag name="param" line="83" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="83" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="83" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
          <tag name="throws" line="83" description="" type="\Phile\Exception\AbstractException">
            <type>\Phile\Exception\AbstractException</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\PersistenceInterface::delete()" refers="\Phile\ServiceLocator\PersistenceInterface::delete()" link="/classes/Phile.ServiceLocator.PersistenceInterface.html#method_delete"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence" line="98" package="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence">
        <name>getInternalKey</name>
        <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence\SimpleFileDataPersistence::getInternalKey()</full_name>
        <docblock line="98">
          <description>generate internal key</description>
          <long-description></long-description>
          <tag name="param" line="98" description="" type="" variable="$key"/>
          <tag name="return" line="98" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence" line="110" package="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence">
        <name>getStorageFile</name>
        <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence\SimpleFileDataPersistence::getStorageFile()</full_name>
        <docblock line="110">
          <description>get storage filename</description>
          <long-description></long-description>
          <tag name="param" line="110" description="" type="" variable="$key"/>
          <tag name="return" line="110" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>eJzNVslu2zAQvesrJkEA20FqnXppuiRoksLoFsQ5GjAYaiwRlkiBpBy7Sf6mf9If65Cil3hRA6MFyoslznD0liHptx/KrIzi4+MIjqFEbYSxKDmCKMocC5SWWaEk8JwZQzlxJFmBpmSUcp2JHAfXeZUKOahf+n7ZFT1eMMuul/UGK8+nUVSZ+fI+6ong+EVxZpVeTetJi3rEfH4A+NGhgJ0foRSXdcYqmykNcKWZHMO3Xz/THLWP5IImaGTWluZNHJcOAy9Ml6siJHCUBM4lUFyV9KYqzbGrdBqHqIm/9m59OukwZun+UnhFeTOrpRUGtskTPUSOkpfIDYI1YRqM1UKmcJRQtQuhkZO8M7AZgpuhsNIOeTIPhcWx/y21sjSNydp6smLtW64gV5K+VrmM51WqO1IMRpXkvomGw0Vmu+MzauhuHNlMmFfvn6N9B/3b7zfnny6HF72bU5/7tIGAZ8jHIEYwxhnglOQxIbTQo2SaFXBECesRjbbSEu6Uyh8LMcWkkUDGTNtVWQcfqrRH5N6whtAOhFK0/VpqZ229utPZxYWyYcLyCmFEDZyKCUrYgvqPfFapwJnNtLo3EBrzcsqxdHQG53dkBuN2MdNInrBtJU/Ktw8C24VAnZUENzwEkHj/AhTtQ6meN6kTw7nbenDFn1rB5oPDIOSKmCt2VLRVtWC5+IG1M8TAdaB1W2k/f8ye/iym/OIm0x4nSjQ3oQk+nIRq6354qmX1MqonsNQolNtJPsHc4pJ0LGSC0+3U54fPpgJMazaj7a681Rs7dZcUf6uJiQNaDPrVWOZQ6LTxE+3Of9vh86dKuoussYV3nzASNSMfhbs/JMv3Ol9qf3dcGasnRi985TPOmk7OInldh5sOxoVWxNL9C/l3qDfk3I56653VhaUtG+wp2uompjWn+RT9BisR13I=</source>
  </file>
  <file path="lib/Phile/FilterIterator/ContentFileFilterIterator.php" generated-path="lib.Phile.FilterIterator.ContentFileFilterIterator.html" hash="48c9c2436020887fe644b587ff9a2c3f" package="Default">
    <docblock line="0">
      <description>the filter class for content files</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Container">\Phile\Core\Container</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\FilterIterator" line="14" package="Phile\FilterIterator">
      <extends>\FilterIterator</extends>
      <name>ContentFileFilterIterator</name>
      <full_name>\Phile\FilterIterator\ContentFileFilterIterator</full_name>
      <docblock line="14">
        <description>Class ContentFileFilterIterator</description>
        <long-description></long-description>
        <tag name="package" line="14" description="Phile\FilterIterator"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\FilterIterator" line="20" package="Phile\FilterIterator">
        <name>accept</name>
        <full_name>\Phile\FilterIterator\ContentFileFilterIterator::accept()</full_name>
        <docblock line="20">
          <description>method to decide if file is filterd or not</description>
          <long-description></long-description>
          <tag name="return" line="20" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJx9UlFLwzAQfs+vuIdB2qKtvm46BwNhb4KPzo0svbbBLgnNVYSx/26StsOJGGia3Pfd991d+/BkG8uKLGOQATUIlWoJO5CtcA4q409GE2oKADrPKpgWR3RWSISXxge3zzFl4x9Bplsw1rsJWpsubJqE0hig0Wkd5deDtM/Haw1PCayVN/kQ9d8+sRT5vw7glwdKB79zTwz8isWElcERqTElkIESpSoRVBU7BuXGkZTg9bShKWPVIfWdhoMx7Rgr4tv2h1ZJqHotSRkNQkq0lKQRHIyvzEe5T9HB9tW2oYuNrgzMqFHuB6W4nGe+LXiEy1zn8xppox0JLTFJb5f+mvA4tL0nVarmU3D8mnuvwNPFRXHsJbEd1vujINkkvNi97bb5++n+nGcc8sE1B17wm6G2KBnKDT9EkqawhLtR88zO7BtBa7eG</source>
  </file>
  <file path="plugins/phile/phpFastCache/Classes/Plugin.php" generated-path="plugins.phile.phpFastCache.Classes.Plugin.html" hash="01ac066704f9c7df50dd57f6e2e40c04" package="Default">
    <docblock line="0">
      <description>Plugin class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ServiceLocator">\Phile\Core\ServiceLocator</namespace-alias>
    <namespace-alias name="AbstractPlugin">\Phile\Plugin\AbstractPlugin</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\PhpFastCache" line="19" package="Phile\Plugin\Phile\PhpFastCache">
      <extends>\Phile\Plugin\AbstractPlugin</extends>
      <name>Plugin</name>
      <full_name>\Phile\Plugin\Phile\PhpFastCache\Plugin</full_name>
      <docblock line="19">
        <description>Class Plugin
Default Phile cache engine</description>
        <long-description></long-description>
        <tag name="author" line="19" description="PhileCMS"/>
        <tag name="link" line="19" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="19" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="19" description="Phile\Plugin\Phile\PhpFastCache"/>
        <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin" refers="\Phile\Plugin\AbstractPlugin" link="/classes/Phile.Plugin.AbstractPlugin.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\PhpFastCache" line="22" package="Phile\Plugin\Phile\PhpFastCache">
        <name>$events</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\Plugin::events</full_name>
        <default>array('plugins_loaded' =&gt; 'onPluginsLoaded')</default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin::events" refers="\Phile\Plugin\AbstractPlugin::events" link="/classes/Phile.Plugin.AbstractPlugin.html#property_events"/>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Phile\Plugin\Phile\PhpFastCache" line="25" package="Phile\Plugin">
        <name>$plugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::plugin</full_name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;plugin attributes&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\PhpFastCache" line="30" package="Phile\Plugin">
        <name>$events</name>
        <full_name>\Phile\Plugin\AbstractPlugin::events</full_name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="&lt;p&gt;subscribed Phile events ['eventName' =&gt; 'classMethodToCall']&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\PhpFastCache" line="35" package="Phile\Plugin">
        <name>$settings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::settings</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;the plugin settings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\PhpFastCache" line="27" package="Phile\Plugin\Phile\PhpFastCache">
        <name>onPluginsLoaded</name>
        <full_name>\Phile\Plugin\Phile\PhpFastCache\Plugin::onPluginsLoaded()</full_name>
        <docblock line="27">
          <description>onPluginsLoaded method</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\PhpFastCache" line="46" package="Phile\Plugin">
        <name>initializePlugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::initializePlugin()</full_name>
        <docblock line="46">
          <description>initialize plugin</description>
          <long-description>try to keep all initialization in one method to have a clean class
for the plugin-user</long-description>
          <tag name="param" line="46" description="" type="string" variable="$pluginKey">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="46" description="since 1.5.1 will be declared 'final'"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pluginKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\PhpFastCache" line="98" package="Phile\Plugin">
        <name>injectSettings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::injectSettings()</full_name>
        <docblock line="98">
          <description>inject settings</description>
          <long-description>backwards compatibility to Phile 1.4</long-description>
          <tag name="param" line="98" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="98" description="since 1.5.1 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\PhpFastCache" line="109" package="Phile\Plugin">
        <name>on</name>
        <full_name>\Phile\Plugin\AbstractPlugin::on()</full_name>
        <docblock line="109">
          <description>implements EventObserverInterface</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="string" variable="$eventKey">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Gateway\EventObserverInterface::on()" refers="\Phile\Gateway\EventObserverInterface::on()" link="/classes/Phile.Gateway.EventObserverInterface.html#method_on"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\PhpFastCache" line="131" package="Phile\Plugin">
        <name>getPluginPath</name>
        <full_name>\Phile\Plugin\AbstractPlugin::getPluginPath()</full_name>
        <docblock line="131">
          <description>get file path to plugin root (trailing slash) or to a sub-item</description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="string" variable="$subPath">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="null if item does not exist" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subPath</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="22" code="PPC:ERR-50007">No summary for property $events</error>
    </parse_markers>
    <source>eJyFU8Fu2zAMvesreAjgJOhs7LJD0nQr0g4NkGAG2ls8BKrM2EIcSZDkdECRf58kK67THaaTyff4yEfJt99VrUg2nRKYQt60FRfAGmqMizMi6BGNogwhr3mDRUcoYlCrn9TYJWU1zglpzYW1lBqLZ9QnznAtGbVSzwdwFLl/NVZTZrvQCcQhlr57HMXHD7inbWO7YmC+G6BwIDrUE37Q1tZSQ8dYbp5DsuHiAO7U1iozyzLlQXY0KZPHSGAo3FCe4HCpXCRbzTCVusoiarLN6iXQ3RYOtPrvIsLa2MAC4B+LojRw7Ze8E+LHU1paZBZLGOEJhTWwgG2iAsfsGklLLBNY3EEiRVdp1l3y97xTCGvzZwqfKHBEt5gyolnXr3111mDfCma5FJ9LxpPAeu9q3OF7GOdPq/Xjbrle7Ta/Hh4nAzT0z0ANFgBCWniT+sBFBc6+K4OjLDFN06syjbbV7tov8Zn0nyPjXozf9QJGtubmy51Ba52e2SYR8u57OpNiz6t/2R+U1l2lHUfiNnG3wE9O4wb6VK87GQgro79+61wtQOAbFEOnxRM2CnWRe9Z9SZVFPb7M3ktP5gNj4REOBcMDepF536jX+eg9mOj6p5rNNFbcOHrMj5Ogtwtlyc2wXxQ5kzP5C3UTOs8=</source>
  </file>
  <file path="lib/Phile/Session.php" generated-path="lib.Phile.Session.html" hash="2b800fc07bf9589b135738f544010333" package="Default">
    <docblock line="0">
      <description>The Session class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile" line="17" package="Phile">
      <extends>\Phile\Core\Session</extends>
      <name>Session</name>
      <full_name>\Phile\Session</full_name>
      <docblock line="17">
        <description>the Session class for implementing a session</description>
        <long-description></long-description>
        <tag name="author" line="17" description="Frank NÃ¤gler"/>
        <tag name="link" line="17" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="17" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="17" description="Phile"/>
        <tag name="deprecated" line="17" description="since 1.4 will be removed in 1.6"/>
        <tag name="use" line="17" description="\Phile\Core\Session"/>
        <tag name="inherited_from" description="\Phile\Core\Session" refers="\Phile\Core\Session" link="/classes/Phile.Core.Session.html"/>
      </docblock>
      <property static="true" visibility="public" namespace="Phile" line="20" package="Phile\Core">
        <name>$isStarted</name>
        <full_name>\Phile\Core\Session::isStarted</full_name>
        <default>false</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="20" description="&lt;p&gt;mark if session is started&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="Phile" line="25" package="Phile\Core">
        <name>$sessionId</name>
        <full_name>\Phile\Core\Session::sessionId</full_name>
        <default>''</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;the session id&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="30" package="Phile\Core">
        <name>start</name>
        <full_name>\Phile\Core\Session::start()</full_name>
        <docblock line="30">
          <description>method to start the session</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Phile\Core\Session</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="59" package="Phile\Core">
        <name>destroy</name>
        <full_name>\Phile\Core\Session::destroy()</full_name>
        <docblock line="59">
          <description>method to destroy the session</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Phile\Core\Session</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="68" package="Phile\Core">
        <name>save</name>
        <full_name>\Phile\Core\Session::save()</full_name>
        <docblock line="68">
          <description>method to save and close the session</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Phile\Core\Session</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="79" package="Phile\Core">
        <name>set</name>
        <full_name>\Phile\Core\Session::set()</full_name>
        <docblock line="79">
          <description>method to set value into session</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Phile\Core\Session</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="95" package="Phile\Core">
        <name>get</name>
        <full_name>\Phile\Core\Session::get()</full_name>
        <docblock line="95">
          <description>method to get value from session</description>
          <long-description></long-description>
          <tag name="param" line="95" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="95" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="95" description="" type="null|mixed">
            <type>null</type>
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Phile\Core\Session</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="109" package="Phile\Core">
        <name>getSessionId</name>
        <full_name>\Phile\Core\Session::getSessionId()</full_name>
        <docblock line="109">
          <description>get the session id</description>
          <long-description></long-description>
          <tag name="return" line="109" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Phile\Core\Session</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="125" package="Phile\Core">
        <name>isEmpty</name>
        <full_name>\Phile\Core\Session::isEmpty()</full_name>
        <docblock line="125">
          <description>check id key is empty/set or not</description>
          <long-description></long-description>
          <tag name="param" line="125" description="" type="" variable="$key"/>
          <tag name="return" line="125" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Phile\Core\Session</inherited_from>
      </method>
    </class>
    <source>eJxtkEFKBDEQRfc5Ra170UEQFyooCMIsFGFm2ZuYLjthkkpIpVUQb+NNvJjV6WkX4l/+ej+VX9c32WWlu05BBweHsEdmnwhsMMxiakUmImdjEZ6cD3ilNrz+xeElFfAxB4xI1dMEBngFhF8it2auTqBF98XQER6/v6aApQ2DF2OVqzXzpdZ5WWkj9zbFE2ORGDdGkJTFSHOx2Kcy6RPA+mF3aAn5+tFMLdEKNHPEXNCaiiOwJ+l21p/Dmw8BnhEKxvQqE09iXzR+XlcuGtorw10qOOx/22m1nmA7CL5XpJH/pT/Up/oB6z53mw==</source>
  </file>
  <file path="lib/Phile/Core/Session.php" generated-path="lib.Phile.Core.Session.html" hash="ec3d97fc2e72331e7664e676da6d8db1" package="Default">
    <docblock line="0">
      <description>The Session class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile\Core" line="15" package="Phile\Core">
      <extends/>
      <name>Session</name>
      <full_name>\Phile\Core\Session</full_name>
      <docblock line="15">
        <description>the Session class for implementing a session</description>
        <long-description></long-description>
        <tag name="author" line="15" description="Frank NÃ¤gler"/>
        <tag name="link" line="15" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="15" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="15" description="Phile\Core"/>
      </docblock>
      <property static="true" visibility="public" namespace="Phile\Core" line="20" package="Phile\Core">
        <name>$isStarted</name>
        <full_name>\Phile\Core\Session::isStarted</full_name>
        <default>false</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="20" description="&lt;p&gt;mark if session is started&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="Phile\Core" line="25" package="Phile\Core">
        <name>$sessionId</name>
        <full_name>\Phile\Core\Session::sessionId</full_name>
        <default>''</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;the session id&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="30" package="Phile\Core">
        <name>start</name>
        <full_name>\Phile\Core\Session::start()</full_name>
        <docblock line="30">
          <description>method to start the session</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="59" package="Phile\Core">
        <name>destroy</name>
        <full_name>\Phile\Core\Session::destroy()</full_name>
        <docblock line="59">
          <description>method to destroy the session</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="68" package="Phile\Core">
        <name>save</name>
        <full_name>\Phile\Core\Session::save()</full_name>
        <docblock line="68">
          <description>method to save and close the session</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="79" package="Phile\Core">
        <name>set</name>
        <full_name>\Phile\Core\Session::set()</full_name>
        <docblock line="79">
          <description>method to set value into session</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="95" package="Phile\Core">
        <name>get</name>
        <full_name>\Phile\Core\Session::get()</full_name>
        <docblock line="95">
          <description>method to get value from session</description>
          <long-description></long-description>
          <tag name="param" line="95" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="95" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="95" description="" type="null|mixed">
            <type>null</type>
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="109" package="Phile\Core">
        <name>getSessionId</name>
        <full_name>\Phile\Core\Session::getSessionId()</full_name>
        <docblock line="109">
          <description>get the session id</description>
          <long-description></long-description>
          <tag name="return" line="109" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="125" package="Phile\Core">
        <name>isEmpty</name>
        <full_name>\Phile\Core\Session::isEmpty()</full_name>
        <docblock line="125">
          <description>check id key is empty/set or not</description>
          <long-description></long-description>
          <tag name="param" line="125" description="" type="" variable="$key"/>
          <tag name="return" line="125" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>eJy1Vm1v2jAQ/s6vuEpIgapq2n6ZRFd1U8s0pL4Jqn3ppsgNR7DIm2yHtdr4N/sn+2M7Ow6EkFCqduYDSfzc3XOPz2d/PE+nacvd32/BPtxPEUYoJU9i8EMmJX10WzGLUKbMR7ib8hC/XyQCT1uFjarawCQRwKM0xAhjxeMAGMgcQHht8ollakog+CJYPIObv3+CEIWZCTl9oDFVKpU91011RD+Sh34SWYCPsUQDoPkkpbckEz4eJiJw7ax0rwf3Bk60ZywoMzcp5UQt7davlg5p8tGDzOZMwGOShBAxMQM+KRIALkEqJhSOLdY1//RNcR/S7JEYQJvLUQ6CM5iwUGq56kJIJbQ+WsJlgK2OLWqgHTvOptcISdgxqCRnWfa85tb6s94nWewrHdwYdboGkouiB6XfkRhOer1yYmc2tW4JaRjn4Tyf+VP0Qh5xhaLjpILPmUKne7oFjU8pF9g5PjmqwHIKOdSSrMbNvVVZghIZrvta1HheN6tzrXF3XwdXfe/iauBd317261B6tL1Rf/itP3xwhv3r2/u+9/nycuj8IC4dLiWqTgOAMjpvNO6Bc3zy4fCIfsfO6UbcRS3fPK+AQq5568LeWVOgpqQK8cdINZs8d7qbHMowu0bbQQIDjFFQVXh83AzWOchqDgeNCbxZHF3ZcRaGzVK8M6PV2+rJlmR5vxeyrbRabNn/dqFe2wGW61vpAVlcVO5oNLi9KeXUUBnbuEk2R2DxmM6LhFr5a5sUWW/wK1j8FNRuPON3JyaoYM7CDIHH5rXMYtmqUyZYVDTr9gyfKzMRf6JeA23jaacUtJbk58Da1HXcvZe6kq3D6k5b1dBytR50LN2A8mgvyxIsZZmIJHqrLGOcsCxUVXOBKhOx2Wq/DXQX5YKVctYt2N36rhIuHy1J2y247EepejYM8nZdkOhV1W4SWUtbe95Xdcl13VGTUdEnag/v99Oh2paasqTD3Kd70xhICn1nQi2bq3cbXfviZKMW8oIp1VBVDX0Z20WLtRX6vyWxtzrNS+veXXadResfRfkI/g==</source>
  </file>
  <file path="lib/Phile/ServiceLocator.php" generated-path="lib.Phile.ServiceLocator.html" hash="4df720fbde4d053bc30a388c35bbad83" package="Default">
    <docblock line="0">
      <description>The SerciveLocator class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile" line="17" package="Phile">
      <extends>\Phile\Core\ServiceLocator</extends>
      <name>ServiceLocator</name>
      <full_name>\Phile\ServiceLocator</full_name>
      <docblock line="17">
        <description>the Service Locator class</description>
        <long-description></long-description>
        <tag name="author" line="17" description="Frank NÃ¤gler"/>
        <tag name="link" line="17" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="17" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="17" description="Phile"/>
        <tag name="deprecated" line="17" description="since 1.4 will be removed"/>
        <tag name="use" line="17" description="\Phile\Core\ServiceLocator"/>
        <tag name="inherited_from" description="\Phile\Core\ServiceLocator" refers="\Phile\Core\ServiceLocator" link="/classes/Phile.Core.ServiceLocator.html"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="26" package="Default">
        <name>registerService</name>
        <full_name>\Phile\Core\ServiceLocator::registerService()</full_name>
        <docblock line="26">
          <description>method to register a service</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;the key for the service&lt;/p&gt;" type="string" variable="$serviceKey">
            <type>string</type>
          </tag>
          <tag name="param" line="26" description="" type="mixed" variable="$object">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="26" description="" type="\Phile\Exception\ServiceLocatorException">
            <type>\Phile\Exception\ServiceLocatorException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$serviceKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Phile\Core\ServiceLocator</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="38" package="Default">
        <name>hasService</name>
        <full_name>\Phile\Core\ServiceLocator::hasService()</full_name>
        <docblock line="38">
          <description>checks if a service is registered</description>
          <long-description></long-description>
          <tag name="param" line="38" description="" type="string" variable="$serviceKey">
            <type>string</type>
          </tag>
          <tag name="return" line="38" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$serviceKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Core\ServiceLocator</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="51" package="Default">
        <name>getService</name>
        <full_name>\Phile\Core\ServiceLocator::getService()</full_name>
        <docblock line="51">
          <description>returns a service</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;the service key&lt;/p&gt;" type="string" variable="$serviceKey">
            <type>string</type>
          </tag>
          <tag name="return" line="51" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="51" description="" type="\Phile\Exception\ServiceLocatorException">
            <type>\Phile\Exception\ServiceLocatorException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$serviceKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Core\ServiceLocator</inherited_from>
      </method>
    </class>
    <source>eJx9kMFKxDAURff5irfuokFwpQMKgiCoCM6ym5hemjBpEpK0Doh/M38yP2b62lnowre8957kvre7iyYK2TSCGtob0DuStjOeg1YlJNJO5Vw9KbwakaPSoDdjHW7FhSorNdtq/cUW/15NxVRtmcek/IFez6fBIbHpbBXWMaXEfCNlXN7XY251GLeMhs+4ZGokxCqEKWm0IQ1yC2T58rRnovY8qIEJbstij5hQ+6GnbH1te9Ve06d1jj5ACWOY0XNwWv9apmO8ewgJ3bbktiMfhfek3wbhWOD7/B/7Jb7FD40leZ8=</source>
  </file>
  <file path="lib/Phile/Test/TestCase.php" generated-path="lib.Phile.Test.TestCase.html" hash="fe5060b8084145e07ee90da49523b978" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="author" line="0" description="PhileCMS"/>
      <tag name="link" line="0" description="https://philecms.com" link="https://philecms.com"/>
      <tag name="license" line="0" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Bootstrap">\Phile\Core\Bootstrap</namespace-alias>
    <namespace-alias name="Config">\Phile\Core\Config</namespace-alias>
    <namespace-alias name="Container">\Phile\Core\Container</namespace-alias>
    <namespace-alias name="Event">\Phile\Core\Event</namespace-alias>
    <namespace-alias name="Registry">\Phile\Core\Registry</namespace-alias>
    <namespace-alias name="Utility">\Phile\Core\Utility</namespace-alias>
    <namespace-alias name="Phile">\Phile\Phile</namespace-alias>
    <namespace-alias name="PHPUnitTestCase">\PHPUnit\Framework\TestCase</namespace-alias>
    <namespace-alias name="ServerRequestInterface">\Psr\Http\Message\ServerRequestInterface</namespace-alias>
    <constant namespace="" line="56" package="Default">
      <name>CONTENT_DIR</name>
      <full_name>\CONTENT_DIR</full_name>
      <value>$config-&gt;get('content_dir')</value>
      <docblock line="56">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="56" description="Default"/>
      </docblock>
    </constant>
    <constant namespace="" line="57" package="Default">
      <name>CONTENT_EXT</name>
      <full_name>\CONTENT_EXT</full_name>
      <value>$config-&gt;get('content_ext')</value>
      <docblock line="57">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="57" description="Default"/>
      </docblock>
    </constant>
    <class final="false" abstract="true" namespace="Phile\Test" line="23" package="Default">
      <extends>\PHPUnit\Framework\TestCase</extends>
      <name>TestCase</name>
      <full_name>\Phile\Test\TestCase</full_name>
      <docblock line="23">
        <description>Class for Phile test-cases</description>
        <long-description></long-description>
        <tag name="package" line="23" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Test" line="32" package="Default">
        <name>createPhileCore</name>
        <full_name>\Phile\Test\TestCase::createPhileCore()</full_name>
        <docblock line="32">
          <description>Creates a Phile-core with bootstrap configuration for testing</description>
          <long-description></long-description>
          <tag name="param" line="32" description="" type="\Phile\Core\Event" variable="$event">
            <type>\Phile\Core\Event</type>
          </tag>
          <tag name="param" line="32" description="" type="\Phile\Core\Config" variable="$config">
            <type>\Phile\Core\Config</type>
          </tag>
          <tag name="return" line="32" description="configured core" type="\Phile\Phile">
            <type>\Phile\Phile</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default>null</default>
          <type>\Phile\Core\Event</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default>null</default>
          <type>\Phile\Core\Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Test" line="81" package="Default">
        <name>createServerRequestFromArray</name>
        <full_name>\Phile\Test\TestCase::createServerRequestFromArray()</full_name>
        <docblock line="81">
          <description>Creates ServerRequest</description>
          <long-description></long-description>
          <tag name="param" line="81" description="&lt;p&gt;$_SERVER environment&lt;/p&gt;" type="array" variable="$server">
            <type>array</type>
          </tag>
          <tag name="return" line="81" description="" type="\Psr\Http\Message\ServerRequestInterface">
            <type>\Psr\Http\Message\ServerRequestInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$server</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyNVttu2zgQfddXsFgDkgPb2mencS+OszWKtFnHKRYbBwYj0TJRmdSSVNJg23/fIUVK1CXA6sEXzvDM4ZnhjN6+K45FEJ+dBegMvcelOnKB0M2R5mR5fWsWc8q+I3iOShVyHseFNiYnOUv4yTokhEliHMDOC/jHS5GQGRdZbK0yvl5vwT0OAoZPRBY4IVWc3ZZIdR4EpXQLSy7I7iPnSiqBi/OuZcnZgWZDywpTRkTPsnoiTPVWNySjEOClZ7hTNKeqtW4+7cKnmztG1e5KwDGeufhu+C8xmLB0Vrdkt0ix+wTi7K6JlDgju1sinojYkH9K8FszRcQB5AANbCKWOZYSHSAVJjBS4DZNAE8aBfGjFiZRKDF+dXzyQxGW9kgE/wY6fwZbP4AvCAZMhCv8aQLHRs9UHdGjUx0lRuVSYEU5M1w0C8oyC+Kw3hcYlEBGYzQi+qtjqvKFRhVibRRElYLZE7poJEWajHWKzXchuCKJAtOhZImhk5gDVGUK7pEfHV0gVub5pBPXLo8NZKWIUSX+DUlgUlj32tBsc7/ezREjz8iVn3OkBxS9sT7TxRHLKCQsES+FZvqZvITjsRfPg54uIHDXeYJCq3M4bmL8amhp67JDbbpQ/IMQ+CWCPQNHS9zVqG22xufznOM0qmEyTaj6s0+pCMdohsK43j6DZhH6IUa1CcjUF3A+B5w1kwqzhETjtlRVkoYkqTZbVUxu9yavH0sJsth9viYDJ63r16cIxX3RipA1ET4UhS+08Z4ucJrW/Seqq85yBz4Tp/wY6QseeVl5JdmXVPj56gl93tpUB68StPTvYuQhQnZScsBlrqTJTcPrfLjiTkRkpEXXy6Z+AA40SqNw+fXLdvVlu79cb6AMfv60lrZh0j8RtCBVHanDoYe8+ms7jKwNryFDjzPILWhTJvO59KquTlXXtyPtTV5mlMmh1HY2unlh4kRwS09FDk3oGxa6PO8f/NIcvoYnmqY5ecauv7Xq7bo2+gXXbHE3YKj6NEiv7pw3NAdBs4yIKDSje6a9Zw3wDILrA4TNUoguFsiL/dAtp8ZkuFcMJuj31zSwvd64VS729g4MpdZwHB42WPc6NJLGE432t6vNt9UGEfZEBWcnfwTZyMMT9/+NmdbeK8FPVattkxieLo3V/YIhcv/QGR5U6oqyHvfhZvXn3ep2u7/brMOH/vAYdIMIYRwODQwrwO5veDXYXVJ4beCCy/YryJVZhco+wOn+yPkjzqXjM3b5+hX8B+FxFY8=</source>
  </file>
  <file path="lib/Phile/Exception/PluginException.php" generated-path="lib.Phile.Exception.PluginException.html" hash="976bbf277465cd52d9b3822dc8bae759" package="Default">
    <docblock line="0">
      <description>Plugin Exception</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile\Exception" line="16" package="Phile">
      <extends>\Phile\Exception\AbstractException</extends>
      <name>PluginException</name>
      <full_name>\Phile\Exception\PluginException</full_name>
      <docblock line="16">
        <description>the PluginException class</description>
        <long-description></long-description>
        <tag name="author" line="16" description="Frank NÃ¤gler"/>
        <tag name="link" line="16" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="16" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="16" description="Phile"/>
        <tag name="inherited_from" description="\Phile\Exception\AbstractException" refers="\Phile\Exception\AbstractException" link="/classes/Phile.Exception.AbstractException.html"/>
      </docblock>
    </class>
    <source>eJxljzEOAiEQRXtOMfUWS68maqGJhWYLSxvECRBZIAybbGK8jTfxYrIE18LpZt7/mf9X66AD403DoIHODso42I0SQzLe5RtnzIkeKQiJ0Glj8TLjJfsak8ZqniFIK4gynPhGDEn7CLCPwt3h9H4pi7EQa/Ihj04p0ILzMP2QPbXS91Ug0REWQeY+5M0PUWLro+KVEj8ezkWeg96FqllLgRLkLx6OCd2NYHulFIVMv9IP9mQfxyNcJw==</source>
  </file>
  <file path="lib/Phile/Exception/RepositoryException.php" generated-path="lib.Phile.Exception.RepositoryException.html" hash="6d61b0f878b40c2d6e63beaede3aefa5" package="Default">
    <docblock line="0">
      <description>Plugin Exception</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile\Exception" line="16" package="Phile">
      <extends>\Phile\Exception\AbstractException</extends>
      <name>RepositoryException</name>
      <full_name>\Phile\Exception\RepositoryException</full_name>
      <docblock line="16">
        <description>the RepositoryException class</description>
        <long-description></long-description>
        <tag name="author" line="16" description="Frank NÃ¤gler"/>
        <tag name="link" line="16" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="16" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="16" description="Phile"/>
        <tag name="inherited_from" description="\Phile\Exception\AbstractException" refers="\Phile\Exception\AbstractException" link="/classes/Phile.Exception.AbstractException.html"/>
      </docblock>
    </class>
    <source>eJxtjzEOwjAMRfecwnMHsgMSMIDEAKoQI0sIVhORJlHsSiDEbbgJFyONSlnw5v+f5f/ni2iikFUloILadY31sL5pjGyDz5oUwqsWKSqNUBvr8DTaM/E9ZINwwBjIckj3EQDtFFEGemapOjYhAWyS8lfYv1+Nw1QcZ7OQxzBHmkoZ+z+6pYkO7QBo9IQFyH6IeQtd0jgJqZGDS3K3PRY8h72qZshbSpQgfyPijdFfCFZn4qQ0/8o/xFN8ACC+X8k=</source>
  </file>
  <file path="lib/Phile/Exception/ContainerNotFoundException.php" generated-path="lib.Phile.Exception.ContainerNotFoundException.html" hash="d15ff6b6f2eb6004315e1c59589e695f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="NotFoundExceptionInterface">\Psr\Container\NotFoundExceptionInterface</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Exception" line="15" package="Default">
      <extends>\Phile\Exception\AbstractException</extends>
      <implements>\Psr\Container\NotFoundExceptionInterface</implements>
      <name>ContainerNotFoundException</name>
      <full_name>\Phile\Exception\ContainerNotFoundException</full_name>
      <docblock line="15">
        <description>Container Exception</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Default"/>
        <tag name="inherited_from" description="\Phile\Exception\AbstractException" refers="\Phile\Exception\AbstractException" link="/classes/Phile.Exception.AbstractException.html"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx1jsFqAkEMhu95ipz34NxtoYpU8GAR2uNexjF1h+4kwyQLQvHdHVdZD2Juyfcl+d8/cpfBNYANLvxgnRTEXRd7Wm2/x2Ef+Q9rdWZZ587lKwxJZ0HSXQjESqNQueTayVACzaQc3Z2q225+qu4A2CfS7APd/rSfp0DZovAbwFDvtDst7UrYfGQq7ZfYWgY+TNqGjcpv3a++a8bkk42TNf4KvVd90KdTSCcjPigu92rFB3uQmHJPidgUXyeAfzjDBepib+c=</source>
  </file>
  <file path="plugins/phile/testPlugin/config.php" generated-path="plugins.phile.testPlugin.config.html" hash="a4ced3ac3f0e73348716c346ad9a4cca" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyzsS/IKODiKkotKS3KU4jmUgACdUd1BVs7BfUIdR0I3wnCd1LnirXmAgA17gqq</source>
  </file>
  <file path="lib/Phile/Exception/ContainerException.php" generated-path="lib.Phile.Exception.ContainerException.html" hash="d104b1dedd768f23d2c764c1c2677808" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ContainerExceptionInterface">\Psr\Container\ContainerExceptionInterface</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Exception" line="15" package="Default">
      <extends>\Phile\Exception\AbstractException</extends>
      <implements>\Psr\Container\ContainerExceptionInterface</implements>
      <name>ContainerException</name>
      <full_name>\Phile\Exception\ContainerException</full_name>
      <docblock line="15">
        <description>Container Exception</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Default"/>
        <tag name="inherited_from" description="\Phile\Exception\AbstractException" refers="\Phile\Exception\AbstractException" link="/classes/Phile.Exception.AbstractException.html"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJxtjjELAjEMhff8isw32F0FFXFwEA50dKk1esVrWpocCOJ/t55yCpopyfvyXqaz1CQwFWCFc9tpEzNi3fiWlpttv2w9X7BUo5pkbEx6ii7IyMXwBhyxUA8UPaYyxS47GsV8Nm9VzGa9K7gBYBtIknX0ytmvro6S+sgTgK741JL3y8hqPdNXN2BrVsqncl94U/WfDxAOVJ/lWiuCvxZIVyU+Ci4Ootk6/Sg+pJYCsf67G6LhBnd4AOyKbUo=</source>
  </file>
  <file path="lib/Phile/Repository/Page.php" generated-path="lib.Phile.Repository.Page.html" hash="d2630c89f7926324bf49d0fe25aab287" package="Default">
    <docblock line="0">
      <description>the page repository class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Container">\Phile\Core\Container</namespace-alias>
    <namespace-alias name="ServiceLocator">\Phile\Core\ServiceLocator</namespace-alias>
    <namespace-alias name="Utility">\Phile\Core\Utility</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Repository" line="19" package="Phile\Repository">
      <extends/>
      <name>Page</name>
      <full_name>\Phile\Repository\Page</full_name>
      <docblock line="19">
        <description>the Repository class for pages</description>
        <long-description></long-description>
        <tag name="author" line="19" description="Frank NÃ¤gler"/>
        <tag name="link" line="19" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="19" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="19" description="Phile\Repository"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Repository" line="24" package="Phile\Repository">
        <name>$settings</name>
        <full_name>\Phile\Repository\Page::settings</full_name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="24" description="&lt;p&gt;the settings array&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Repository" line="29" package="Phile\Repository">
        <name>$storage</name>
        <full_name>\Phile\Repository\Page::storage</full_name>
        <default>array()</default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="29" description="&lt;p&gt;object storage for initialized objects, to prevent multiple loading of objects.&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Repository" line="34" package="Phile\Repository">
        <name>$cache</name>
        <full_name>\Phile\Repository\Page::cache</full_name>
        <default>null</default>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="34" description="&lt;p&gt;the cache implementation&lt;/p&gt;" type="\Phile\ServiceLocator\CacheInterface" variable="">
            <type>\Phile\ServiceLocator\CacheInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="39" package="Phile\Repository">
        <name>__construct</name>
        <full_name>\Phile\Repository\Page::__construct()</full_name>
        <docblock line="39">
          <description>the constructor</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="58" package="Phile\Repository">
        <name>findByPath</name>
        <full_name>\Phile\Repository\Page::findByPath()</full_name>
        <docblock line="58">
          <description>find a page by path</description>
          <long-description></long-description>
          <tag name="param" line="58" description="" type="string" variable="$pageId">
            <type>string</type>
          </tag>
          <tag name="param" line="58" description="" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="58" description="" type="null|\Phile\Model\Page">
            <type>null</type>
            <type>\Phile\Model\Page</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="93" package="Phile\Repository">
        <name>findAll</name>
        <full_name>\Phile\Repository\Page::findAll()</full_name>
        <docblock line="93">
          <description>find all pages (*.md) files and returns an array of Page models</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="param" line="93" description="" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="of \Phile\Model\Page objects" type="\Phile\Repository\PageCollection">
            <type>\Phile\Repository\PageCollection</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Repository" line="173" package="Phile\Repository">
        <name>getPageOffset</name>
        <full_name>\Phile\Repository\Page::getPageOffset()</full_name>
        <docblock line="173">
          <description>return page at offset from $page in applied search order</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="\Phile\Model\Page" variable="$page">
            <type>\Phile\Model\Page</type>
          </tag>
          <tag name="param" line="173" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="173" description="" type="null|\Phile\Model\Page">
            <type>null</type>
            <type>\Phile\Model\Page</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$page</name>
          <default></default>
          <type>\Phile\Model\Page</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Repository" line="195" package="Phile\Repository">
        <name>getPage</name>
        <full_name>\Phile\Repository\Page::getPage()</full_name>
        <docblock line="195">
          <description>get page from cache or filepath</description>
          <long-description></long-description>
          <tag name="param" line="195" description="" type="" variable="$filePath"/>
          <tag name="param" line="195" description="" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="195" description="" type="\Phile\Model\Page">
            <type>\Phile\Model\Page</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="39" code="PPC:ERR-50015">Argument $settings is missing from the Docblock of __construct</error>
    </parse_markers>
    <source>eJy1Wf1OHDcQ/5+ncKJTd48cd1Cl+YMU0jQiKVIgCIiqCtDK7PnunOyuV7aXhCS8Td+kL9YZf+zu7ccdtIkl4M4ez/zmwzNj8+uLfJFvTDY3N8gm0QtGcjpnRLJcKK6FvCVxQpWCxclGRlOmchozcrLgCbs8LYmeb2wUyk+/EhJ/ZZryjMnnzZUzJm94zN6KmMLW1vJ7zROukWMN02kDDpkJaYAiMCT6jRZ6AXPktaTZR3L8z9/zhEmzknCYgLHQOle7k0mOsuJUjWOROoKYZQACCWBd5PBNFDJmYyHnE7eqJkeH54YcDPARTdS0gTGRRXcC6xtfN1CqUQIH7LyhklAp6a3RSTGteTZXdsoRTczfXArNYs2mZOCpwB797MT1ByAnCmAgMjQOz7jmNOFfgIldViOiBbBmNyzTJC0SzfOEkUTQKQggYubpxr1YHP89KzYc9oC6tKZZdvTlKxov2GGmmZxhCKEJYpwiPAUcKYCimousT7il3SNZkSRtuYabyJSWRQzClpkU1+BEMiuyGAWQKCopw9K+jvPQ7LCuw8FnpE6z56hqFDjqXMrA392dM30IgmgWs3C4tQ9fw8CYJgKiGZ8HMKnFS29Lz+2u/DTQC6629mvca/FQh7hs6t3dBVVuqpSI5guGLeRWgjdukw9A7ubTRHvX8siMZ1NCbTa5voW/euGWyljJqaQpRK3E+Bsg5eG0Z3EmkimTTQaS6UJmxiXfXNAdiSlLLs0BXBUDiO732xMAFTrBIy+kJxKqVf/pxW7TQRcBRJaGSI6mXAZXlZEmE3LNSMpkzGdFgucwoV8wDXA53QJN9e1WodBSFI0WxyzXYLuE2aOpIKksKiAWLwBJwDhphT+Y1P0CIgNVXE8CohaiSKaQb+SNy+5mASzAPgfLke5ZQ5wHAfn2jQAhuKCSsbUztKsgqxlKbvMYVi3vepDU7AhuqllxXG3sNyf7rOvmRKyPkA8scKVVaJi2ghvJWgo88wpYjM09znQaKg14STIlErAacNkCl7LYlCBnV8ym3ppBi0nlpiaE7RGGdcIyPzUkW+RZzXXGYoQlUJPuA64CgbNdUHvBjStDNMQvu/Y7+Ozuod6rHe4uLm7ZiYdEhWfesiqPsrNpX3JKEttDkHBznIIXcK8yR9Ayx8++ws5MUScpphfVncgsJRmIHFOMaqzeK5OhjFcigf7EZCmQ2kprvkqvTW8vkyS0kDyiqnD/0GTnHcc+NfQJl/xbgg2HBHvA0MOs3NcR/qUuT/aagJ53nRU+z6CrdK79xPWilleDcQB9EuFamXVsb9vy7M494vpSUxNf41zoUELidU6CaehuDuHHNjzWPEi8vBIM21AHNhJrrVWLIhP6tSiy6YntwVrugPVohgQR8gquHnA4S5+AraDAk9CpTZU1QJcncJgMq2UE14UEmrqaSYKR3wnJdgl6Hy/nsA9FmmMeywCiTW0gxOQfrkyb93T7qZnvZYI68qxgbfVw3HXOWvNfXFV2XZlRlhm2ptAsLM31bRnTF4EREAkJTIKrVrLzw2c1Q30vWWAySDAK7xNUgutiySHMOG3HD0ynGGFwBZhHKodoDoPJpXoyQV9148SCPyInpwdvorOTt4fn0fG76ODo5PyvDjtUsWMFYezgpz5VB1CaAA37nCeQ3EI4jCO3odtxaNQYggib9uJ6SPbJzqpQGujbvLyqRGrBZ25jT1j01dsmv+V6tMTiXmruopowd7F9dU9FsV1ZrSqy28HYDaiKg4ehExJTg4l8m3oCVDQge/tWZTjLH9mt/W5hw4wNj3JuB+dsgXMbu93YE76QPahsBbC5xlrvmcsqIl0RdE4RE3b4uTfsQBtzkQKaC6NaRx40hLFIijRblZKXEdgMjvLzdWnOdyJdY/kSXSv8g5VZz7cCnaqkTFNUGjmY1HYEE30a4bD3XmMiEw5Xtmk2hWWVZl7aQmDnG4CkAMpQEc+4VBDPYO4VQs3mG5oUrMLqmK3Cao9uD2LUfD3iUiiS25v6Gqxr8wUOOBHzOZMRk1LIcCUpjse2v8OzRYKvThl3rK7uAvIJYsv2M9MxOcd0VFJZlYEGKi0UkVjMM3z6GT8erZV6EL0/OziN/nx5enx4/GYl+Rrf+cJLfl5ht/4gtefN1mDjkAcnsj9YkjNpOVhuPUe7QWzegygk3ODs3el5hCELZteiyIHCR1VZurvy2joJP/mK3qKM4RoSQf8rI2yII5eDG3nP1IyS47CDzYrGoULXex9yu027RTXcO2bQMpKZFKnliG0yzaFlYFOfpo05ui9Cq3NXRcYz3TSblfwdHnhc+/bO8At7AI28QPDQdusO5Dty1xD6O1XN/wN7VjsqRGdVaL2YmO02XHOTdfCuYB6lup8DbelyHY1xQ1il9GrvyHEekidewcbbCVdoFScf2bY70v92/a5z7As2ILaRZuLLPj1Cqcc+u/+V0LThJ9Vy41pN1lys1wRP+czcjJ+wlPtDr8zOs+6N1aCMULxJRen0lwrGcNmTzpFOjH2fX+3QLtrOhzpTUOvPw496Xr+bhFv7C6ps/ey8wedL91e3pafk9pZZzwVfGVrO7fBa14V6CYByAEaufevLoZ2I/gea2vG2RxmAVP9Usoatp5wO9/luqVYW6uXAn8O7jX8B48pyrA==</source>
  </file>
  <file path="plugins/phile/parserMarkdown/Classes/Parser/Markdown.php" generated-path="plugins.phile.parserMarkdown.Classes.Parser.Markdown.html" hash="4cc2a7a31366baea7ba759c7fd7b8bda" package="Default">
    <docblock line="0">
      <description>The Mardown parser class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="MarkdownExtra">\Michelf\MarkdownExtra</namespace-alias>
    <namespace-alias name="ParserInterface">\Phile\ServiceLocator\ParserInterface</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\ParserMarkdown\Parser" line="18" package="Phile\Plugin\Phile\ParserMarkdown\Parser">
      <extends/>
      <implements>\Phile\ServiceLocator\ParserInterface</implements>
      <name>Markdown</name>
      <full_name>\Phile\Plugin\Phile\ParserMarkdown\Parser\Markdown</full_name>
      <docblock line="18">
        <description>Class Markdown</description>
        <long-description></long-description>
        <tag name="author" line="18" description="Frank NÃ¤gler"/>
        <tag name="link" line="18" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="18" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="18" description="Phile\Plugin\Phile\ParserMarkdown\Parser"/>
      </docblock>
      <property static="false" visibility="private" namespace="Phile\Plugin\Phile\ParserMarkdown\Parser" line="23" package="Phile\Plugin\Phile\ParserMarkdown\Parser">
        <name>$config</name>
        <full_name>\Phile\Plugin\Phile\ParserMarkdown\Parser\Markdown::config</full_name>
        <default></default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="23" description="&lt;p&gt;the configuration&lt;/p&gt;" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMarkdown\Parser" line="30" package="Phile\Plugin\Phile\ParserMarkdown\Parser">
        <name>__construct</name>
        <full_name>\Phile\Plugin\Phile\ParserMarkdown\Parser\Markdown::__construct()</full_name>
        <docblock line="30">
          <description>the constructor</description>
          <long-description></long-description>
          <tag name="param" line="30" description="" type="null" variable="$config">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMarkdown\Parser" line="44" package="Phile\Plugin\Phile\ParserMarkdown\Parser">
        <name>parse</name>
        <full_name>\Phile\Plugin\Phile\ParserMarkdown\Parser\Markdown::parse()</full_name>
        <docblock line="44">
          <description>overload parse with the MarkdownExtra parser</description>
          <long-description></long-description>
          <tag name="param" line="44" description="" type="" variable="$data"/>
          <tag name="return" line="44" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\ParserInterface::parse()" refers="\Phile\ServiceLocator\ParserInterface::parse()" link="/classes/Phile.ServiceLocator.ParserInterface.html#method_parse"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>eJyNU8GK2zAQvfsrpuBDEtj1vemmhdLCQrcsdI+BoCpjW0SWzEhytiz5m/5Jf6wjWTYbt5TqYFuaN2/mPY3fve/bvqg2mwI28NQiPAg62rOBXpBDAqmFcxyrCiM6dL2QCI+t0rh/1KFRZp83Cc25p5ict9uiCI4ZlWxR1/sp+unZk9im0Jj8DWlQEr9YKbylnHxvPFLN5Zglt/cx9gITDZ/Eww8i+NYSwGcS5gRff/1sNFKKaMUHvFrve/e2qvpYTXbuVtouAyQabiMCOG573tlAEm8tNVWOuurh/inBWfxJNP+vP9kmr5oG1fUaOzTewUJn8VLEZpPWuLjgIAg69YxH8Hwz0ppaNYGEV9ZkTJXePalBeIRyhLBjC6ac7jwFyRbn47kO37XowAStJ4pr+vCdvYA6GBlLw+Ewc60yHu5S+jrhRyFxqRpWb5Q7xNgEXa9fAeIqfavczW4mmlVMgEsxPpeq7ICkrTiOswpn5duk9GrQ8iD/XXJ5FF4sQ4Q+kAEWqMy/jUjUq0SyVF7m/4d9wTMsRn8C1ZZQyBZW1xYIB+UJf8DdDspB6IB/ODaS3+xeIu4SPUu415bNn1nOnMMdGMeVu9z4Nrt7KX4DgYk3uA==</source>
  </file>
  <file path="lib/Phile/Model/AbstractModel.php" generated-path="lib.Phile.Model.AbstractModel.html" hash="cdf76702e84a337bcf3f82ebca37ea64" package="Default">
    <docblock line="0">
      <description>the abstract base model</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile\Model" line="15" package="Phile\Model">
      <extends/>
      <implements>\ArrayAccess</implements>
      <name>AbstractModel</name>
      <full_name>\Phile\Model\AbstractModel</full_name>
      <docblock line="15">
        <description>Abstract model which implements the ArrayAccess interface</description>
        <long-description></long-description>
        <tag name="author" line="15" description="Frank NÃ¤gler"/>
        <tag name="link" line="15" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="15" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="15" description="Phile\Model"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Model" line="20" package="Phile\Model">
        <name>$data</name>
        <full_name>\Phile\Model\AbstractModel::data</full_name>
        <default>array()</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="20" description="&lt;p&gt;the storage&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="29" package="Phile\Model">
        <name>get</name>
        <full_name>\Phile\Model\AbstractModel::get()</full_name>
        <docblock line="29">
          <description>get value for given key</description>
          <long-description></long-description>
          <tag name="param" line="29" description="" type="" variable="$key"/>
          <tag name="return" line="29" description="" type="null|mixed">
            <type>null</type>
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="39" package="Phile\Model">
        <name>getAll</name>
        <full_name>\Phile\Model\AbstractModel::getAll()</full_name>
        <docblock line="39">
          <description>get all entries</description>
          <long-description></long-description>
          <tag name="return" line="39" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="50" package="Phile\Model">
        <name>set</name>
        <full_name>\Phile\Model\AbstractModel::set()</full_name>
        <docblock line="50">
          <description>set value for given key</description>
          <long-description></long-description>
          <tag name="param" line="50" description="&lt;p&gt;the key&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="50" description="&lt;p&gt;the value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="62" package="Phile\Model">
        <name>__get</name>
        <full_name>\Phile\Model\AbstractModel::__get()</full_name>
        <docblock line="62">
          <description>magic method to get value</description>
          <long-description></long-description>
          <tag name="param" line="62" description="" type="" variable="$name"/>
          <tag name="return" line="62" description="" type="null|mixed">
            <type>null</type>
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="73" package="Phile\Model">
        <name>__set</name>
        <full_name>\Phile\Model\AbstractModel::__set()</full_name>
        <docblock line="73">
          <description>magic method to set value</description>
          <long-description></long-description>
          <tag name="param" line="73" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="73" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="86" package="Phile\Model">
        <name>__call</name>
        <full_name>\Phile\Model\AbstractModel::__call()</full_name>
        <docblock line="86">
          <description>magic method to access properties by getter / setter</description>
          <long-description></long-description>
          <tag name="param" line="86" description="&lt;p&gt;the name of method&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="86" description="&lt;p&gt;the arguments of the method&lt;/p&gt;" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="return" line="86" description="" type="mixed|null|void">
            <type>mixed</type>
            <type>null</type>
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="112" package="Phile\Model">
        <name>offsetExists</name>
        <full_name>\Phile\Model\AbstractModel::offsetExists()</full_name>
        <docblock line="112">
          <description>(PHP 5 &gt;= 5.0.0)
Whether a offset exists</description>
          <long-description></long-description>
          <tag name="link" line="112" description="http://php.net/manual/en/arrayaccess.offsetexists.php" link="http://php.net/manual/en/arrayaccess.offsetexists.php"/>
          <tag name="param" line="112" description="&lt;p&gt;An offset to check for.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="112" description="true on success or false on failure.&#10;                     The return value will be casted to boolean if non-boolean was returned." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="128" package="Phile\Model">
        <name>offsetGet</name>
        <full_name>\Phile\Model\AbstractModel::offsetGet()</full_name>
        <docblock line="128">
          <description>(PHP 5 &gt;= 5.0.0)
Offset to retrieve</description>
          <long-description></long-description>
          <tag name="link" line="128" description="http://php.net/manual/en/arrayaccess.offsetget.php" link="http://php.net/manual/en/arrayaccess.offsetget.php"/>
          <tag name="param" line="128" description="&lt;p&gt;The offset to retrieve.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="128" description="Can return all value types." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="146" package="Phile\Model">
        <name>offsetSet</name>
        <full_name>\Phile\Model\AbstractModel::offsetSet()</full_name>
        <docblock line="146">
          <description>(PHP 5 &gt;= 5.0.0)
Offset to set</description>
          <long-description></long-description>
          <tag name="link" line="146" description="http://php.net/manual/en/arrayaccess.offsetset.php" link="http://php.net/manual/en/arrayaccess.offsetset.php"/>
          <tag name="param" line="146" description="&lt;p&gt;The offset to assign the value to.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;The value to set.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="146" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="162" package="Phile\Model">
        <name>offsetUnset</name>
        <full_name>\Phile\Model\AbstractModel::offsetUnset()</full_name>
        <docblock line="162">
          <description>(PHP 5 &gt;= 5.0.0)
Offset to unset</description>
          <long-description></long-description>
          <tag name="link" line="162" description="http://php.net/manual/en/arrayaccess.offsetunset.php" link="http://php.net/manual/en/arrayaccess.offsetunset.php"/>
          <tag name="param" line="162" description="&lt;p&gt;The offset to unset.&lt;/p&gt;" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="162" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <source>eJy1Vs2O0zAQvvcpBqkS7QqSlRAXoECF+DsAKwHiAAi56TSx1rEj2+myAt6GN+HFmLGTbbdp2u6y5NLUnhl/833jmTx6UhXVID06GsAR+AJBzJy3IvMwEw6hNHNUtJUOtCjRVSJDOCmkwi9veOfhoHWdtm7BA84KmRUgy0phidq7EHpqrTifZhk6B1J7tAsKR87s/1TUvjAW4IUV+hTe/vmdK7RhR0laoKfwvnIP0rTi87PSJZkpG4MMNYFlA9o3Ff0ztc0wMTZPm12Xvnn9IZhTEqciv5RHyDBTgoC1iYT19Qy+rMEf/BgwopA7PxR1KSwItgipOm8sndHspuG3ssZj5nEOw7nwAibRfjQmFjei5ehhKVSNsCBOcrlEDad43mxfnFkJK0oYbtmx6GurQddK/Szld5xfRlLPiBVY1Drz0mg+bsRRxmE35sZPE2UknWMLX0h39zFj/8zWX8djeAKdVXgQjn0YovzamppQCohTK9H1AA/M7MM8VWrUA3kNVR8QdxWOqSakzgPVtMwKr0xbm8AzwDAGZZvwtjML1zB/p3HbTKfL7qSx7EurFDkdUCLdpjl4syqlnuLhe/1v1fPtW6gfDrRbjZXZoeDdbvCtKms5bBVjD3zX4tqjQtfu0DxEbHrUASq0nsoeZuesDPVASDlLz71uX4qhpsKLWTTBN6xjA4KhsHlsufRSx/ZFLrxwyW1T8EDazyD70sh9qmd0jS/44BM3aZMLGBH+yrjW7DblfHsMtyYTWAjlcLxmHYgO2U3A1dyFW697bYc8rKyiJDtAuP8AYr02mIvPx187cLp1Mjp5dQL34fEE7ifHyfG4Xf9UkExUG4JkW/AlwO/S+U6zDJOxmXo0xhONPi2FroVKUaehGGLlJTFMjJLwxN9abPHSDKNxu7f1meoWGVV3VmB2yl006amrmTEKhQZvqTFy16vjfaC+GxTgtYWQqraY7Dz2A1VwEzN22TNJo2SGkAnHg5XAtGeR7trou+3fM+EaT5wnOws75vU8UDVquLjCYIwONBv7ekOf5u8u+KToNBqXnaZ3VbnpYtyE1ky66YDr0zrGfUaUt6OcFGpG4nmF7hDyXzKpO5lfv/qN4fX5XhFwbard/6CaPkdlrldfErSWbA+9PuX6I7dBOOE++fb2/Qjv/Yr4Q4bmhuX1par1DYgVgty8XDHsv/H6Ubv+2udR1rC6tUltDrJa93an7mj6NfgL9jrkAw==</source>
  </file>
  <file path="plugins/phile/templateTwig/config.php" generated-path="plugins.phile.templateTwig.config.html" hash="0a05aca4a805adbc3a4fac4924028568" package="Default">
    <docblock line="0">
      <description>config file</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <source>eJxdjcsKwjAQRff5itkFipIP8EXRgm6lOxFJ47QJpEloUvXzTROs4myG4Z5zZ71z0hFWFAQKENa0qoNWaYwnIwOGcTBwIRCHBuyd5gGX+ApovLKGwmYLVIZe0wUwBh8iNcCMZV1wITEZLdcek1BbQMObCNfP+HhClIlbctMhBKk8BAv7cn+sbofTORfxMVj0grv/tnIOct2DDz4rd2zG7ktPcPXzN8XkuiJvzLdTLg==</source>
  </file>
  <file path="plugins/phile/parserMarkdown/Classes/Plugin.php" generated-path="plugins.phile.parserMarkdown.Classes.Plugin.html" hash="6ff22e3d7eccdd134ca0e76450575f91" package="Default">
    <docblock line="0">
      <description>Plugin class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ServiceLocator">\Phile\Core\ServiceLocator</namespace-alias>
    <namespace-alias name="AbstractPlugin">\Phile\Plugin\AbstractPlugin</namespace-alias>
    <namespace-alias name="Markdown">\Phile\Plugin\Phile\ParserMarkdown\Parser\Markdown</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\ParserMarkdown" line="20" package="Phile\Plugin\Phile\ParserMarkdown">
      <extends>\Phile\Plugin\AbstractPlugin</extends>
      <name>Plugin</name>
      <full_name>\Phile\Plugin\Phile\ParserMarkdown\Plugin</full_name>
      <docblock line="20">
        <description>Class Plugin
Default Phile parser plugin for Markdown</description>
        <long-description></long-description>
        <tag name="author" line="20" description="PhileCMS"/>
        <tag name="link" line="20" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="20" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="20" description="Phile\Plugin\Phile\ParserMarkdown"/>
        <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin" refers="\Phile\Plugin\AbstractPlugin" link="/classes/Phile.Plugin.AbstractPlugin.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\ParserMarkdown" line="23" package="Phile\Plugin\Phile\ParserMarkdown">
        <name>$events</name>
        <full_name>\Phile\Plugin\Phile\ParserMarkdown\Plugin::events</full_name>
        <default>array('plugins_loaded' =&gt; 'onPluginsLoaded')</default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin::events" refers="\Phile\Plugin\AbstractPlugin::events" link="/classes/Phile.Plugin.AbstractPlugin.html#property_events"/>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Phile\Plugin\Phile\ParserMarkdown" line="25" package="Phile\Plugin">
        <name>$plugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::plugin</full_name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;plugin attributes&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\ParserMarkdown" line="30" package="Phile\Plugin">
        <name>$events</name>
        <full_name>\Phile\Plugin\AbstractPlugin::events</full_name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="&lt;p&gt;subscribed Phile events ['eventName' =&gt; 'classMethodToCall']&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\ParserMarkdown" line="35" package="Phile\Plugin">
        <name>$settings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::settings</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;the plugin settings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMarkdown" line="32" package="Phile\Plugin\Phile\ParserMarkdown">
        <name>onPluginsLoaded</name>
        <full_name>\Phile\Plugin\Phile\ParserMarkdown\Plugin::onPluginsLoaded()</full_name>
        <docblock line="32">
          <description>onPluginsLoaded method</description>
          <long-description></long-description>
          <tag name="param" line="32" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="32" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMarkdown" line="46" package="Phile\Plugin">
        <name>initializePlugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::initializePlugin()</full_name>
        <docblock line="46">
          <description>initialize plugin</description>
          <long-description>try to keep all initialization in one method to have a clean class
for the plugin-user</long-description>
          <tag name="param" line="46" description="" type="string" variable="$pluginKey">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="46" description="since 1.5.1 will be declared 'final'"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pluginKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMarkdown" line="98" package="Phile\Plugin">
        <name>injectSettings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::injectSettings()</full_name>
        <docblock line="98">
          <description>inject settings</description>
          <long-description>backwards compatibility to Phile 1.4</long-description>
          <tag name="param" line="98" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="98" description="since 1.5.1 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMarkdown" line="109" package="Phile\Plugin">
        <name>on</name>
        <full_name>\Phile\Plugin\AbstractPlugin::on()</full_name>
        <docblock line="109">
          <description>implements EventObserverInterface</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="string" variable="$eventKey">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Gateway\EventObserverInterface::on()" refers="\Phile\Gateway\EventObserverInterface::on()" link="/classes/Phile.Gateway.EventObserverInterface.html#method_on"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ParserMarkdown" line="131" package="Phile\Plugin">
        <name>getPluginPath</name>
        <full_name>\Phile\Plugin\AbstractPlugin::getPluginPath()</full_name>
        <docblock line="131">
          <description>get file path to plugin root (trailing slash) or to a sub-item</description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="string" variable="$subPath">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="null if item does not exist" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subPath</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="23" code="PPC:ERR-50007">No summary for property $events</error>
    </parse_markers>
    <source>eJyNUsFO4zAQvfsr5lApbQXk3kIX1L2sRCUk9rZFyDjTxGpiW55xQWL593VsF5WKw/o28968mfeS6x+uc6KezwXM4aEPrTagekkU61oYOSA5qRAeOt3jNhO2pZCe0G+k3zf21SyFCHTkra3H7SP6g1Z4b5Vk65cncJG5eyH2UnEuvyF8t6eU25O95fr1eHbxMNY/cSdDz1kSXBoDly3urIejQuSO9FsZuIvtzF9vHlOz12YP8XXMjhZ17UZQDXSl7FAICk08fCRE3LpY2eAVXlnf1gWlevPrd6LHMPey/Q+fKX91YgnwjdE0BF9jE+9CjAc6bxkVYwMTPKBhghv4U2W79Nxb2WBTwc0KKmvyJN3n5tMyK6QYxzeHMwoMGKNpCnokRS9eDmBC38OkkSzPcY8cvIFBv2Hz92D1UaDOB4eXmA7sglGsrTnfOU2S0cSoP0sT73k+vq+/1mLhsdXE6Et/WqVEn3Oi1QUYfP383NMJd5ouV4TM2rQ0my2T7of4EP8As+kAHg==</source>
  </file>
  <file path="lib/Phile/FilterIterator/GeneralFileFilterIterator.php" generated-path="lib.Phile.FilterIterator.GeneralFileFilterIterator.html" hash="eb792390e2775846725a085653a435c9" package="Default">
    <docblock line="0">
      <description>the filter class for all files</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile\FilterIterator" line="12" package="Phile\FilterIterator">
      <extends>\FilterIterator</extends>
      <name>GeneralFileFilterIterator</name>
      <full_name>\Phile\FilterIterator\GeneralFileFilterIterator</full_name>
      <docblock line="12">
        <description>Class GeneralFileFilterIterator</description>
        <long-description></long-description>
        <tag name="package" line="12" description="Phile\FilterIterator"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\FilterIterator" line="18" package="Phile\FilterIterator">
        <name>accept</name>
        <full_name>\Phile\FilterIterator\GeneralFileFilterIterator::accept()</full_name>
        <docblock line="18">
          <description>method to decide if file is filterd or not</description>
          <long-description></long-description>
          <tag name="return" line="18" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJx9kEFqAzEMRfc+xV+2Q2AOkEIDhYbueoBuHFvTMXFsY2ugUHL3ahSn0BAqMIavr/8sPz2XuZhxGAwG8EyYQmSqcNG2hilX2BhXkZo4RpPsiVqxjvA+i/jxqvY3OZZz3Zpr1IvO7ylJI4qJ/hrFsrp2knS0n/fDlOf+zwF9MSXfcDv7bSClj1lrwIl4zh6c4ckFTwiTroXQ+s4ekpcyXyd2lXipCYecY9dGvctyiMFhWpLjkBOsc1T44VGbF7DCx97RLzyGJIALs22E06m/9k7jutBWxbM5mx/Hi4GT</source>
  </file>
  <file path="lib/Phile/Event.php" generated-path="lib.Phile.Event.html" hash="1402419a45553e068543774e5c4946ac" package="Default">
    <docblock line="0">
      <description>The Event class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile" line="17" package="Phile">
      <extends>\Phile\Core\Event</extends>
      <name>Event</name>
      <full_name>\Phile\Event</full_name>
      <docblock line="17">
        <description>the Event class for implementing a hook/event system</description>
        <long-description></long-description>
        <tag name="author" line="17" description="Frank NÃ¤gler"/>
        <tag name="link" line="17" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="17" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="17" description="Phile"/>
        <tag name="deprecated" line="17" description="since 1.4 will be removed"/>
        <tag name="use" line="17" description="\Phile\Core\Event"/>
        <tag name="inherited_from" description="\Phile\Core\Event" refers="\Phile\Core\Event" link="/classes/Phile.Core.Event.html"/>
      </docblock>
      <property static="true" visibility="protected" namespace="Phile" line="24" package="Phile\Core">
        <name>$instance</name>
        <full_name>\Phile\Core\Event::instance</full_name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="24" description="&lt;p&gt;global instance&lt;/p&gt;" type="\Phile\Core\Event" variable="">
            <type>\Phile\Core\Event</type>
          </tag>
          <tag name="deprecated" line="24" description="static use is deprecated"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile" line="31" package="Phile\Core">
        <name>$registry</name>
        <full_name>\Phile\Core\Event::registry</full_name>
        <default>array()</default>
        <docblock line="31">
          <description>Registry object provides storage for objects.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="39" package="Phile\Core">
        <name>getInstance</name>
        <full_name>\Phile\Core\Event::getInstance()</full_name>
        <docblock line="39">
          <description>get global event instance</description>
          <long-description></long-description>
          <tag name="return" line="39" description="" type="\Phile\Core\Event">
            <type>\Phile\Core\Event</type>
          </tag>
          <tag name="deprecated" line="39" description="static use is deprectated"/>
        </docblock>
        <inherited_from>\Phile\Core\Event</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="50" package="Phile\Core">
        <name>setInstance</name>
        <full_name>\Phile\Core\Event::setInstance()</full_name>
        <docblock line="50">
          <description>Set global event instance</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="\Phile\Core\Event" variable="$instance">
            <type>\Phile\Core\Event</type>
          </tag>
          <tag name="deprecated" line="50" description="static use is deprecated"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$instance</name>
          <default></default>
          <type>\Phile\Core\Event</type>
        </argument>
        <inherited_from>\Phile\Core\Event</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="62" package="Phile\Core">
        <name>registerEvent</name>
        <full_name>\Phile\Core\Event::registerEvent()</full_name>
        <docblock line="62">
          <description>Global register</description>
          <long-description></long-description>
          <tag name="param" line="62" description="" type="" variable="$eventName"/>
          <tag name="param" line="62" description="" type="" variable="$object"/>
          <tag name="deprecated" line="62" description="static use is deprecated"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Phile\Core\Event</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="74" package="Phile\Core">
        <name>triggerEvent</name>
        <full_name>\Phile\Core\Event::triggerEvent()</full_name>
        <docblock line="74">
          <description>Global trigger</description>
          <long-description></long-description>
          <tag name="param" line="74" description="" type="" variable="$eventName"/>
          <tag name="param" line="74" description="" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="74" description="static use is deprecated"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Core\Event</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile" line="85" package="Phile\Core">
        <name>register</name>
        <full_name>\Phile\Core\Event::register()</full_name>
        <docblock line="85">
          <description>method to register an event</description>
          <long-description></long-description>
          <tag name="param" line="85" description="&lt;p&gt;the event to observe&lt;/p&gt;" type="string" variable="$eventName">
            <type>string</type>
          </tag>
          <tag name="param" line="85" description="&lt;p&gt;observer&lt;/p&gt;" type="\Phile\Gateway\EventObserverInterface|callable" variable="$object">
            <type>\Phile\Gateway\EventObserverInterface</type>
            <type>callable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>\Phile\Gateway\EventObserverInterface|callable</type>
        </argument>
        <inherited_from>\Phile\Core\Event</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile" line="105" package="Phile\Core">
        <name>trigger</name>
        <full_name>\Phile\Core\Event::trigger()</full_name>
        <docblock line="105">
          <description>method to trigger an event</description>
          <long-description></long-description>
          <tag name="param" line="105" description="&lt;p&gt;the event name (register for this name)&lt;/p&gt;" type="string" variable="$eventName">
            <type>string</type>
          </tag>
          <tag name="param" line="105" description="&lt;p&gt;array with some additional data&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Core\Event</inherited_from>
      </method>
    </class>
    <source>eJxtkL1OxDAQhHs/xdYpYiFRcUggIZAoQFdcmcY4Q2zFf/I6BwjxNrwJL4bj3BVITDn7jVYz1zfJJCG7TlBHBwO6PyIU0k4xV0uKoDw4KQ3aG+uwE2e4/IXpNWayPjn46tkwkSIT4yzRGP7gAl9za/RWLcVUfNVDVmGm55/vySG3o7PV2GRKSXwlZVpfa8+9jv7EaATGmalITNWIS9boY57kCWD59HhoiVphVlNLtCLNHJEytCoYiW2oHS/6S3qzztELKMPHI8YGLtuvVUOLD3cxY2j920zbBtseeC8II/9Dfoov8QvJ/nVI</source>
  </file>
  <file path="lib/Phile/Plugin/AbstractPlugin.php" generated-path="lib.Phile.Plugin.AbstractPlugin.html" hash="e0b118ee97af6f0bb047d694d20c1eee" package="Default">
    <docblock line="0">
      <description>Plugin class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Container">\Phile\Core\Container</namespace-alias>
    <namespace-alias name="Utility">\Phile\Core\Utility</namespace-alias>
    <namespace-alias name="EventObserverInterface">\Phile\Gateway\EventObserverInterface</namespace-alias>
    <class final="false" abstract="true" namespace="Phile\Plugin" line="19" package="Phile\Plugin">
      <extends/>
      <implements>\Phile\Gateway\EventObserverInterface</implements>
      <name>AbstractPlugin</name>
      <full_name>\Phile\Plugin\AbstractPlugin</full_name>
      <docblock line="19">
        <description>the AbstractPlugin class for implementing a plugin for PhileCMS</description>
        <long-description></long-description>
        <tag name="author" line="19" description="PhileCMS"/>
        <tag name="link" line="19" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="19" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="19" description="Phile\Plugin"/>
      </docblock>
      <property static="false" visibility="private" namespace="Phile\Plugin" line="25" package="Phile\Plugin">
        <name>$plugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::plugin</full_name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;plugin attributes&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin" line="30" package="Phile\Plugin">
        <name>$events</name>
        <full_name>\Phile\Plugin\AbstractPlugin::events</full_name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="&lt;p&gt;subscribed Phile events ['eventName' =&gt; 'classMethodToCall']&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin" line="35" package="Phile\Plugin">
        <name>$settings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::settings</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;the plugin settings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin" line="46" package="Phile\Plugin">
        <name>initializePlugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::initializePlugin()</full_name>
        <docblock line="46">
          <description>initialize plugin</description>
          <long-description>try to keep all initialization in one method to have a clean class
for the plugin-user</long-description>
          <tag name="param" line="46" description="" type="string" variable="$pluginKey">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="46" description="since 1.5.1 will be declared 'final'"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pluginKey</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin" line="98" package="Phile\Plugin">
        <name>injectSettings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::injectSettings()</full_name>
        <docblock line="98">
          <description>inject settings</description>
          <long-description>backwards compatibility to Phile 1.4</long-description>
          <tag name="param" line="98" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="98" description="since 1.5.1 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin" line="109" package="Phile\Plugin">
        <name>on</name>
        <full_name>\Phile\Plugin\AbstractPlugin::on()</full_name>
        <docblock line="109">
          <description>implements EventObserverInterface</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="string" variable="$eventKey">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Gateway\EventObserverInterface::on()" refers="\Phile\Gateway\EventObserverInterface::on()" link="/classes/Phile.Gateway.EventObserverInterface.html#method_on"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin" line="131" package="Phile\Plugin">
        <name>getPluginPath</name>
        <full_name>\Phile\Plugin\AbstractPlugin::getPluginPath()</full_name>
        <docblock line="131">
          <description>get file path to plugin root (trailing slash) or to a sub-item</description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="string" variable="$subPath">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="null if item does not exist" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subPath</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJyVVlFP4zgQfu+vmFtVSopKK06wWrUHtxyLVmgPFgH7cCqocpNp4yOJI9sp9ID/fmPHSdOQwm4e2iSezHzz+ZsZ//FnFmWd4c5OB3bgMs4XPIUgZkrR87CTsgRVxgKEy4jHeFsYjDudXJWvToQ0P6lmPEU5bq780DzmelV//5VpfGCr29Mlpvr7TKFcojxLNco5RSLnDo2OEI5nSksW6DoymAsJPMliTMgBTxfAICvWzYoNcnJ+TS6Ml88s1xG9rr+HzzFP74GuSOtMjYbDzCwGiRoEInEGAaYE2RjQusjoSeQywIGQi6FbVcPzsxtrThzds8UmTZZB5hJw0Bv5VFkoaGej89TpGJyWEnNRrCWTQF5M4i5tpulxlmtUzmho/zPJl8Q1dJ3ZIUzuxu3+mJRsBSqfqYA8YVgkAri02CaevbkgNXhweASeTeYcidjwRpywOPbuGpGFxkCTn65z8W5ss9sOp0JttrWZTOWyXN/ilKdccxbz/0qHbqFc15KiCbhHzICgr+2Z5oL2JAWRIiQ2O2MYsSWSxIIYWVUbhScjtzXuXZK4bMQiYUiW2Idyz9xufMNVZRRiJjFgJjnFU6q2vcHBYA8eOKGbIYRIUSUtenOestjb5CWfkRphnqeBg19mX2jMX8fr2Q+eis/rnK15q7RCdGco9apmMKzuuzriaveoMJ1497jy7mgz1pHGlWnMlfa7pIFQyD50TUPpkSk+ZrEI0fdub71+q7/e2kf3yzV98uXs6vTk5vvVP9Pr08vjq2O6HW9DFHJpEV3+/ePr2cX1lL6FATgY5o48Dgo0xZNT0TZWChG3ckEaQBZE4DsITu9MOembeukWYurVuDdX1TVHowXqs1RpRpvv93aP6NH3bAlObV/4K1cevZa4IDpR+oVrR1yNqZe302itr+behjhneWxL1jXv0SgWLCwTJGyFsi6ZjnwvEOmcLwY0RbxeDQmfg49Jpld+5bAHz8/wG1dTW/C1901e6hBMgbdk113EYsZiY/FTLJ5YlIZDLY5t+AZWwkW0+KXfiVdwpby7yVrWd6+hvm2/PYHhsNoGMMWPIRLqERT+4AgcB3RXazlQKb3WAy2dU4lZTAOD/oNcKr5EfxPo5mf9dsL7v5JcZdsbb+Q1o1n4wGSogIZpRk11ZlVkWmkxVfYG+810ePovNfdrh85voK0HeAfUxCs/KlrSpqP1VvyiauracMp5aRk8Jonm+CpXf56W1ulRTMluw/m7s0NiIpYYvjMyNshvRCIW0zyO68OjJfV3DzLtmZUz0faz+kh06yayFSjTrFqTqHOZwlLwt/MSqV857hc+WpIxV70D1Nv4pPr+dekXKOrFXUnUnR0q+b1y9qr3TAM6ibBZjP7EftMvnbS0nOIkeQgk1Km995tjwFw6kuIBUnyA26ucjskJnj4GmBliNjuDuT7YTVtvAwQs9TQJYynu0UUcjRwkvzeAC0EnWgd58KH/yuHe/u+fDj7uf/p4sLHUa6WrIOlpG1kvvt26rWVHPMDcFBAVVWTKyY05KQikT8dtqjPSmKIkoh6YI5ug4xyddXe5xuQdYZKZmXNN7RkRPTsbq1HaR+MNQoEKUgqMjzSqt5xgK4VuztIyGO2t5zUl6gK3HnQGEBOUpHLQbzssVfy9dP4HnIQVYA==</source>
  </file>
  <file path="plugins/phile/errorHandler/template.php" generated-path="plugins.phile.errorHandler.template.html" hash="d46dfe705136dc303572d334cff71de7" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyVVM9v2yAUvveveEM7tIcEqadptR1paaUdOq3SepmmKSL2s42CgQLJmv9+gHHsOJra+eLw+Ph+PJ6Tfbj/vn7++fQAretEcZUNL2RVcQX+yRx3Aounlgtcf/sB93hAoXSH0sGDMcrAVyYrgSajPbI/1aFjntPpBb7s+SEnayWdP7N4PmokUParnDh8dTSI3kHZMmPR5XtXLz4RoIlJcLmD1mCdk2yVw8cts7jZGwGrgmqxb7i0VAd3FIOd5IYG2LK0loDzikkorg2KnFh3FGhbRBeVMtonzraqOqb8aJID3jVgTfl/+rG04D7oUsuGRKb4xC7lZGgoASZcWsKjahQ52QkGsoofoBTM2px0jEuSPE3KPZS864r8sUuCkDnxxq32tohJQ+N8Sm/mdrKrx99xbZ1Rshm4DFbkHBBBgQ5fS9SOK7np0FrWBG74NdsqVRXqv881aC8yUw4n//Ad38QRWc12t2YYodGqZnIwepIkxdxCAMTcAX9O4QxvGvQhgUuofb//LRB2325FQI1aoCT4MHjOFCoXLiNsnrlnWY6XRSe3NVc2rIkjsppCdKuB13DNrf8UryfwLSt3zrASb27g84Wwn5AvA2Ccl5niieJSEmXF67uhnub09EofJe3/nP4CTHhfDQ==</source>
  </file>
  <file path="lib/Phile/Core/Container.php" generated-path="lib.Phile.Core.Container.html" hash="248b5cdf9ca767bd6337729f2de9dca5" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="author" line="0" description="PhileCMS"/>
      <tag name="link" line="0" description="https://github.com/PhileCMS/Phile" link="https://github.com/PhileCMS/Phile"/>
      <tag name="license" line="0" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ContainerInterface">\Psr\Container\ContainerInterface</namespace-alias>
    <namespace-alias name="NotFoundException">\Phile\Exception\ContainerNotFoundException</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Core" line="16" package="Default">
      <extends/>
      <implements>\Psr\Container\ContainerInterface</implements>
      <name>Container</name>
      <full_name>\Phile\Core\Container</full_name>
      <docblock line="16">
        <description>Implements a simple PSR-11 container</description>
        <long-description></long-description>
        <tag name="package" line="16" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Core" line="18" package="Default">
        <name>$config</name>
        <full_name>\Phile\Core\Container::config</full_name>
        <default>array()</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="Phile\Core" line="21" package="Default">
        <name>$instance</name>
        <full_name>\Phile\Core\Container::instance</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="21" description="" type="\Psr\Container\ContainerInterface" variable="">
            <type>\Psr\Container\ContainerInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Core" line="24" package="Default">
        <name>$raw</name>
        <full_name>\Phile\Core\Container::raw</full_name>
        <default>array()</default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="24" description="&lt;p&gt;raw items&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Core" line="27" package="Default">
        <name>$build</name>
        <full_name>\Phile\Core\Container::build</full_name>
        <default>array()</default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="27" description="&lt;p&gt;items&lt;/p&gt;" type="\Phile\Core\evaluated" variable="">
            <type>\Phile\Core\evaluated</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="29" package="Default">
        <name>__construct</name>
        <full_name>\Phile\Core\Container::__construct()</full_name>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="39" package="Default">
        <name>setInstance</name>
        <full_name>\Phile\Core\Container::setInstance()</full_name>
        <docblock line="39">
          <description>Sets instance for static usage</description>
          <long-description></long-description>
          <tag name="param" line="39" description="" type="\Psr\Container\ContainerInterface" variable="$instance">
            <type>\Psr\Container\ContainerInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$instance</name>
          <default></default>
          <type>\Psr\Container\ContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="49" package="Default">
        <name>getInstance</name>
        <full_name>\Phile\Core\Container::getInstance()</full_name>
        <docblock line="49">
          <description>Gets instance for static usage</description>
          <long-description></long-description>
          <tag name="return" line="49" description="" type="\Psr\Container\ContainerInterface">
            <type>\Psr\Container\ContainerInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="57" package="Default">
        <name>has</name>
        <full_name>\Phile\Core\Container::has()</full_name>
        <docblock line="57">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="65" package="Default">
        <name>get</name>
        <full_name>\Phile\Core\Container::get()</full_name>
        <docblock line="65">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="89" package="Default">
        <name>set</name>
        <full_name>\Phile\Core\Container::set()</full_name>
        <docblock line="89">
          <description>Set an object</description>
          <long-description></long-description>
          <tag name="param" line="89" description="&lt;p&gt;Identifier for the object to set&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="89" description="&lt;p&gt;Object to set&lt;/p&gt;" type="\Phile\Core\type" variable="$object">
            <type>\Phile\Core\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>\Phile\Core\type</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Core" line="105" package="Default">
        <name>typeCheck</name>
        <full_name>\Phile\Core\Container::typeCheck()</full_name>
        <docblock line="105">
          <description>Check object-type matches required type for that ID</description>
          <long-description></long-description>
          <tag name="param" line="105" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="105" description="" type="mixed" variable="$object">
            <type>mixed</type>
          </tag>
          <tag name="return" line="105" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="105" description="" type="\Phile\Exception\ContainerException">
            <type>\Phile\Exception\ContainerException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="29" code="PPC:ERR-50015">Argument $config is missing from the Docblock of __construct</error>
      <error line="29" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="57" code="PPC:ERR-50015">Argument $id is missing from the Docblock of has</error>
      <error line="65" code="PPC:ERR-50015">Argument $id is missing from the Docblock of get</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $config</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $instance</error>
    </parse_markers>
    <source>eJylVttO3DAQfc9XTKutWNDCKkKlBUqLRC/ah7ao9A1Q5M06G5fETm2Hiyj/3rHjOJfNUlDzlMRnLufMeOx3H4q0CKZbWwFswTEpdSoknKYsoydfz+y/jPErSLUu1MF0umQ6Lec7scinNah6cdCYckUtGsGiwC9RypjuCLmculU1/Tr7ifBpEHCSU1WQmFYRL06EpIdBUKKLUyXxk2vCOG29zbimMkGLwwplzT7dxrTQTPAG903oz6LkC78ERMHKT4zlmM/yIqM55VoBAcXMF5ye/dgOQ4hrnzbnOCNKgY8DrDFcTTK4DwCfQgpNY00XMEJnCVvCEZxfYnCziAnA8TWRA+YmXtdeaaJZDCPG8Y0bFbo+iJTkDiS5AaZprlYdjMzaUHR6TbKSGMg6y3nJskXbtijnWFJISh5bhaMI2Skty1iP20Q3LbqSwjwjnTK1/d4jHPbQAh58XhV+C84oalsThgTb06lQKrKkDlWDjwsiST6kpdfMQadtDs6jp6Konjn4+DFffWqKZsnBgV825JpSDdP78ix6kupS8qFWewKrZYtVP3PnuEdgXdL3x4ynVDK9EPHDUGgfMyVqPGKLNeFsv0ZX9C6it0xpC53UDYKtuvn/CSDpoQRYAuMXLlCd42Zr3Tw6leIGOL1ZnRzjDtCWvpCM62S8McP9Ay9fqZfAhcaCohnWtynZzgYyxGiTFRfh63A/DMO3u3udJSdCJUQnf6aimGQZmWd03Ih2jt4vV8g4xXuwR1wrI1yFtlt/2O0KAnve5BTheJaRqUI/M1ffFquWH31X0JOUxledTmjFH0q4S60BPzJRgHAQ81842oYHCI4xxpemTjBb4HRnCcNhb3anTqmzBC3MoOhZGgYwcojvA8DhNlVVm05q08F+7dTb4dYUpC+kQw/J16uPGVoVep1+1q8TYdvyzYmOU6qwEr9LJvG0sH8ruYiG2cd/qdxbyNmtOXI6FfLD71q08HaPKrhYexPwv7ry+3PNV2CNYsN1aG2O6vQ63zD2auPysd03qL7TzNwhjPTrnR52ksC5FtnLiO8EODo66rr78wewZVQ5t8BIJDV20sE9J9tcmSPbD7ufuBu81NvMj768VLq5G9lNw+qj6sBCqinYS6QJ2czeJ5R2bNKaQLi7//b17t5e+MafGw/BX4iwLhA=</source>
  </file>
  <file path="plugins/phile/errorHandler/Classes/Development.php" generated-path="plugins.phile.errorHandler.Classes.Development.html" hash="931fde031a3ea1f30b11f45e498e715f" package="Default">
    <docblock line="0">
      <description>The Development Error Handler</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ErrorHandlerInterface">\Phile\ServiceLocator\ErrorHandlerInterface</namespace-alias>
    <namespace-alias name="Utility">\Phile\Core\Utility</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\ErrorHandler" line="19" package="Default">
      <extends/>
      <implements>\Phile\ServiceLocator\ErrorHandlerInterface</implements>
      <name>Development</name>
      <full_name>\Phile\Plugin\Phile\ErrorHandler\Development</full_name>
      <docblock line="19">
        <description>Class Development</description>
        <long-description>this is the development error handler for PhileCMS
inspired by the debug exception handler of TYPO3 we create this handler.
due to incompatibility of the two licenses (GPL and MIT) we have written
the entire code again. we thank the core team of TYPO3 for the great idea.</long-description>
        <tag name="package" line="19" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="25" package="Default">
        <name>$settings</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::settings</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;settings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ErrorHandler" line="32" package="Default">
        <name>__construct</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::__construct()</full_name>
        <docblock line="32">
          <description>constructor</description>
          <long-description></long-description>
          <tag name="param" line="32" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ErrorHandler" line="48" package="Default">
        <name>handleError</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::handleError()</full_name>
        <docblock line="48">
          <description>handle the error</description>
          <long-description></long-description>
          <tag name="param" line="48" description="" type="integer" variable="$errno">
            <type>integer</type>
          </tag>
          <tag name="param" line="48" description="" type="string" variable="$errstr">
            <type>string</type>
          </tag>
          <tag name="param" line="48" description="" type="string" variable="$errfile">
            <type>string</type>
          </tag>
          <tag name="param" line="48" description="" type="integer" variable="$errline">
            <type>integer</type>
          </tag>
          <tag name="param" line="48" description="" type="array" variable="$errcontext">
            <type>array</type>
          </tag>
          <tag name="return" line="48" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\ErrorHandlerInterface::handleError()" refers="\Phile\ServiceLocator\ErrorHandlerInterface::handleError()" link="/classes/Phile.ServiceLocator.ErrorHandlerInterface.html#method_handleError"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$errno</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errstr</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errfile</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errline</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errcontext</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ErrorHandler" line="64" package="Default">
        <name>handleShutdown</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::handleShutdown()</full_name>
        <docblock line="64">
          <description>handle PHP errors which can't be caught by error-handler</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ErrorHandler" line="85" package="Default">
        <name>handleException</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::handleException()</full_name>
        <docblock line="85">
          <description>handle all exceptions</description>
          <long-description></long-description>
          <tag name="param" line="85" description="" type="\Exception" variable="$exception">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="85" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\ErrorHandlerInterface::handleException()" refers="\Phile\ServiceLocator\ErrorHandlerInterface::handleException()" link="/classes/Phile.ServiceLocator.ErrorHandlerInterface.html#method_handleException"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="107" package="Default">
        <name>displayDeveloperOutput</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::displayDeveloperOutput()</full_name>
        <docblock line="107">
          <description>show a nice looking and human readable developer output</description>
          <long-description></long-description>
          <tag name="param" line="107" description="" type="" variable="$code"/>
          <tag name="param" line="107" description="" type="" variable="$message"/>
          <tag name="param" line="107" description="" type="" variable="$file"/>
          <tag name="param" line="107" description="" type="" variable="$line"/>
          <tag name="param" line="107" description="" type="array" variable="$backtrace">
            <type>array</type>
          </tag>
          <tag name="param" line="107" description="" type="\Exception" variable="$exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$line</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$backtrace</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="172" package="Default">
        <name>createBacktrace</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::createBacktrace()</full_name>
        <docblock line="172">
          <description>creates a human readable backtrace</description>
          <long-description></long-description>
          <tag name="param" line="172" description="" type="array" variable="$traces">
            <type>array</type>
          </tag>
          <tag name="return" line="172" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$traces</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="212" package="Default">
        <name>getBacktraceStepArguments</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::getBacktraceStepArguments()</full_name>
        <docblock line="212">
          <description>render arguments for backtrace step</description>
          <long-description></long-description>
          <tag name="param" line="212" description="" type="" variable="$step"/>
          <tag name="return" line="212" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$step</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="249" package="Default">
        <name>receiveCodeFragment</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::receiveCodeFragment()</full_name>
        <docblock line="249">
          <description>receive a code fragment from file</description>
          <long-description></long-description>
          <tag name="param" line="249" description="" type="" variable="$filename"/>
          <tag name="param" line="249" description="" type="" variable="$lineNumber"/>
          <tag name="param" line="249" description="" type="" variable="$linesBefore"/>
          <tag name="param" line="249" description="" type="" variable="$linesAfter"/>
          <tag name="return" line="249" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lineNumber</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$linesBefore</name>
          <default>3</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$linesAfter</name>
          <default>3</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="298" package="Default">
        <name>linkClass</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::linkClass()</full_name>
        <docblock line="298">
          <description>link the class or method to the API or return the method name</description>
          <long-description></long-description>
          <tag name="param" line="298" description="" type="" variable="$class"/>
          <tag name="param" line="298" description="" type="" variable="$method"/>
          <tag name="return" line="298" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="325" package="Default">
        <name>tag</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Development::tag()</full_name>
        <docblock line="325">
          <description>create HTML-tag</description>
          <long-description></long-description>
          <tag name="param" line="325" description="" type="string" variable="$tag">
            <type>string</type>
          </tag>
          <tag name="param" line="325" description="" type="string" variable="$content">
            <type>string</type>
          </tag>
          <tag name="param" line="325" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="325" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tag</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$content</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJylWv9v27oR/91/BZf5TXbr2OmK/pLE6frSdA2QrkaTYXhIAoGWaUuLLAkUlS94yP++O5KiKIqK0y4o9mzy+Lnj3fG+eccfi7gYzN68GZA35Cpm5DO7Z2lebFkmyBnnOSdfabZKGQeC2WCQ0S0rCxoxsoiTlN0s0mqTZDfqi6TX5EeDQVXWVJeM3ycRu8gjKnLeojvPBONrADyy6E9zzm7+LZI0EU8ApMU7TWlZ2gLCIq6LOCkJ/BMg/soSn0nxY8WHrOGzRD/9domnkqwsEs5WZPmkTy6rDWGPEStEkmfmXL4mV38svr8nD4xEnFHBFEO9P0WsVQWLOUBG+bagIllKyfEoIouHnKRw/axkJRn9c3FB4Cj5dn41RsyY3jPywBMhWKZuwwhID6KRKF8xQjc0yaZIKYDlndyPQD9EMLptpMPr4dYGRSTJitGptFjkKo0k2yJl+KkkXkMM/hwMCPxJrePfG/KPe8oJ5Zw+kZIJkWSbUm/N5H8LngsWCVDmsN4/6oBEeVYKXkXgAXrJwBeUw10Ug6GfQ7UEFZJ1lUXSOmFo4EbOOTIn17djeepPhQF/Q7TZ/olFY0mKBM8deZWBlT1QT36hE9Ao4gNJljt7IB8wkHvwsX9zDV7ZD5smmburbix3QQ2CPQpXOM5ExTOyzPOU0exFVap7SlcYqWtMapEnRryJEWVS26lh3lH2kkZ3gmOUmKt3FZqV0fjITydRwxIfyqjZmJC/2weUFVdJWaT0STs1498rUVRiZMgag0w6a3irzqK8YWdV3ra9auQyy+Md7rP4ulDuU5KHOIliEtEsEGQJj5hWm1hg+JH7+3EdZ3fa6jKuxCp/yEYdxauQN1eI4YaJEJ6/sHWerMmoJpvPSVal6dhCwD/lO82R51/Vf86vA/FUsOC2q1zcg1RS0k3vNlqlbw9tE9y+2go0TZvQXkcW51HdnJnYPzS0Pe9qmzyy1WteVY0z8qL3RKnX6bcG2T8BO59CqhiNXV21SL4pbe+g+gJK30FyAbp3SdCP+g7ttlIZ5w+EkgzePknz/A4DI+bIuNrSDPyRrugyNckdk7LUiN+OQ0yb7pp2NXfZE3mHvfHWff2v8hw3QRoH2WVkeY1GpfUNrJV21Bq2w5UrMpk7NvIKrakkkR0WYjAB46Pg69XVYvZu+o58ODggsmLIaEqwvAOjyBQS2OF6zelG1hzz2rU5i1hyz9Bdv+hNx689sbgbiD84X10XUxqj/I5hNLw2a8GSliyseBqQ+YlbFFw3u1bUURFMkjdq+kgCo76AHMI3eXfrlKEN6yiHELHYpmXBooSmUUx5OarNOvYeRRfoOYdb/kMybPoP4Zb/kIyn/kO41cNJW1Bpp/7mvwmWoZIusLX0kNwlyPtOb5mdW10/4p9KWSZmOtlKm/m6w+y28TrkILuHEaZEuW0jWk5j+Mna+4QcuOxaLBvxLWaCbkadI/K2NJj4N4wv7f8HEHuorr2r8nzM2VppMBaiKA9ns00i4mo5hX5kVjc96sMMZZ4ZhmFApm6o6cALylFvisMyhS4k8BLfdlYdzT4TlkKT92qNBoFzvqcaQ+W3c9SVW2s+O/5kzr7CnwytbWbVC/5u6loL0ct1+PkSDn8+/3F2evX9xx/h5dni049P8NGKWIXsphdUxEAK+Ck0k/FolXBsu0dh+OX84iwMx2gyQJuSYDoN9De7SC5SDWEDArVg0PqB0FPo+QPrgeXLsAQbt+pEKOvhLmKk1WFXkFmUVvA4aj5HNg7LVuE6rcrYxlolxhTd3K/0WEL6d7K9m22dpFtnOElSmk1doKnualcOdm3YgnSLM3Sbv0R5BRmrpvBXzi23tYpncyHMfqpNtYwADTyj0B/U4ISWZJhkK/Yoo2spWNFx1dYDaKJPUBbQZExIW1iyr/Em5Dqw4rFcC26dp2phT+EhEttfam0kJaTOkRStRrzt6ESCqSmEJx47h9FLj1F6Ilfme6vkPoHKY+/k8PB4hhsnTkjoyqqZTXcxmxD9vXaHjg5UuOrc1KL3XrYtTdcsHRjHIP3ytE0whLBcqUGO4QOhz7jzJbD5VJMo4X2ZzqD80mX2bIA9z02MBLuu09Wz7P9er2NfbdmCMqpX3eOEvId/O3TcfrTXTp4PCs7Qota8oqUAEIE/tS5u4etogfM47N6CFpBk1wRNN2pyCLQMZ3K1B+D8r1EKXrMnbA6tvZ8Ml7ucyxMwIeOIp9oKIK0vQrwcNW0nt0maeGmDy6hZH+nEywYLvAbunLKs5f84ETnA4h5reo+zq38tC5cM9Sqg+HfdW/lzmC//yzCPGqFeDJAa2hPj5KzNbqW8RW3D5bWVl+Gci5jxHayBE7ZDFp8XC7SWvl8qj7WCe1l3d7rVsGUVdanuoUAkQjdHBTi8CHlzkwkRvGLjzpl2UTv2+ah24Oa6fbWOjlBQ68j2wrTHa55viTWL8I0psAT0jSr+VW2XzB0uy53yd4aPxLv1aS1YZ6L9U8HAG21rQSe2bJOWOOBF7ye2FLjgrbUQLGSPSSnKBvknowe2s/7iyCBizXF4vOSzE/dt1xTyaTeY0nZzaS85YtU+agtpVePyojiSfVRhfu8mgzSp+ncbdZ3wUo7WUNxGeVi12drbJ++cYW5z8LjbrrZgD/yNCY6IPYzf2kZyeJojJ3WRKUk7xrGxW4Q9kmgpjND+WZJt6wdsaomCBQUYhl1JYPHtW6eKlatX0OsAqn/yUV4raNB7p0S2DsObCTmD7ipCCwuwcPC3bFkWR+p/g0lD7aKIbYEAMiCtR8FvBx9Wh+S3ktQuqcZfrfNtABPBef4QdHOQ1uq8Zd0XkpAs96OKQ4khfnQQnQhvrNJT6sLl2o9KMXEqIue9IlYN3NDVUbZbfeGh3v4S06T60VTeDsqkLRNxvsIfbHH50+IcFzU6ruh9K+C6IVRCuYvq2P8VU61WRWWwGlXPZbu/F2A+wxejyT6aT4dayvbDBTGKvEEP1M/tN4EufXpiq2Ljf7ImioLXrPKonEloVs5wsGS/igDYAMcpGkzSyGZvirYL2kLacV//nwAODzkr8/Se4c8TOHSwE8IvSI0DsyYt+AbAKJy8g2HkhECl506Ykcj4hP6qCNSATX1+qXawvJrKh4PC49Mxsz2FPanHcSpFhWocd7tjvEK+Xn272Af0nqag/jG6oehs6Sznbtc/RVMBdMtK/OooBm+O7Cd2uYktkZ7JNPj+3/d1og+Opb4ByNcpWCDYJ9yxJxmS7mladRNGHYoCIiGRGHxivoffurlCYwDF3guVCMKd6JGruiQOPGa1zPjNHnDUzoFnawM/D/4H74m9tg==</source>
  </file>
  <file path="lib/Phile/ServiceLocator/ParserInterface.php" generated-path="lib.Phile.ServiceLocator.ParserInterface.html" hash="847cb2a70b532d3f209bd606ccf614cf" package="Default">
    <docblock line="0">
      <description>The ServiceLocator interface</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Phile\ServiceLocator" line="14" package="Phile\ServiceLocator">
      <name>ParserInterface</name>
      <full_name>\Phile\ServiceLocator\ParserInterface</full_name>
      <docblock line="14">
        <description>Interface ParserInterface</description>
        <long-description></long-description>
        <tag name="link" line="14" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="14" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="14" description="Phile\ServiceLocator"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="23" package="Phile\ServiceLocator">
        <name>parse</name>
        <full_name>\Phile\ServiceLocator\ParserInterface::parse()</full_name>
        <docblock line="23">
          <description>parse data</description>
          <long-description></long-description>
          <tag name="param" line="23" description="" type="" variable="$data"/>
          <tag name="return" line="23" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <source>eJx1jj0LwjAQhvf8ihsctIPZVdC1oFDQ0SXGsw1tPrikIoj/3SS2oFCzhLvnzZtns3WNY7woGBRwahCOSHclcW+lCJZAmYB0ExIj58wIjd7FCapGdXj+Da/ZWFSOr6AS5JHKr5bEd50yLcTThOD8inOX6qT2S2n1EJBoPOZA5NbFyfYkcWmp5gP1/FCecjw6taKe1srm6q/RkyWRLJ5OAS4F4CqCGDYjiL+Q0DCbQoShJwNaPfA6LHm+XX+JtnDrjQzKmk/7PHcs1uzF3j83da8=</source>
  </file>
  <file path="plugins/phile/errorHandler/Classes/Plugin.php" generated-path="plugins.phile.errorHandler.Classes.Plugin.html" hash="05bcfb038bc0bf22f84b48a79266880e" package="Default">
    <docblock line="0">
      <description>Plugin class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Router">\Phile\Core\Router</namespace-alias>
    <namespace-alias name="ServiceLocator">\Phile\Core\ServiceLocator</namespace-alias>
    <namespace-alias name="AbstractPlugin">\Phile\Plugin\AbstractPlugin</namespace-alias>
    <namespace-alias name="Development">\Phile\Plugin\Phile\ErrorHandler\Development</namespace-alias>
    <namespace-alias name="ErrorLog">\Phile\Plugin\Phile\ErrorHandler\ErrorLog</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\ErrorHandler" line="22" package="Phile\Plugin\Phile\ParserMarkdown">
      <extends>\Phile\Plugin\AbstractPlugin</extends>
      <name>Plugin</name>
      <full_name>\Phile\Plugin\Phile\ErrorHandler\Plugin</full_name>
      <docblock line="22">
        <description>Class Plugin
Default Phile parser plugin for Markdown</description>
        <long-description></long-description>
        <tag name="author" line="22" description="PhileCMS"/>
        <tag name="link" line="22" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="22" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="22" description="Phile\Plugin\Phile\ParserMarkdown"/>
        <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin" refers="\Phile\Plugin\AbstractPlugin" link="/classes/Phile.Plugin.AbstractPlugin.html"/>
      </docblock>
      <constant namespace="Phile\Plugin\Phile\ErrorHandler" line="24" package="Phile\Plugin\Phile\ParserMarkdown">
        <name>HANDLER_ERROR_LOG</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Plugin::HANDLER_ERROR_LOG</full_name>
        <value>'error_log'</value>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Phile\Plugin\Phile\ErrorHandler" line="25" package="Phile\Plugin\Phile\ParserMarkdown">
        <name>HANDLER_DEVELOPMENT</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Plugin::HANDLER_DEVELOPMENT</full_name>
        <value>'development'</value>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="27" package="Phile\Plugin\Phile\ParserMarkdown">
        <name>$events</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Plugin::events</full_name>
        <default>array('plugins_loaded' =&gt; 'onPluginsLoaded')</default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin::events" refers="\Phile\Plugin\AbstractPlugin::events" link="/classes/Phile.Plugin.AbstractPlugin.html#property_events"/>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Phile\Plugin\Phile\ErrorHandler" line="25" package="Phile\Plugin">
        <name>$plugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::plugin</full_name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;plugin attributes&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="30" package="Phile\Plugin">
        <name>$events</name>
        <full_name>\Phile\Plugin\AbstractPlugin::events</full_name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="&lt;p&gt;subscribed Phile events ['eventName' =&gt; 'classMethodToCall']&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="35" package="Phile\Plugin">
        <name>$settings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::settings</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;the plugin settings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ErrorHandler" line="35" package="Phile\Plugin\Phile\ParserMarkdown">
        <name>onPluginsLoaded</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\Plugin::onPluginsLoaded()</full_name>
        <docblock line="35">
          <description>called on 'plugins_loaded' event</description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="throws" line="35" description="" type="\Phile\Exception\ServiceLocatorException">
            <type>\Phile\Exception\ServiceLocatorException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ErrorHandler" line="46" package="Phile\Plugin">
        <name>initializePlugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::initializePlugin()</full_name>
        <docblock line="46">
          <description>initialize plugin</description>
          <long-description>try to keep all initialization in one method to have a clean class
for the plugin-user</long-description>
          <tag name="param" line="46" description="" type="string" variable="$pluginKey">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="46" description="since 1.5.1 will be declared 'final'"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pluginKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ErrorHandler" line="98" package="Phile\Plugin">
        <name>injectSettings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::injectSettings()</full_name>
        <docblock line="98">
          <description>inject settings</description>
          <long-description>backwards compatibility to Phile 1.4</long-description>
          <tag name="param" line="98" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="98" description="since 1.5.1 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ErrorHandler" line="109" package="Phile\Plugin">
        <name>on</name>
        <full_name>\Phile\Plugin\AbstractPlugin::on()</full_name>
        <docblock line="109">
          <description>implements EventObserverInterface</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="string" variable="$eventKey">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Gateway\EventObserverInterface::on()" refers="\Phile\Gateway\EventObserverInterface::on()" link="/classes/Phile.Gateway.EventObserverInterface.html#method_on"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ErrorHandler" line="131" package="Phile\Plugin">
        <name>getPluginPath</name>
        <full_name>\Phile\Plugin\AbstractPlugin::getPluginPath()</full_name>
        <docblock line="131">
          <description>get file path to plugin root (trailing slash) or to a sub-item</description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="string" variable="$subPath">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="null if item does not exist" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subPath</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="27" code="PPC:ERR-50007">No summary for property $events</error>
    </parse_markers>
    <source>eJzFVE2P2jAQvedXzAEpgLqbe+jSbiHqVoIFsdteFoSMMyQRxo5sZ1mp2v9efwQaCFJ7qNQ5RJqZN8/zZux8/FTmZRD1+wH0Yc6qrOBAGVHK+FHAyR5VSSjCPC8YLj1g6Z1ESiEfCE8ZykEQVOqIGgmJy4WotI1fhJ9QvhYUJ4ISLc7SNff9RmlJqPbuFUD78OUYX5GJco9c/12BcyYiM23X0kdWcz0A649xSyqmPROURCqUUPr5bIWEKZG7VBws1sI/k0rnJuzxo+mTC7KC78BYrnWp4igqbZLu1S0V+xpAkZt+LcDkRWk8UUmKt0JmUZ1V0fTbs4ObTexIdlXe3HXY6CoKaEMS4JtGnio4H2/wM7D9UcGVhof7x/EkWayTxWK2WE9mX+EOQrSTWjORhYMr0HHyI5nM5tPk8dmC0997MHCHL6XQSDWm0DFJrpXBvYR+kMrwkhTTEO6GEArue1ITH1zVDG5B1vpACWOGSXBoMTjyGneEm3lJsgfgFWPQSYkmp4zOpTgoON6NN4qlLgS/uJ6neF0XeUnVxmwGthWnNgcXjXfdSUamPbbnKvyUrXV0XqiboUKtC56pl3BDFK4rycKVqehyPIB/OL2bYYb6i8l+l6zbG5wY1KHQNIduiyn3dztc9RrnuZUR+yJci3HcWnJ8hrV2PoM4lpgVyrRUx7utAmuhm+S6+crCD1eRVuPx/V2q6LUqGsqPtpFIdoM/S2xczv8isvFX+hc63wP/fQ9+AYHWuDA=</source>
  </file>
  <file path="plugins/phile/errorHandler/config.php" generated-path="plugins.phile.errorHandler.config.html" hash="4b8583bec02f4e09022f0a894a23b331" package="Default">
    <docblock line="0">
      <description>the configuration file</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <source>eJyzsS/IKODS19LiUtBSKMlIVUjOz0vLTC8tSizJzM9TSMvMSQXK6HNxFaWWlBblKSQWFSVWanApAIF6RmJeSk5qkboCMrC1U4gJyABqiwnIKU3PzINyXIuK8os8IBqgMlZWHo5+Lj6uQfGuQUH+QfE+/u5cmtZcAIl/LFc=</source>
  </file>
  <file path="lib/Phile/Phile.php" generated-path="lib.Phile.Phile.html" hash="73ab0e19f099fa30b62f1b63cf4ba953" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="author" line="0" description="PhileCMS"/>
      <tag name="link" line="0" description="https://philecms.com" link="https://philecms.com"/>
      <tag name="license" line="0" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Config">\Phile\Core\Config</namespace-alias>
    <namespace-alias name="Container">\Phile\Core\Container</namespace-alias>
    <namespace-alias name="Event">\Phile\Core\Event</namespace-alias>
    <namespace-alias name="RequestHandler">\Phile\Core\RequestHandler</namespace-alias>
    <namespace-alias name="Response">\Phile\Core\Response</namespace-alias>
    <namespace-alias name="Router">\Phile\Core\Router</namespace-alias>
    <namespace-alias name="Page">\Phile\Model\Page</namespace-alias>
    <namespace-alias name="Repository">\Phile\Repository\Page</namespace-alias>
    <namespace-alias name="MiddlewareInterface">\Interop\Http\Server\MiddlewareInterface</namespace-alias>
    <namespace-alias name="RequestHandlerInterface">\Interop\Http\Server\RequestHandlerInterface</namespace-alias>
    <namespace-alias name="ResponseInterface">\Psr\Http\Message\ResponseInterface</namespace-alias>
    <namespace-alias name="ServerRequestInterface">\Psr\Http\Message\ServerRequestInterface</namespace-alias>
    <class final="false" abstract="false" namespace="Phile" line="26" package="Default">
      <extends/>
      <implements>\Interop\Http\Server\MiddlewareInterface</implements>
      <name>Phile</name>
      <full_name>\Phile\Phile</full_name>
      <docblock line="26">
        <description>Phile Core class</description>
        <long-description></long-description>
        <tag name="package" line="26" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile" line="29" package="Default">
        <name>$config</name>
        <full_name>\Phile\Phile::config</full_name>
        <default></default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="29" description="&lt;p&gt;Phile configuration&lt;/p&gt;" type="\Phile\Core\Config" variable="">
            <type>\Phile\Core\Config</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile" line="32" package="Default">
        <name>$eventBus</name>
        <full_name>\Phile\Phile::eventBus</full_name>
        <default></default>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="32" description="&lt;p&gt;event-bus&lt;/p&gt;" type="\Phile\Core\Event" variable="">
            <type>\Phile\Core\Event</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile" line="35" package="Default">
        <name>$bootstrapConfigs</name>
        <full_name>\Phile\Phile::bootstrapConfigs</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;callbacks run at bootstrap&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile" line="38" package="Default">
        <name>$middlewareConfigs</name>
        <full_name>\Phile\Phile::middlewareConfigs</full_name>
        <default>array()</default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="&lt;p&gt;callbacks run on middleware-setup&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile" line="46" package="Default">
        <name>__construct</name>
        <full_name>\Phile\Phile::__construct()</full_name>
        <docblock line="46">
          <description>Constructor sets-up base Phile environment</description>
          <long-description></long-description>
          <tag name="param" line="46" description="" type="\Phile\Core\Event" variable="$eventBus">
            <type>\Phile\Core\Event</type>
          </tag>
          <tag name="param" line="46" description="" type="\Phile\Core\Config" variable="$config">
            <type>\Phile\Core\Config</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventBus</name>
          <default></default>
          <type>\Phile\Core\Event</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Phile\Core\Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile" line="55" package="Default">
        <name>addBootstrap</name>
        <full_name>\Phile\Phile::addBootstrap()</full_name>
        <docblock line="55">
          <description>Adds bootstrap-setup</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bootstrap</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile" line="64" package="Default">
        <name>addMiddleware</name>
        <full_name>\Phile\Phile::addMiddleware()</full_name>
        <docblock line="64">
          <description>Adds middleware-setup</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$middleware</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile" line="73" package="Default">
        <name>bootstrap</name>
        <full_name>\Phile\Phile::bootstrap()</full_name>
        <docblock line="73">
          <description>Performs bootstrap</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile" line="84" package="Default">
        <name>dispatch</name>
        <full_name>\Phile\Phile::dispatch()</full_name>
        <docblock line="84">
          <description>Processes request</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile" line="100" package="Default">
        <name>process</name>
        <full_name>\Phile\Phile::process()</full_name>
        <docblock line="100">
          <description>Implements PSR-15 middle-ware process-handler</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\Psr\Http\Message\ServerRequestInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$handler</name>
          <default></default>
          <type>\Interop\Http\Server\RequestHandlerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile" line="137" package="Default">
        <name>resolveCurrentPage</name>
        <full_name>\Phile\Phile::resolveCurrentPage()</full_name>
        <docblock line="137">
          <description>Resolves request into the current page</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$router</name>
          <default></default>
          <type>\Phile\Core\Router</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile" line="177" package="Default">
        <name>renderHtml</name>
        <full_name>\Phile\Phile::renderHtml()</full_name>
        <docblock line="177">
          <description>Renders page into output format (HTML)</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$page</name>
          <default></default>
          <type>\Phile\Model\Page</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="55" code="PPC:ERR-50015">Argument $bootstrap is missing from the Docblock of addBootstrap</error>
      <error line="64" code="PPC:ERR-50015">Argument $middleware is missing from the Docblock of addMiddleware</error>
      <error line="84" code="PPC:ERR-50015">Argument $request is missing from the Docblock of dispatch</error>
      <error line="100" code="PPC:ERR-50015">Argument $request is missing from the Docblock of process</error>
      <error line="100" code="PPC:ERR-50015">Argument $handler is missing from the Docblock of process</error>
      <error line="137" code="PPC:ERR-50015">Argument $router is missing from the Docblock of resolveCurrentPage</error>
      <error line="177" code="PPC:ERR-50015">Argument $page is missing from the Docblock of renderHtml</error>
    </parse_markers>
    <source>eJzNWG1P40YQ/p5fsSch7ND4cqdev0BJKegqkC5SFGi/AIo29ia2cHbd3TUUVfz3zr7YXq+dBDipunzgkp0XPzPzzOz4fv2tSIvB+OhogI7QGS5lyjhCszTLycX0Wh/mGX1A8EmlLMTxeFwoYbwRH2O2sQoxoYJoBZCzAn6xksfkI+PrsZWK8fTqBtTHgwHFGyIKHBPznJPBoBT2+90F4+oPXWXrk55jiTNKeEfy9ZFQ2Tmdk79LIuQlpkneYzQHEAyQdQWslG39KUtIfjfD65bynBRMZJLxZy1CWKDmyCheUfDEirtLSM3dNeGPhN9NswTwPGFOtHQFidiu3I7BM5gJbpSnRAhAUIe0T884t74d5YoIOj6kkoHiHAuh66a/WVG2KXKygaQL1BPO4N+BIgw4Q2ePmCNTT2sa6x8lxzJjVPlVqgVnksSSJOggtsVvu9AVRkT9jZal6LHTsvNS+JaYc/yMYpznSxw/CMRLirBES8akkBwXPa5qmQEu0Cm6vX+NXwhoU6cjEkSWfe4blX7/+l+oAkgBRRkDnRD4EhF4W+KKfojQx4wzqqpgLSrDswJzvLE5qxPjSW1RbL6t0GItl9C1aFXSWBdpsYgrKKHndOT5GWoHpv7qcyDTTESTSh0idQrlKRkPSqXigBK+dPLye5KIpn4mzTvx4yQ5r9RDVTG8hPw1Zd4C2qfB7b3CVp82+Dkg4NSY7QTtk2Mf6qa3HNiNky24O/wywJvjtyGfQVMzvnFSvhN2rRX68MALwXGKwi35VQO0opFjpj4q+gWMMr5Qz1no3gut7gjdeiwbtRl1P2wCfnlb6JzFMDIJdLeZlTsjTzK41WSchgdWex+vwuGWHogmOYsflLiR89ZNAAWl5Am1r4fQHJk7wPHtJ747gN6f+Taskd/wO0vRqUXbWTRJ9Zcmn9vqdNVcR7PrefT5F9tpkYpRjV5Vxch44ztraHXD/huyRjhCWy5mdGCf0qk911tFVTf9ow4smqyJNI+cqeEswqGTqHrvOT4GtSuYxJjGJBxGExgiYaBvg4XxGIyqB7ncGY/R+cUx3CE0gVQbeqAMJswKFBcZzSQMeEiULprLOKtaca3alzoaGslFirkC5DF5rTDGRhYMu4yvmBJNJM/Wa8hK4OGCoG6D6lEBOp2gw/rJLqGyFQoPnPhMntgKddYin+QN//wQHZIeFGrJO61wgy7LH8lFyTkEoBbAsEl9C5K2ew+cQi+cfVBSucldKDQh/BLOzMN8AFr7PQCUYT8AW9AGQ3+5e7gCJu05BbYwniRR+KtDg3nYAhVNnjKZXhKcKI6oplDL4M1zoQgSSPKPHGu8yD79NEAfa6BuO9RF0WhV5a6ScIhO+2OhTC5WrKTJQpkAg71cuYE5DaGwXkssSxF++fRl39hzadcdb3NDtfoWglpKhmQKy7RhH1LQ2nOtXjfr0dZDWDM06pHhj6xCp0bHpRV0Rqz9nzwPt5SXlnn+ijZvZTGwoS1KngWjlug2UGeq7S2gEdo6DWrD/3Es8Pqdrx6U1UErQ9X4aPSjySqjyfnzDMs0tMG5Fpp2ysSfIOZNtB2hUT48rMv24dRatmjeoW/Jc7fC8PMPxs046xqf9OWnv53nJMk4ULBpaXA9Qj9/+tzfDCqIDyaKDsZ9qXtN27ah77t8oGeDfpyv5LNxY3vOYPBpberkMVtrGlarrz8W17sXU9+wUpeRQJazMKiAWUUp1Ra6gRfv8PJm+m24f1jVV5r+vxVzr+1+uXSKuCRq5zUrhCSwHQIhW7cRoWvYqIBTauvKYvKNxRh4pTcse1RtVjeOvXMBgv+/4GrpvQErE6XQXvIdAVjOyTqDN4Fn/dgwcKXBEP3UPKVx0ZiIjsmo/QDv9eH75rPNqKlLk1Of05Xgq86vpaxJ9o9FZQvKbK7uDuctUPWqVembDLTfzd42Er4ng6aX7KmC1spdp1GbBe5l8DL4D1eum64=</source>
  </file>
  <file path="plugins/phile/testPlugin/Classes/Plugin.php" generated-path="plugins.phile.testPlugin.Classes.Plugin.html" hash="66fd99396a171acc1c8513b850b60515" package="Default">
    <docblock line="0">
      <description>test class used in Phile's unit tests</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="AbstractPlugin">\Phile\Plugin\AbstractPlugin</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\TestPlugin" line="10" package="Default">
      <extends>\Phile\Plugin\AbstractPlugin</extends>
      <name>Plugin</name>
      <full_name>\Phile\Plugin\Phile\TestPlugin\Plugin</full_name>
      <docblock line="10">
        <description>the AbstractPlugin class for implementing a plugin for PhileCMS</description>
        <long-description></long-description>
        <tag name="package" line="10" description="Default"/>
        <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin" refers="\Phile\Plugin\AbstractPlugin" link="/classes/Phile.Plugin.AbstractPlugin.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\TestPlugin" line="13" package="Default">
        <name>$events</name>
        <full_name>\Phile\Plugin\Phile\TestPlugin\Plugin::events</full_name>
        <default>array('phile\testPlugin.testEvent' =&gt; 'onTestEvent', 'phile\testPlugin.testEvent-missingMethod' =&gt; 'missingMethod')</default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin::events" refers="\Phile\Plugin\AbstractPlugin::events" link="/classes/Phile.Plugin.AbstractPlugin.html#property_events"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\TestPlugin" line="18" package="Default">
        <name>$settings</name>
        <full_name>\Phile\Plugin\Phile\TestPlugin\Plugin::settings</full_name>
        <default>array('A' =&gt; 'X', 'B' =&gt; 'X', 'C' =&gt; 'C')</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin::settings" refers="\Phile\Plugin\AbstractPlugin::settings" link="/classes/Phile.Plugin.AbstractPlugin.html#property_settings"/>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Phile\Plugin\Phile\TestPlugin" line="25" package="Phile\Plugin">
        <name>$plugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::plugin</full_name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;plugin attributes&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\TestPlugin" line="30" package="Phile\Plugin">
        <name>$events</name>
        <full_name>\Phile\Plugin\AbstractPlugin::events</full_name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="&lt;p&gt;subscribed Phile events ['eventName' =&gt; 'classMethodToCall']&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\TestPlugin" line="35" package="Phile\Plugin">
        <name>$settings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::settings</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;the plugin settings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TestPlugin" line="27" package="Default">
        <name>getPluginPath</name>
        <full_name>\Phile\Plugin\Phile\TestPlugin\Plugin::getPluginPath()</full_name>
        <docblock line="27">
          <description>accessor for easy testing</description>
          <long-description></long-description>
          <tag name="param" line="27" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="27" description="" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin::getPluginPath()" refers="\Phile\Plugin\AbstractPlugin::getPluginPath()" link="/classes/Phile.Plugin.AbstractPlugin.html#method_getPluginPath"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\TestPlugin" line="32" package="Default">
        <name>onTestEvent</name>
        <full_name>\Phile\Plugin\Phile\TestPlugin\Plugin::onTestEvent()</full_name>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TestPlugin" line="46" package="Phile\Plugin">
        <name>initializePlugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::initializePlugin()</full_name>
        <docblock line="46">
          <description>initialize plugin</description>
          <long-description>try to keep all initialization in one method to have a clean class
for the plugin-user</long-description>
          <tag name="param" line="46" description="" type="string" variable="$pluginKey">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="46" description="since 1.5.1 will be declared 'final'"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pluginKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TestPlugin" line="98" package="Phile\Plugin">
        <name>injectSettings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::injectSettings()</full_name>
        <docblock line="98">
          <description>inject settings</description>
          <long-description>backwards compatibility to Phile 1.4</long-description>
          <tag name="param" line="98" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="98" description="since 1.5.1 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TestPlugin" line="109" package="Phile\Plugin">
        <name>on</name>
        <full_name>\Phile\Plugin\AbstractPlugin::on()</full_name>
        <docblock line="109">
          <description>implements EventObserverInterface</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="string" variable="$eventKey">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Gateway\EventObserverInterface::on()" refers="\Phile\Gateway\EventObserverInterface::on()" link="/classes/Phile.Gateway.EventObserverInterface.html#method_on"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\TestPlugin" line="131" package="Phile\Plugin">
        <name>getPluginPath</name>
        <full_name>\Phile\Plugin\AbstractPlugin::getPluginPath()</full_name>
        <docblock line="131">
          <description>get file path to plugin root (trailing slash) or to a sub-item</description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="string" variable="$subPath">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="null if item does not exist" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subPath</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="10" code="PPC:ERR-50005">No summary for class \Phile\Plugin\Phile\TestPlugin\Plugin</error>
      <error line="32" code="PPC:ERR-50008">No summary for method onTestEvent()</error>
      <error line="13" code="PPC:ERR-50007">No summary for property $events</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $settings</error>
    </parse_markers>
    <source>eJyNkU1vwjAMhu/5FT4gBSo27rAvhnacxIHDpLFDCIZGKmlUu9Mmxn+fm5QO2A6zVMkfj1+7zs19yIMaZZmCDBiJwRaGCGrCNTgP89wVqCX2jmOdBBwp5c0OKRiLiVjOi3rr/DIFC+FSYqKUKJ0z0xVxZewPkSamEPCD0a8Jzim1VwrEQlUyWpbdeviOnglu4TVWGtMhzuFu/HXjPjWghts70KVfdInhf9qudo7I+e0zcl6uk8h5Kqq8TX6tR8gsVFxQT1Pnix6CfjzxZ8mf6aNAfIjGMjDWIlFZwUY+NPQZzy+SLXDkHoKpzA7kWlKDXjCcXxIVcl158HVRfCWuLY3S1vWqcBY2tbfsSg9bbO8wF61+VJS/0HoQ6X13t1ZW5sulxuM/2gaTCB8ur9ONOnmQ/qn8QR3UN8BHy0Q=</source>
  </file>
  <file path="lib/Phile/Registry.php" generated-path="lib.Phile.Registry.html" hash="e09c8a50ff3e28f9e451c14eca6e1f0a" package="Default">
    <docblock line="0">
      <description>Registry class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile" line="17" package="Phile">
      <extends>\Phile\Core\Registry</extends>
      <name>Registry</name>
      <full_name>\Phile\Registry</full_name>
      <docblock line="17">
        <description>the Registry class for implementing a registry</description>
        <long-description></long-description>
        <tag name="author" line="17" description="Frank NÃ¤gler"/>
        <tag name="link" line="17" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="17" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="17" description="Phile"/>
        <tag name="deprecated" line="17" description="since 1.4 will be removed"/>
        <tag name="use" line="17" description="\Phile\Core\Registry"/>
        <tag name="inherited_from" description="\Phile\Core\Registry" refers="\Phile\Core\Registry" link="/classes/Phile.Core.Registry.html"/>
      </docblock>
      <property static="true" visibility="private" namespace="Phile" line="22" package="Phile\Core">
        <name>$registry</name>
        <full_name>\Phile\Core\Registry::registry</full_name>
        <default>null</default>
        <docblock line="22">
          <description>Registry object provides storage for shared objects.</description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="\Phile\Core\Registry" variable="">
            <type>\Phile\Core\Registry</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="29" package="Phile\Core">
        <name>getInstance</name>
        <full_name>\Phile\Core\Registry::getInstance()</full_name>
        <docblock line="29">
          <description>Retrieves the default registry instance.</description>
          <long-description></long-description>
          <tag name="return" line="29" description="" type="\Phile\Core\Registry">
            <type>\Phile\Core\Registry</type>
          </tag>
        </docblock>
        <inherited_from>\Phile\Core\Registry</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="48" package="Phile\Core">
        <name>setInstance</name>
        <full_name>\Phile\Core\Registry::setInstance()</full_name>
        <docblock line="48">
          <description>Set the default registry instance to a specified instance.</description>
          <long-description></long-description>
          <tag name="param" line="48" description="&lt;p&gt;An object instance of type Registry,&#10;                          or a subclass.&lt;/p&gt;" type="\Phile\Core\Registry" variable="$registry">
            <type>\Phile\Core\Registry</type>
          </tag>
          <tag name="param" line="48" description="" type="\Phile\Core\Registry" variable="$registry">
            <type>\Phile\Core\Registry</type>
          </tag>
          <tag name="throws" line="48" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$registry</name>
          <default></default>
          <type>\Phile\Core\Registry</type>
        </argument>
        <inherited_from>\Phile\Core\Registry</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Phile" line="61" package="Phile\Core">
        <name>init</name>
        <full_name>\Phile\Core\Registry::init()</full_name>
        <docblock line="61">
          <description>Initialize the default registry instance.</description>
          <long-description></long-description>
          <tag name="return" line="61" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\Phile\Core\Registry</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="78" package="Phile\Core">
        <name>get</name>
        <full_name>\Phile\Core\Registry::get()</full_name>
        <docblock line="78">
          <description>getter method, basically same as offsetGet().</description>
          <long-description>This method can be called from an object of type Registry, or it
can be called statically.  In the latter case, it uses the default
static instance stored in the class.</long-description>
          <tag name="param" line="78" description="&lt;ul&gt;&#10;&lt;li&gt;get the value associated with $index&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="return" line="78" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="78" description="if no entry is registerd for $index." type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Core\Registry</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="101" package="Phile\Core">
        <name>set</name>
        <full_name>\Phile\Core\Registry::set()</full_name>
        <docblock line="101">
          <description>setter method, basically same as offsetSet().</description>
          <long-description>This method can be called from an object of type Registry, or it
can be called statically.  In the latter case, it uses the default
static instance stored in the class.</long-description>
          <tag name="param" line="101" description="&lt;p&gt;The location in the ArrayObject in which to store&#10;                     the value.&lt;/p&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;The object to store in the ArrayObject.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="101" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Phile\Core\Registry</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="115" package="Phile\Core">
        <name>isRegistered</name>
        <full_name>\Phile\Core\Registry::isRegistered()</full_name>
        <docblock line="115">
          <description>Returns TRUE if the $index is a named value in the registry,
or FALSE if $index was not found in the registry.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Core\Registry</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile" line="130" package="Phile\Core">
        <name>__construct</name>
        <full_name>\Phile\Core\Registry::__construct()</full_name>
        <docblock line="130">
          <description>the constructor</description>
          <long-description></long-description>
          <tag name="param" line="130" description="&lt;p&gt;data array&lt;/p&gt;" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;ArrayObject flags&lt;/p&gt;" type="integer" variable="$flags">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$flags</name>
          <default>parent::ARRAY_AS_PROPS</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Phile\Core\Registry</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile" line="144" package="Phile\Core">
        <name>offsetExists</name>
        <full_name>\Phile\Core\Registry::offsetExists()</full_name>
        <docblock line="144">
          <description>method to check if offset exists</description>
          <long-description></long-description>
          <tag name="param" line="144" description="" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="returns" line="144" description="mixed&#10;&#10;Workaround for http://bugs.php.net/bug.php?id=40442 (ZF-960)."/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Core\Registry</inherited_from>
      </method>
    </class>
    <source>eJxtkE1KBTEQhPc5Ra9nMUFwpYKCILh4Ig+Xs4mZchJe/khn/EG8jTfxYmYy8xTEWlZ/RXf1xWUySciuE9TRHpPlkt9IO8VcHSmC8uCkNOjeWIdzcWSLwR+enmIm65ODRyg2TKQob0RNLKErNRdTqUU3WYUD3X19Tg65DZ2txipTSuIzKdOyVHvudfQboxEYR6YiMVUjzlmjj3mSG8Byd/vQEvX4g5paolVo5oiUoVXBSGxDbXfSn9KLdY4eUY/28RljA+d116KhxYfrmDHsf3tJsbb/eQZeC8LI//Pv4kN8A18bd2w=</source>
  </file>
  <file path="plugins/phile/simpleFileDataPersistence/Classes/Plugin.php" generated-path="plugins.phile.simpleFileDataPersistence.Classes.Plugin.html" hash="e49edb1ca1e12539684bfe3135073434" package="Default">
    <docblock line="0">
      <description>Plugin class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ServiceLocator">\Phile\Core\ServiceLocator</namespace-alias>
    <namespace-alias name="AbstractPlugin">\Phile\Plugin\AbstractPlugin</namespace-alias>
    <namespace-alias name="SimpleFileDataPersistence">\Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence\SimpleFileDataPersistence</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence" line="20" package="Phile\Plugin\Phile\SimpleFileDataPersistence">
      <extends>\Phile\Plugin\AbstractPlugin</extends>
      <name>Plugin</name>
      <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Plugin</full_name>
      <docblock line="20">
        <description>Class Plugin
Default Phile data persistence engine</description>
        <long-description></long-description>
        <tag name="author" line="20" description="PhileCMS"/>
        <tag name="link" line="20" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="20" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="20" description="Phile\Plugin\Phile\SimpleFileDataPersistence"/>
        <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin" refers="\Phile\Plugin\AbstractPlugin" link="/classes/Phile.Plugin.AbstractPlugin.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence" line="23" package="Phile\Plugin\Phile\SimpleFileDataPersistence">
        <name>$events</name>
        <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Plugin::events</full_name>
        <default>array('plugins_loaded' =&gt; 'onPluginsLoaded')</default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin::events" refers="\Phile\Plugin\AbstractPlugin::events" link="/classes/Phile.Plugin.AbstractPlugin.html#property_events"/>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence" line="25" package="Phile\Plugin">
        <name>$plugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::plugin</full_name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;plugin attributes&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence" line="30" package="Phile\Plugin">
        <name>$events</name>
        <full_name>\Phile\Plugin\AbstractPlugin::events</full_name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="&lt;p&gt;subscribed Phile events ['eventName' =&gt; 'classMethodToCall']&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence" line="35" package="Phile\Plugin">
        <name>$settings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::settings</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;the plugin settings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence" line="32" package="Phile\Plugin\Phile\SimpleFileDataPersistence">
        <name>onPluginsLoaded</name>
        <full_name>\Phile\Plugin\Phile\SimpleFileDataPersistence\Plugin::onPluginsLoaded()</full_name>
        <docblock line="32">
          <description>onPluginsLoaded method</description>
          <long-description></long-description>
          <tag name="param" line="32" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="32" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence" line="46" package="Phile\Plugin">
        <name>initializePlugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::initializePlugin()</full_name>
        <docblock line="46">
          <description>initialize plugin</description>
          <long-description>try to keep all initialization in one method to have a clean class
for the plugin-user</long-description>
          <tag name="param" line="46" description="" type="string" variable="$pluginKey">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="46" description="since 1.5.1 will be declared 'final'"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pluginKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence" line="98" package="Phile\Plugin">
        <name>injectSettings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::injectSettings()</full_name>
        <docblock line="98">
          <description>inject settings</description>
          <long-description>backwards compatibility to Phile 1.4</long-description>
          <tag name="param" line="98" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="98" description="since 1.5.1 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence" line="109" package="Phile\Plugin">
        <name>on</name>
        <full_name>\Phile\Plugin\AbstractPlugin::on()</full_name>
        <docblock line="109">
          <description>implements EventObserverInterface</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="string" variable="$eventKey">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Gateway\EventObserverInterface::on()" refers="\Phile\Gateway\EventObserverInterface::on()" link="/classes/Phile.Gateway.EventObserverInterface.html#method_on"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\SimpleFileDataPersistence" line="131" package="Phile\Plugin">
        <name>getPluginPath</name>
        <full_name>\Phile\Plugin\AbstractPlugin::getPluginPath()</full_name>
        <docblock line="131">
          <description>get file path to plugin root (trailing slash) or to a sub-item</description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="string" variable="$subPath">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="null if item does not exist" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subPath</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="23" code="PPC:ERR-50007">No summary for property $events</error>
    </parse_markers>
    <source>eJyVkstKQzEQhvd5ilkIpy3i2bdeaREEhYLurJSYM7ahOUnIpQrquztJTrUtXnBWmfzfTDJ/cnxml5bVgwGDAUxVXEgNQnHvKa+Z5i16ywXCdCkVzgowK8mtbK3CS1pOeOBTdF76gFrgiLHoNyVj4whFt5YCr43gwbjRltx1vHj0wXERSvoN8MeRs+31bxfrJh2nEbt5Uz7BJx5VKGdCQ2Vgv+oANXFIYGLPeQxL46DA45vbvKmkXgHFMgTrh3VtkyhafyRM2wECNY2VANKNpcxEJ/DIuEXdqb6+ubrLOLm+4ov/uZDfTGyNBvhCQuNh11/2yli6q3UmoAjYwAGuUQcPJ3Bf2cz4uTK8waaCk1OojC6V/rpsPoxKh2xnigHsIdAiudR06gaisRxvQUel4CDZvK87DNFpaOULNm9rIzcN6nLh+EhGwVPUIkij98/s5ZY0ROrfzxWvpZ5i9w8Ohw4XyTbX7fc+wRRVdnqe/J1vGVwd7lAan+HHx+j1P9n+KC/f2Tv7ABe4HVM=</source>
  </file>
  <file path="plugins/phile/templateTwig/Classes/Plugin.php" generated-path="plugins.phile.templateTwig.Classes.Plugin.html" hash="16b779a68a606a833bcded3def70a4d7" package="Default">
    <docblock line="0">
      <description>Plugin class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ServiceLocator">\Phile\Core\ServiceLocator</namespace-alias>
    <namespace-alias name="AbstractPlugin">\Phile\Plugin\AbstractPlugin</namespace-alias>
    <namespace-alias name="Twig">\Phile\Plugin\Phile\TemplateTwig\Template\Twig</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\TemplateTwig" line="20" package="Phile\Plugin\Phile\TemplateTwig">
      <extends>\Phile\Plugin\AbstractPlugin</extends>
      <name>Plugin</name>
      <full_name>\Phile\Plugin\Phile\TemplateTwig\Plugin</full_name>
      <docblock line="20">
        <description>Class Plugin
Default Phile template engine</description>
        <long-description></long-description>
        <tag name="author" line="20" description="PhileCMS"/>
        <tag name="link" line="20" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="20" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="20" description="Phile\Plugin\Phile\TemplateTwig"/>
        <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin" refers="\Phile\Plugin\AbstractPlugin" link="/classes/Phile.Plugin.AbstractPlugin.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig" line="22" package="Phile\Plugin\Phile\TemplateTwig">
        <name>$events</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Plugin::events</full_name>
        <default>array('plugins_loaded' =&gt; 'onPluginsLoaded')</default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin::events" refers="\Phile\Plugin\AbstractPlugin::events" link="/classes/Phile.Plugin.AbstractPlugin.html#property_events"/>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Phile\Plugin\Phile\TemplateTwig" line="25" package="Phile\Plugin">
        <name>$plugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::plugin</full_name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;plugin attributes&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig" line="30" package="Phile\Plugin">
        <name>$events</name>
        <full_name>\Phile\Plugin\AbstractPlugin::events</full_name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="&lt;p&gt;subscribed Phile events ['eventName' =&gt; 'classMethodToCall']&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig" line="35" package="Phile\Plugin">
        <name>$settings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::settings</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;the plugin settings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TemplateTwig" line="31" package="Phile\Plugin\Phile\TemplateTwig">
        <name>onPluginsLoaded</name>
        <full_name>\Phile\Plugin\Phile\TemplateTwig\Plugin::onPluginsLoaded()</full_name>
        <docblock line="31">
          <description>onPluginsLoaded method</description>
          <long-description></long-description>
          <tag name="param" line="31" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="31" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TemplateTwig" line="46" package="Phile\Plugin">
        <name>initializePlugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::initializePlugin()</full_name>
        <docblock line="46">
          <description>initialize plugin</description>
          <long-description>try to keep all initialization in one method to have a clean class
for the plugin-user</long-description>
          <tag name="param" line="46" description="" type="string" variable="$pluginKey">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="46" description="since 1.5.1 will be declared 'final'"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pluginKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TemplateTwig" line="98" package="Phile\Plugin">
        <name>injectSettings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::injectSettings()</full_name>
        <docblock line="98">
          <description>inject settings</description>
          <long-description>backwards compatibility to Phile 1.4</long-description>
          <tag name="param" line="98" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="98" description="since 1.5.1 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\TemplateTwig" line="109" package="Phile\Plugin">
        <name>on</name>
        <full_name>\Phile\Plugin\AbstractPlugin::on()</full_name>
        <docblock line="109">
          <description>implements EventObserverInterface</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="string" variable="$eventKey">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Gateway\EventObserverInterface::on()" refers="\Phile\Gateway\EventObserverInterface::on()" link="/classes/Phile.Gateway.EventObserverInterface.html#method_on"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\TemplateTwig" line="131" package="Phile\Plugin">
        <name>getPluginPath</name>
        <full_name>\Phile\Plugin\AbstractPlugin::getPluginPath()</full_name>
        <docblock line="131">
          <description>get file path to plugin root (trailing slash) or to a sub-item</description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="string" variable="$subPath">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="null if item does not exist" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subPath</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="22" code="PPC:ERR-50007">No summary for property $events</error>
    </parse_markers>
    <source>eJyFkstOIzEQRff+ilpE6iQCep8ML4UNEkhIZEdGyLiLbgu3bdnlgMTw7/iViGRGmlp11T2ux1X/urSDZe18zmAODyr0UoNQ3PuYt0zzEb3lAuFhkAo3BdiUZI2jVZxw/S77JWPB76iVcbh5RLeVAu+M4GTc8odcm1y/eHJcUEn/Afw9ZZ9s6sy69yotXLdP+Q2+8qCotAOqjwB11DECibnigQbjoECr+8dcVFK/QYyByPpF29okitGfCTNWQKCOmyYg6sbGzAQn8My4vq2qb+9v1xmP3r3x/r+HZbPFjysAPwh15+HQJfbJ0nbWGUJB2MEEt6jJwzk8NTYj/lkZ3mHXwPkFNEaXh/6uFH9H01KHbFyKORwhMGL0pavqDoqHOD6CDkrBpOPEj3WHFJyGUX5g92dr5K5BWxYOL9EaeA1akDT6eOY0t4xHpP6z/KIcmuLwR1osHPbSE7pan+7BFE329nnnbXNyoGp8h2T3dEKD9KcXHomk7v1sT82W+fOLfbFvic37sg==</source>
  </file>
  <file path="lib/Phile/ServiceLocator/MetaInterface.php" generated-path="lib.Phile.ServiceLocator.MetaInterface.html" hash="ba6bf7d491f92217351c9add8e259d74" package="Default">
    <docblock line="0">
      <description>ServiceLocator MetaParser interface</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Phile\ServiceLocator" line="14" package="Phile\ServiceLocator">
      <name>MetaInterface</name>
      <full_name>\Phile\ServiceLocator\MetaInterface</full_name>
      <docblock line="14">
        <description>Interface MetaInterface</description>
        <long-description></long-description>
        <tag name="link" line="14" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="14" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="14" description="Phile\ServiceLocator"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="23" package="Phile\ServiceLocator">
        <name>parse</name>
        <full_name>\Phile\ServiceLocator\MetaInterface::parse()</full_name>
        <docblock line="23">
          <description>parse the content</description>
          <long-description></long-description>
          <tag name="param" line="23" description="" type="" variable="$rawData"/>
          <tag name="return" line="23" description="with key/value store" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rawData</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <source>eJx1jzFPAzEMhff8Cg8McEOzUyQYWE6iUiUYWUzk9qK7SyLHaVUh/jtOuJMAgRfLes/Pn+/u05CM7ToDHTwTn7yjp+hQIsOOBPfImRh8EOIDOlKbNQFnykkn2A9+otefe1uz5vXrVovqv2VU9WHyYQStQSTlW2tTDXNz3rg4LwZHIVMzqB6TTrGwo03ko13UbHf9S7Mr0YjHv6Eat/+H591UjAZdq4NUvwYZCFxUV5BFWHU9xTjDFeP5EQV/q0xSOAAy4wXOXgYY6WJPOBWCrDC0OG3rqbzpK3AowYmP4ev49Zp9szUf5hOPe4Oy</source>
  </file>
  <file path="lib/Phile/Core/Registry.php" generated-path="lib.Phile.Core.Registry.html" hash="5e98f407ba3dcae60f50954e1a544807" package="Default">
    <docblock line="0">
      <description>Registry class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile\Core" line="15" package="Phile\Core">
      <extends>\ArrayObject</extends>
      <name>Registry</name>
      <full_name>\Phile\Core\Registry</full_name>
      <docblock line="15">
        <description>the Registry class for implementing a registry</description>
        <long-description></long-description>
        <tag name="author" line="15" description="Frank NÃ¤gler"/>
        <tag name="link" line="15" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="15" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="15" description="Phile\Core"/>
      </docblock>
      <property static="true" visibility="private" namespace="Phile\Core" line="22" package="Phile\Core">
        <name>$registry</name>
        <full_name>\Phile\Core\Registry::registry</full_name>
        <default>null</default>
        <docblock line="22">
          <description>Registry object provides storage for shared objects.</description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="\Phile\Core\Registry" variable="">
            <type>\Phile\Core\Registry</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="29" package="Phile\Core">
        <name>getInstance</name>
        <full_name>\Phile\Core\Registry::getInstance()</full_name>
        <docblock line="29">
          <description>Retrieves the default registry instance.</description>
          <long-description></long-description>
          <tag name="return" line="29" description="" type="\Phile\Core\Registry">
            <type>\Phile\Core\Registry</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="48" package="Phile\Core">
        <name>setInstance</name>
        <full_name>\Phile\Core\Registry::setInstance()</full_name>
        <docblock line="48">
          <description>Set the default registry instance to a specified instance.</description>
          <long-description></long-description>
          <tag name="param" line="48" description="&lt;p&gt;An object instance of type Registry,&#10;                          or a subclass.&lt;/p&gt;" type="\Phile\Core\Registry" variable="$registry">
            <type>\Phile\Core\Registry</type>
          </tag>
          <tag name="param" line="48" description="" type="\Phile\Core\Registry" variable="$registry">
            <type>\Phile\Core\Registry</type>
          </tag>
          <tag name="throws" line="48" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$registry</name>
          <default></default>
          <type>\Phile\Core\Registry</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Phile\Core" line="61" package="Phile\Core">
        <name>init</name>
        <full_name>\Phile\Core\Registry::init()</full_name>
        <docblock line="61">
          <description>Initialize the default registry instance.</description>
          <long-description></long-description>
          <tag name="return" line="61" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="78" package="Phile\Core">
        <name>get</name>
        <full_name>\Phile\Core\Registry::get()</full_name>
        <docblock line="78">
          <description>getter method, basically same as offsetGet().</description>
          <long-description>This method can be called from an object of type Registry, or it
can be called statically.  In the latter case, it uses the default
static instance stored in the class.</long-description>
          <tag name="param" line="78" description="&lt;ul&gt;&#10;&lt;li&gt;get the value associated with $index&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="return" line="78" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="78" description="if no entry is registerd for $index." type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="101" package="Phile\Core">
        <name>set</name>
        <full_name>\Phile\Core\Registry::set()</full_name>
        <docblock line="101">
          <description>setter method, basically same as offsetSet().</description>
          <long-description>This method can be called from an object of type Registry, or it
can be called statically.  In the latter case, it uses the default
static instance stored in the class.</long-description>
          <tag name="param" line="101" description="&lt;p&gt;The location in the ArrayObject in which to store&#10;                     the value.&lt;/p&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;The object to store in the ArrayObject.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="101" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="115" package="Phile\Core">
        <name>isRegistered</name>
        <full_name>\Phile\Core\Registry::isRegistered()</full_name>
        <docblock line="115">
          <description>Returns TRUE if the $index is a named value in the registry,
or FALSE if $index was not found in the registry.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="130" package="Phile\Core">
        <name>__construct</name>
        <full_name>\Phile\Core\Registry::__construct()</full_name>
        <docblock line="130">
          <description>the constructor</description>
          <long-description></long-description>
          <tag name="param" line="130" description="&lt;p&gt;data array&lt;/p&gt;" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;ArrayObject flags&lt;/p&gt;" type="integer" variable="$flags">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$flags</name>
          <default>parent::ARRAY_AS_PROPS</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="144" package="Phile\Core">
        <name>offsetExists</name>
        <full_name>\Phile\Core\Registry::offsetExists()</full_name>
        <docblock line="144">
          <description>method to check if offset exists</description>
          <long-description></long-description>
          <tag name="param" line="144" description="" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="returns" line="144" description="mixed&#10;&#10;Workaround for http://bugs.php.net/bug.php?id=40442 (ZF-960)."/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJzlV9tu20YQfddXTAIDlgxZShMnre2qiVDYgYE2MSQXRYsAwoociltTu8TuUpZa+G/6J/2xzl5ISZToKn4tX0Qt53L2zJlZ8vv3eZq3+icnLTiBEc64NmoFUca0ppV+S7A56pxFCLcpz/DLj1LhZat0MCnWnCCRCvg8z3COwnAxAwYqWJCHdfrACpOSFVwrJu7h0z9/zzJU7knGaYGu1JhcX/T7uc0ZzXUvkvNgEKHQ6AzouczpnyxUhD2pZv3wVPd/vrlz5gT8ns02sbtNeaQVcFwaFLGGL0Ol2Orz9A+MTOuvlgXi9mmvDXKkM4BcyQWPUYM2Utkkduc6ZQrjYKJ7wbcM8WHBVBUnLPbdb674ghmkWMzwCI5KymAAosgyYnwHjVEcF5Te1iDGhBWZqZgGLiiSIFrqCBSaQokGEMWUGCwxJIWIDJcCZmhuQrh2xxl6buzFE2hrzJKLiw3IAw+6s2FnL2/HBTftzmX15LFV3QZstXje9HGHgTGap/cORpL4dI4RTzgVpZGTnCk2X9d3vZOhKItdxZQJmFW+Vn23jNJ8kSwIRjF1qjs4ed3OpEo+kEavlhHmti6HlE5vlG43xSHFfNFQTAcHBD5sIGofVzm4BpYpZLEtBzecZfxPjI+78M2b8+/evnn39tvXWxrY1sim/P9TBzdV/Oe1wkLyuNaL0lDNSTF1Or12a6x5yJtMW1ZKJtqdThNw6iuDCuZI0zDuwpRpHrEsW4GmmQtMk9YSCvsRKWcd/F1KDHtPiJiAKYL1JcyJknNglXB39GrlyE0ZZ9vX79di6AHx6vjMmEMZMY1dcoRCb8+cMlLgqmoUOxVd0znjp7RPsOw5ccRFjEs4tbw4nwXLCsuDlhFnthwP3KTBrKGWc77EuLllrMKFBDqYvES9RlDFbnb7yL1D+oogtr15XQ1HFQGDoIyt8Xm51WwvKuvTH3yxr5YESJexD2q6l5/27Aj9lu5xBcc+2PHLdfOdnz05gHdQfVxvt0nM+jAxj/9fYr6zOWXEwvRw3hsvGXbpIeVRao8ql+PJ06Rqil4tqZM9ac93jE0aCCvD7sl9+DhsPFqCJroh8bNbYUdv493YTbobOdQa7ka/XNmesrsM5NszCOz7axxGSSBB1Y9uEtH18Kex8w++D6RYIQ01USHiuuMhpW9gdyplhuygs5vrUdXMDcPma96+AoCEZRq/4u1r/2BqqobrDknVVEVEutvPE7MitGX3NzEzzK/V7LgwOKNuPUoyNtNbfeNW9pFYsTeZVDjaIdHAZ2l3umXIAVAmmp0XF8PRaPjbZDie3I4+347rPJdWu0HLUI2MhLFGjRilGN3bknlC6avDMvpsKemtw658+KtU90w50dr5Hz6TpsVM9+g7ryfQ2D/2/j2PB2evzs5eQ/v369Pzd686e0++itB9MqjRFBTkiJnQ0TPBTWuiytCgr5h6bP0LExtKMw==</source>
  </file>
  <file path="lib/Phile/Core/RequestHandler.php" generated-path="lib.Phile.Core.RequestHandler.html" hash="82a14a81767c73d036ed221a7fad66da" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="author" line="0" description="PhileCMS"/>
      <tag name="link" line="0" description="https://philecms.com" link="https://philecms.com"/>
      <tag name="license" line="0" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="MiddlewareInterface">\Interop\Http\Server\MiddlewareInterface</namespace-alias>
    <namespace-alias name="RequestHandlerInterface">\Interop\Http\Server\RequestHandlerInterface</namespace-alias>
    <namespace-alias name="ResponseFactoryInterface">\Interop\Http\Factory\ResponseFactoryInterface</namespace-alias>
    <namespace-alias name="ResponseInterface">\Psr\Http\Message\ResponseInterface</namespace-alias>
    <namespace-alias name="ServerRequestInterface">\Psr\Http\Message\ServerRequestInterface</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Core" line="19" package="Default">
      <extends/>
      <implements>\Interop\Http\Server\RequestHandlerInterface</implements>
      <name>RequestHandler</name>
      <full_name>\Phile\Core\RequestHandler</full_name>
      <docblock line="19">
        <description>Implements a PSR-15 compatible request handler</description>
        <long-description></long-description>
        <tag name="package" line="19" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Core" line="22" package="Default">
        <name>$middleware</name>
        <full_name>\Phile\Core\RequestHandler::middleware</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="&lt;p&gt;the middleware to process&lt;/p&gt;" type="\SplPriorityQueue" variable="">
            <type>\SplPriorityQueue</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Core" line="25" package="Default">
        <name>$responseFactory</name>
        <full_name>\Phile\Core\RequestHandler::responseFactory</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;PSR-17 HTTP response factory&lt;/p&gt;" type="\Interop\Http\Factory\ResponseFactoryInterface" variable="">
            <type>\Interop\Http\Factory\ResponseFactoryInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="32" package="Default">
        <name>__construct</name>
        <full_name>\Phile\Core\RequestHandler::__construct()</full_name>
        <docblock line="32">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="32" description="" type="\Interop\Http\Factory\ResponseFactoryInterface" variable="$responseFactory">
            <type>\Interop\Http\Factory\ResponseFactoryInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$responseFactory</name>
          <default></default>
          <type>\Interop\Http\Factory\ResponseFactoryInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="44" package="Default">
        <name>add</name>
        <full_name>\Phile\Core\RequestHandler::add()</full_name>
        <docblock line="44">
          <description>Adds middleware to the the middleware-queue</description>
          <long-description></long-description>
          <tag name="param" line="44" description="&lt;p&gt;Middleware to add&lt;/p&gt;" type="\Interop\Http\Server\MiddlewareInterface" variable="$middleware">
            <type>\Interop\Http\Server\MiddlewareInterface</type>
          </tag>
          <tag name="param" line="44" description="&lt;p&gt;Priority orders middleware in queue&lt;/p&gt;" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$middleware</name>
          <default></default>
          <type>\Interop\Http\Server\MiddlewareInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>10</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="55" package="Default">
        <name>handle</name>
        <full_name>\Phile\Core\RequestHandler::handle()</full_name>
        <docblock line="55">
          <description>Handle the request and return a response.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="" type="\Psr\Http\Message\ServerRequestInterface" variable="$request">
            <type>\Psr\Http\Message\ServerRequestInterface</type>
          </tag>
          <tag name="return" line="55" description="" type="\Psr\Http\Message\ResponseInterface">
            <type>\Psr\Http\Message\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\Psr\Http\Message\ServerRequestInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyNVFFP2zAQfs+vuEmVSFFL4WGaNFbGhDTBQ6WO8kZRZZwrsUhic3Zg1cR/5xInJU0TWF5a+77vu7vvbP/4aWITTA4PAziEc5G7WBPAPFYJXswW5WaiskfgL3bO2O+TiSmCMrVHUqcVQGJmsQRwXBte6ZwkHml6mFRRO5ld3TB8EgSZSNEaIdHnWV5owtMgyFniKnNI2iwvWWq5QHpGWs5UFCX4IgjL6JqJp73ga3zK0bpLkTGHPiL8FtJp2jDDGs0FVusWZW7Jw2dorXjALfwznK+nKqcBrr2+Sk2CKWbOgoD54np88hXYUCOcuk8QyBMh9o2UxslEWAu7HYJ61+npPfgXFOPjvHD+LAiWC5PMSWlSbvMnxxzBxQjp1mVwGgxpyY0UWQsuLx1KhxEM3nHcy45un5G+u29weXMz5748CNYe1ZGBdnXe05S/bN0FRx3lRbTaqiPnRpBI+ytpa1e8qoT8ns8qrPNMOqUzWK1knSj8b8VhKeUdL76Bi5Udn7VQMO1os0VpDGQKGb7szy0cetLrnkO/osi2JlrMeHfO46dCpNvBjjvXHH0jXmiLKGrxVeZgYKpioa4aNEVIO5WpDJpldE+C9cNPKho10k3h5LhnDo3uzxSbTy7sFum11t+u0sr6jvIO/3c5caXbA37UbWz3s1CchnJni6709l6bD33yj0X4SY62NWoNYYc9j7gJhzCdTuF42ED3mEn4orKoPpHeumaCLx2cZ5EoprTVq9a7b874TBIKh7Ux3RkHMifiN7G4Z/t5q2CT2oHK8O8OpCpLiiRZ8YtPq8L2lSASm/C2TjiCg+rpPLgbwW1t+cgnuNueqtfgDSFpab8=</source>
  </file>
  <file path="lib/Phile/Model/Page.php" generated-path="lib.Phile.Model.Page.html" hash="8b40cd060e8e620b782b7b9386d3b1d8" package="Default">
    <docblock line="0">
      <description>The page model</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Container">\Phile\Core\Container</namespace-alias>
    <namespace-alias name="Router">\Phile\Core\Router</namespace-alias>
    <namespace-alias name="ServiceLocator">\Phile\Core\ServiceLocator</namespace-alias>
    <namespace-alias name="Repository">\Phile\Repository\Page</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Model" line="20" package="Phile\Model">
      <extends/>
      <name>Page</name>
      <full_name>\Phile\Model\Page</full_name>
      <docblock line="20">
        <description>the Model class for a page</description>
        <long-description></long-description>
        <tag name="author" line="20" description="Frank NÃ¤gler"/>
        <tag name="link" line="20" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="20" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="20" description="Phile\Model"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Model" line="25" package="Phile\Model">
        <name>$meta</name>
        <full_name>\Phile\Model\Page::meta</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;the meta model&lt;/p&gt;" type="\Phile\Model\Meta" variable="">
            <type>\Phile\Model\Meta</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Model" line="30" package="Phile\Model">
        <name>$content</name>
        <full_name>\Phile\Model\Page::content</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="&lt;p&gt;the content&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Model" line="35" package="Phile\Model">
        <name>$filePath</name>
        <full_name>\Phile\Model\Page::filePath</full_name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;the path to the original file&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Model" line="40" package="Phile\Model">
        <name>$rawData</name>
        <full_name>\Phile\Model\Page::rawData</full_name>
        <default></default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="40" description="&lt;p&gt;the raw file&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Model" line="45" package="Phile\Model">
        <name>$parser</name>
        <full_name>\Phile\Model\Page::parser</full_name>
        <default></default>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="45" description="&lt;p&gt;the parser&lt;/p&gt;" type="\Phile\ServiceLocator\ParserInterface" variable="">
            <type>\Phile\ServiceLocator\ParserInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Model" line="50" package="Phile\Model">
        <name>$pageId</name>
        <full_name>\Phile\Model\Page::pageId</full_name>
        <default></default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="50" description="&lt;p&gt;the pageId of the page&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Model" line="55" package="Phile\Model">
        <name>$contentFolder</name>
        <full_name>\Phile\Model\Page::contentFolder</full_name>
        <default></default>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="55" description="&lt;p&gt;The content folder, as passed to the class constructor when initiating the object.&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Model" line="60" package="Phile\Model">
        <name>$contentExtension</name>
        <full_name>\Phile\Model\Page::contentExtension</full_name>
        <default></default>
        <docblock line="60">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="60" description="&lt;p&gt;content extension&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Model" line="63" package="Phile\Model">
        <name>$repository</name>
        <full_name>\Phile\Model\Page::repository</full_name>
        <default></default>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="63" description="" type="\Phile\Repository\Page" variable="">
            <type>\Phile\Repository\Page</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="71" package="Phile\Model">
        <name>__construct</name>
        <full_name>\Phile\Model\Page::__construct()</full_name>
        <docblock line="71">
          <description>the constructor</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="" variable="$filePath"/>
          <tag name="param" line="71" description="" type="string" variable="$folder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="116" package="Phile\Model">
        <name>getContent</name>
        <full_name>\Phile\Model\Page::getContent()</full_name>
        <docblock line="116">
          <description>method to get content of page, this method returned the parsed content</description>
          <long-description></long-description>
          <tag name="return" line="116" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="148" package="Phile\Model">
        <name>setContent</name>
        <full_name>\Phile\Model\Page::setContent()</full_name>
        <docblock line="148">
          <description>set content of page</description>
          <long-description></long-description>
          <tag name="param" line="148" description="" type="string" variable="$content">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$content</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="158" package="Phile\Model">
        <name>getRawContent</name>
        <full_name>\Phile\Model\Page::getRawContent()</full_name>
        <docblock line="158">
          <description>get raw (un-parsed) page content</description>
          <long-description></long-description>
          <tag name="return" line="158" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="168" package="Phile\Model">
        <name>getMeta</name>
        <full_name>\Phile\Model\Page::getMeta()</full_name>
        <docblock line="168">
          <description>get the meta model</description>
          <long-description></long-description>
          <tag name="return" line="168" description="" type="\Phile\Model\Meta">
            <type>\Phile\Model\Meta</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Model" line="176" package="Phile\Model">
        <name>parseRawData</name>
        <full_name>\Phile\Model\Page::parseRawData()</full_name>
        <docblock line="176">
          <description>parse the raw content</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="202" package="Phile\Model">
        <name>setRepository</name>
        <full_name>\Phile\Model\Page::setRepository()</full_name>
        <docblock line="202">
          <description>Sets repository this page was retrieved by/belongs to</description>
          <long-description></long-description>
          <tag name="param" line="202" description="" type="\Phile\Repository\Page" variable="$repository">
            <type>\Phile\Repository\Page</type>
          </tag>
          <tag name="return" line="202" description="" type="\Phile\Model\Page">
            <type>\Phile\Model\Page</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$repository</name>
          <default></default>
          <type>\Phile\Repository\Page</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="213" package="Phile\Model">
        <name>getRepository</name>
        <full_name>\Phile\Model\Page::getRepository()</full_name>
        <docblock line="213">
          <description>Gets repository this page belongs to</description>
          <long-description></long-description>
          <tag name="return" line="213" description="" type="\Phile\Repository\Page">
            <type>\Phile\Repository\Page</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="226" package="Phile\Model">
        <name>getTitle</name>
        <full_name>\Phile\Model\Page::getTitle()</full_name>
        <docblock line="226">
          <description>get the title of page from meta information</description>
          <long-description></long-description>
          <tag name="return" line="226" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Model" line="237" package="Phile\Model">
        <name>buildPageId</name>
        <full_name>\Phile\Model\Page::buildPageId()</full_name>
        <docblock line="237">
          <description>get Phile $pageId</description>
          <long-description></long-description>
          <tag name="param" line="237" description="" type="string" variable="$filePath">
            <type>string</type>
          </tag>
          <tag name="return" line="237" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filePath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="252" package="Phile\Model">
        <name>getUrl</name>
        <full_name>\Phile\Model\Page::getUrl()</full_name>
        <docblock line="252">
          <description>get the url of page</description>
          <long-description></long-description>
          <tag name="return" line="252" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="269" package="Phile\Model">
        <name>setFilePath</name>
        <full_name>\Phile\Model\Page::setFilePath()</full_name>
        <docblock line="269">
          <description>set the filepath of the page</description>
          <long-description></long-description>
          <tag name="param" line="269" description="" type="string" variable="$filePath">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filePath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="280" package="Phile\Model">
        <name>getFilePath</name>
        <full_name>\Phile\Model\Page::getFilePath()</full_name>
        <docblock line="280">
          <description>get the filepath of the page</description>
          <long-description></long-description>
          <tag name="return" line="280" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="290" package="Phile\Model">
        <name>getFolder</name>
        <full_name>\Phile\Model\Page::getFolder()</full_name>
        <docblock line="290">
          <description>get the folder name</description>
          <long-description></long-description>
          <tag name="return" line="290" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="295" package="Phile\Model">
        <name>getPageId</name>
        <full_name>\Phile\Model\Page::getPageId()</full_name>
        <docblock line="295">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="305" package="Phile\Model">
        <name>getPreviousPage</name>
        <full_name>\Phile\Model\Page::getPreviousPage()</full_name>
        <docblock line="305">
          <description>get the previous page if one exist</description>
          <long-description></long-description>
          <tag name="return" line="305" description="" type="null|\Phile\Model\Page">
            <type>null</type>
            <type>\Phile\Model\Page</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Model" line="315" package="Phile\Model">
        <name>getNextPage</name>
        <full_name>\Phile\Model\Page::getNextPage()</full_name>
        <docblock line="315">
          <description>get the next page if one exist</description>
          <long-description></long-description>
          <tag name="return" line="315" description="" type="null|\Phile\Model\Page">
            <type>null</type>
            <type>\Phile\Model\Page</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="295" code="PPC:ERR-50008">No summary for method getPageId()</error>
      <error line="63" code="PPC:ERR-50007">No summary for property $repository</error>
    </parse_markers>
    <source>eJzNWdty2zYQfddXIDOekPJIZtNHO3KaOHbHM03icdyHTuxqIAqS2FAkBwB9aeO/6Z/0x7q4kQAJkkrSS/QgkcDuYi8Huwvo+YtiU4yi/f0R2kdXG4IKvCZomy9JCiPRKMNbwgocE3SxSVJy/UbMHI1GJTMjJzkVXxnHSUboUXPmMi+5Z/g9obdJTH7KY8xzZ/qSFDlLYPDh+kLoghmqh2BlrSsHXaUyKE4xY2iVU4Sl9jArCH7AJd/AIDqjOPuI3v715zolVM6kCQzAZ8N5wQ6jqBALx1t2EOdbTRCTDDQSBDCfF/CWlzQmBzldR3qWRW/OryQ5+OejUNVykXSe0kxYMfpjJBaUuosPMN1iiq4tjus3hGNp1lY86BBI4kj+FjTnJOZkifYEBbjCJ5JxmmRrKSeGoJCMdwnR08NyCsw3iOfyOafJOslwilageJdkMXcBTMOiKb7rlQTzr3Gnrdp9LpYANZQReg7G0ZUArjJBjHWtomZ3ccSanC9RvqreuiUKyn6JV3WIAL3pktCJAHsBmAER2t8KQkAGTGUM5qG7DclQkiU8wdwoli9+g4UPBiJ9JhfpV8ooRO7hhyV5NiDz1NDVYpW8es/6wmpv6IY2GrnGXj1c6QqxwtsaYo1xbQUCAmmsq325gK2LVmUWc9AYzefVOmElcGJY0QxlZZqOJavavuKzxwgXfmcwX2W9w8M14ecgC2cxCcfTY3gNA4nOORCtknUAgzx/SSl+CMdHtTS+Sdj02AkQCDYqvDis1/sQaKr5MqHBTZeMKiBCTJsX4urhBbozbX/tibGOjRMf7W1w83pN6OmtwMqCQPIl8zTHy7nBj5CLiJyGB00OoVe0dnoS84KVLK0VnMVUaK2PjrJRtJWk6oziSHCyrawtstiJD29Uvoo3qp53CrZ0yKuSyXAro8ORpTkKPM4KJg7Jh8AYFqDZMXqqY1QDNBCaWnM3FbuFrGSFQsECEU8YZ2FDynhsYdpCgk64AB7JDKYZLdsijnwCZC69VFJspD/uhiW8grS9G5Qk6f+DpLYE47eqqi3h7VvFYNvJTQg6b5KnH5Nteu0QSe5iy0PcALRD4KC7mbhU5Qa0uj2AdI8eMm5RbUGgIfnYqjvQU21yWXeBt4IU1Hqh3EShUNNQwkuaiSJtWotlo9mqypIiRdvk3qCyoxjBoidKRNgsObskX6nFF2ZfZcHn7pl6rS8E/H+ecx0ftZKuGbcAq4d2zLimJRKF10an/g1doRbjDglxt/B6M+LXR9eH8G8uxh4/9Yb46d5u0a2e9U6uj01isJ1GWDt5+FtY7eg9N3H4kwOrk4Ohb/WlDroEBgcUFVlO7NuwzKYqwmMVqv5MptQeSmXQAHRlM+NHR98+Jb1H4qZa4vA8pJSgGVBHHaz9ukgnVemu/3BdLeu2Q/6YSePgtEHupBmhWy7tDFN3ZxCFbQ/hisAeEkcUt5IHsYT5h0DcaMjHINoPYAfEac7UFgj2o+DG3TjBhm/TFuPzJ9Npg3U6PW7xPmAP79TDOg3qfXfjzapBUA+LhI7jDQqNqXByVo/NxlY0wgDaLN4WmlhrcjOpHDoRsE5J1iCAJnk2m6HvmiKlXqxcgE7wDazhoKCjloAU2vJwUtkHS8Ghu0gB4xWz8o/QE5aZoO89Uhbgho/ucN1pPzaR1s4O8ohZ3bIopibw3xPOUH1kV+VHpoo7LCYAi1CMoLt4iBYkzcXZmOf+pGfdCliXAM3NbDWB3QmxFhX6pXbsNsuQmXsTYQhtLbp88mOnT7pdoOVeNu3uzqK1iU1jBKqftCzqOtTZJos0Ywv2HdHcpNj0UXea5glPiSl7aEXzrcrcSQb7dYt5fZ/kLyufxI3LkFeuxCIDebzK9rqLkIp19/5Cf9lomJs7P3qrmt26feopju2asCiTdHkh17FuW5po1ZeNMyF0DiFIcdzsIc/0rWEQTNCe51i+i4zqvkiLUSyDQl6fX56eXL27/GX+/vTi5eVLeAQB0YCEVJUt9S7pvWQFJetqpSAKXzyf/frpOhon2ZLc74lF/KoaDJjb136wljTt6tA+q9f5mabtyh6brrbnmtC9rKlZpscbzEznq/4/Cdr3NVROmFSuGa2W2TBa+xuRFDoYV04UoVcnh4jlW9i46RI9O7hHRVqukwyOu/gByT9mwEXMPTzCAyQ8dQ2dJr/bBwxHOZlt9F9AlR6tgCny6TGE5CynYrmwOkIpqKwwqN65f5kOqdgD8vqmfUXf0X03dnJntfFcj/rLS3WVNLP/B2kQVUjX705G8N6ydcN4F5s/C8+Vqf0p1jWuRz91lS3+SPw6taScLqUWmBGxRLhMqPytC0Ftz9h1pmcRHYN+y3dLL5DEbpO81F0B7PA8I0hexna4QdS+T62j9JBbLvQyctMMFkW78MsBwfZutQKEK49N0PTZIOQycs//ZbPewhL/mEm1RY+jvwGZv9MC</source>
  </file>
  <file path="lib/Phile/ServiceLocator/PersistenceInterface.php" generated-path="lib.Phile.ServiceLocator.PersistenceInterface.html" hash="a2b75014a335ff91e14e161bfa0af81a" package="Default">
    <docblock line="0">
      <description>The Persistence ServiceLocator interface</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Phile\ServiceLocator" line="14" package="Phile\ServiceLocator">
      <name>PersistenceInterface</name>
      <full_name>\Phile\ServiceLocator\PersistenceInterface</full_name>
      <docblock line="14">
        <description>Interface PersistenceInterface</description>
        <long-description></long-description>
        <tag name="link" line="14" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="14" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="14" description="Phile\ServiceLocator"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="23" package="Phile\ServiceLocator">
        <name>has</name>
        <full_name>\Phile\ServiceLocator\PersistenceInterface::has()</full_name>
        <docblock line="23">
          <description>check if an entry exists for given key</description>
          <long-description></long-description>
          <tag name="param" line="23" description="" type="" variable="$key"/>
          <tag name="return" line="23" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="32" package="Phile\ServiceLocator">
        <name>get</name>
        <full_name>\Phile\ServiceLocator\PersistenceInterface::get()</full_name>
        <docblock line="32">
          <description>get the entry by given key</description>
          <long-description></long-description>
          <tag name="param" line="32" description="" type="" variable="$key"/>
          <tag name="return" line="32" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="42" package="Phile\ServiceLocator">
        <name>set</name>
        <full_name>\Phile\ServiceLocator\PersistenceInterface::set()</full_name>
        <docblock line="42">
          <description>set the value for given key</description>
          <long-description></long-description>
          <tag name="param" line="42" description="" type="" variable="$key"/>
          <tag name="param" line="42" description="" type="" variable="$value"/>
          <tag name="return" line="42" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="51" package="Phile\ServiceLocator">
        <name>delete</name>
        <full_name>\Phile\ServiceLocator\PersistenceInterface::delete()</full_name>
        <docblock line="51">
          <description>delete the entry by given key</description>
          <long-description></long-description>
          <tag name="param" line="51" description="" type="" variable="$key"/>
          <tag name="return" line="51" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <source>eJy9kUFLxDAQhe/9FXPwoEU2dxX0urDCgnv0ks2+tqFtEpK0bBH/u9NuKqtUQUFzCcm8efPl5e7eVS4TeZ5RTrsKtIUPOkQYBXqC77XCxioZrSdtInwhFVgrMiNbBMcn2la6wfNH8W02m67nrnPr9ZnVKHpotKmJVxWjCzdCuNFTtWGlbJsECiZgEnDdOj7ZziusrC9FqgbxuN5NcgarZbnMNuHr77FespFmesK4clIVVE26IGkIJvqBcOSuQAUnU+oehmoMST03MYaXLV0sVDxi5w21+ohDuhTT7ro9v4aKzqioraFKhsvR4Ioj/cRUIlLkPzvx7Ic/5eBhX3GExNHLpsMPA3m/mpp/TRcS3XUyWqA8oEHE/wV2mjdn9pq9AbeS+04=</source>
  </file>
  <file path="lib/Phile/Core/Response.php" generated-path="lib.Phile.Core.Response.html" hash="c0bf8d2a70c15569db441faf0f79f56d" package="Default">
    <docblock line="0">
      <description>the Response class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ResponseFactoryInterface">\Interop\Http\Factory\ResponseFactoryInterface</namespace-alias>
    <namespace-alias name="HtmlResponse">\Zend\Diactoros\Response\HtmlResponse</namespace-alias>
    <namespace-alias name="RedirectResponse">\Zend\Diactoros\Response\RedirectResponse</namespace-alias>
    <namespace-alias name="Psr7Response">\Zend\Diactoros\Response</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Core" line="28" package="Phile">
      <extends/>
      <implements>\Interop\Http\Factory\ResponseFactoryInterface</implements>
      <name>Response</name>
      <full_name>\Phile\Core\Response</full_name>
      <docblock line="28">
        <description>the Response class is responsible for sending a HTTP response to the client</description>
        <long-description>Response is chainable and can be used anywhere:

    (new Respose)-&gt;setBody('Hello World')-&gt;send();

After send() Phile is terminated.</long-description>
        <tag name="author" line="28" description="PhileCMS"/>
        <tag name="link" line="28" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="28" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="28" description="Phile"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Core" line="33" package="Phile">
        <name>$body</name>
        <full_name>\Phile\Core\Response::body</full_name>
        <default>''</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="&lt;p&gt;HTTP body&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Core" line="38" package="Phile">
        <name>$charset</name>
        <full_name>\Phile\Core\Response::charset</full_name>
        <default>'utf-8'</default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="&lt;p&gt;charset&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Core" line="43" package="Phile">
        <name>$headers</name>
        <full_name>\Phile\Core\Response::headers</full_name>
        <default>array()</default>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="43" description="&lt;p&gt;HTTP-headers&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Core" line="48" package="Phile">
        <name>$statusCode</name>
        <full_name>\Phile\Core\Response::statusCode</full_name>
        <default>200</default>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="48" description="&lt;p&gt;HTTP status code&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="53" package="Phile">
        <name>createResponse</name>
        <full_name>\Phile\Core\Response::createResponse()</full_name>
        <docblock line="53">
          <description>Creates a PSR-7 response</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>200</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="61" package="Phile">
        <name>createHtmlResponse</name>
        <full_name>\Phile\Core\Response::createHtmlResponse()</full_name>
        <docblock line="61">
          <description>Creates PSR-7 HTML response</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>200</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="69" package="Phile">
        <name>createRedirectResponse</name>
        <full_name>\Phile\Core\Response::createRedirectResponse()</full_name>
        <docblock line="69">
          <description>Creates PSR-7 redirect response</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>302</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="80" package="Phile">
        <name>redirect</name>
        <full_name>\Phile\Core\Response::redirect()</full_name>
        <docblock line="80">
          <description>redirect to another URL</description>
          <long-description></long-description>
          <tag name="param" line="80" description="&lt;p&gt;URL&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="80" description="" type="integer" variable="$statusCode">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statusCode</name>
          <default>302</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="95" package="Phile">
        <name>setBody</name>
        <full_name>\Phile\Core\Response::setBody()</full_name>
        <docblock line="95">
          <description>set the response body</description>
          <long-description></long-description>
          <tag name="param" line="95" description="" type="" variable="$body"/>
          <tag name="return" line="95" description="" type="\Phile\Core\Response">
            <type>\Phile\Core\Response</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="107" package="Phile">
        <name>setCharset</name>
        <full_name>\Phile\Core\Response::setCharset()</full_name>
        <docblock line="107">
          <description>set the response character-set</description>
          <long-description></long-description>
          <tag name="param" line="107" description="" type="" variable="$charset"/>
          <tag name="return" line="107" description="" type="\Phile\Core\Response">
            <type>\Phile\Core\Response</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$charset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="121" package="Phile">
        <name>setHeader</name>
        <full_name>\Phile\Core\Response::setHeader()</full_name>
        <docblock line="121">
          <description>set a response HTTP-header</description>
          <long-description></long-description>
          <tag name="param" line="121" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="121" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="121" description="&lt;p&gt;clear out any existing headers&lt;/p&gt;" type="boolean" variable="$clear">
            <type>boolean</type>
          </tag>
          <tag name="return" line="121" description="" type="\Phile\Core\Response">
            <type>\Phile\Core\Response</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$clear</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="136" package="Phile">
        <name>setStatusCode</name>
        <full_name>\Phile\Core\Response::setStatusCode()</full_name>
        <docblock line="136">
          <description>set the response HTTP status code</description>
          <long-description></long-description>
          <tag name="param" line="136" description="" type="" variable="$code"/>
          <tag name="return" line="136" description="" type="\Phile\Core\Response">
            <type>\Phile\Core\Response</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="147" package="Phile">
        <name>send</name>
        <full_name>\Phile\Core\Response::send()</full_name>
        <docblock line="147">
          <description>sends the HTTP response</description>
          <long-description></long-description>
          <tag name="return" line="147" description="" type="\Phile\Core\Response">
            <type>\Phile\Core\Response</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="161" package="Phile">
        <name>stop</name>
        <full_name>\Phile\Core\Response::stop()</full_name>
        <docblock line="161">
          <description>helper for easy testing</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Core" line="169" package="Phile">
        <name>outputHeader</name>
        <full_name>\Phile\Core\Response::outputHeader()</full_name>
        <docblock line="169">
          <description>output all set response headers</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="53" code="PPC:ERR-50015">Argument $code is missing from the Docblock of createResponse</error>
      <error line="61" code="PPC:ERR-50015">Argument $body is missing from the Docblock of createHtmlResponse</error>
      <error line="61" code="PPC:ERR-50015">Argument $code is missing from the Docblock of createHtmlResponse</error>
      <error line="69" code="PPC:ERR-50015">Argument $url is missing from the Docblock of createRedirectResponse</error>
      <error line="69" code="PPC:ERR-50015">Argument $code is missing from the Docblock of createRedirectResponse</error>
    </parse_markers>
    <source>eJylV1tv2zYUftev4AoDkoM4DrqHDvGym4fBBRIgSFwUWB0UNHUcCZFIgaTaGkP++w4pUjdXWoTxIYl4Ph6ey8ePzM+/FkkRBMuzs4CcEZ0AuQdVCK6AsIwqhbPLIOA0x1nKgNwlaQa7tZCwCoISUe+5BimK3UbrYvcXZVrI4877cN8Wc8DlK7vkb+Dx7s/U2oSqwegiz/zHOPIe4lQC069CE6rInZLvGvBwuiRVRFYz6T4DchCSKHSb8idCyWa7vfNmIFpYByxLgWt0ZzzW3tAPS2jKqfFCeUwY5WQPBOOM8fv4NQEJV26VGRGHr9VyBfPFLwr0HyI+RuEGskyQj0JmcWjneRzNV27h7wcsLKnmqtaYjXEux501xBcO9xstdYKpVJj17YOdzFL+bLZOsHXqarksjJHl6oKJ3AEYmGQMAO2iwC9RSgYXQj4tnVUtb99vLRwJ8kyfHEcscaqaNkXJiwxyrFYz12dI8E9gQrINMgPdfqGYopamBbYBe6yLMy7t70IKjWTAws6MjVyTMMQmj/jB1kis8JAXZzaOSn1Y/DTkjUpJjzaoRQI0BqmGPDozevz0OOAs5brKT2mqS6SPiGHIXQVZIwI9vr28PHW5loAEUEjau4f7xbuatV2P5R6bSA4lZzoVnDC7yLcmmrF6g7nFV70xQ4IuJSeGs+2jFYWoJsiUHHJsanhOrAtDVxwvg0FWIW62tzdT4mzLRWQ77/b7z5AHV74yUunkZ1pVu5IVzUqZNQH/ePl2JOCxxYMx11GiUFEuUKsk+XB/48w19woqae4PhvHr92+wHmQoiqNFv9HEfQA+2g5rv5PwTCepstL3UCOj1qp5jTTDAjf2XEXhjWDU7GkoZzfTsvwevtLU8NRiFLQ/qUURDVbX6IOR//o6aMlSr2yVLNWTrq8229H6+Xjt8oFiOcGzkFWfOhbz6gSM6qEag1w00niSSVc5pyWzrtZG3slASo36euD0xGiTVkueB5Ly3H+G45DpC81K6Bv3QpjDMmMZoH5XP0WpzfVO4FuqtFnavRimFcyx2wR27mI499tdkwPNFPRrmB5IVCHmrdlWdbs3kTe+9JvgYJ/M3o8IfmP+uHJBvPmfTBu45k7J1timFa6tH6xWjlOlaQuSBU5NjMfKptZ5GfbTmRB5LUPdjv6QKntwur0J1wKfTVwvtscCwsf5QMdbMtlZcE5CDd/0MsHbcOWfRNchuegdxPkITZDuRendt4DmxfjZ1+Mzs43o17wFB5aItqJNa0MCWYF3m3mrA1VHfP/aozdeaivuvVLHKQwLfpUqoVlmCV2TefzlV2/YrVRvYwwdKEtIr8PmPxf3dOz3NnHS4Kz9Fr0EL8G/n1byMA==</source>
  </file>
  <file path="plugins/phile/parserMeta/Classes/Parser/Meta.php" generated-path="plugins.phile.parserMeta.Classes.Parser.Meta.html" hash="c9b93eb7727de970433e275c9cdc80fc" package="Default">
    <docblock line="0">
      <description>The Meta Parser Interface</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="MetaInterface">\Phile\ServiceLocator\MetaInterface</namespace-alias>
    <namespace-alias name="Yaml">\Symfony\Component\Yaml\Yaml</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\ParserMeta\Parser" line="18" package="Phile\Plugin\Phile\ParserMeta\Parser">
      <extends/>
      <implements>\Phile\ServiceLocator\MetaInterface</implements>
      <name>Meta</name>
      <full_name>\Phile\Plugin\Phile\ParserMeta\Parser\Meta</full_name>
      <docblock line="18">
        <description>Class Meta</description>
        <long-description></long-description>
        <tag name="author" line="18" description="PhileCMS"/>
        <tag name="link" line="18" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="18" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="18" description="Phile\Plugin\Phile\ParserMeta\Parser"/>
      </docblock>
      <property static="false" visibility="private" namespace="Phile\Plugin\Phile\ParserMeta\Parser" line="23" package="Phile\Plugin\Phile\ParserMeta\Parser">
        <name>$config</name>
        <full_name>\Phile\Plugin\Phile\ParserMeta\Parser\Meta::config</full_name>
        <default></default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="23" description="&lt;p&gt;the configuration for this parser&lt;/p&gt;" type="array" variable="$config">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMeta\Parser" line="30" package="Phile\Plugin\Phile\ParserMeta\Parser">
        <name>__construct</name>
        <full_name>\Phile\Plugin\Phile\ParserMeta\Parser\Meta::__construct()</full_name>
        <docblock line="30">
          <description>the constructor</description>
          <long-description></long-description>
          <tag name="param" line="30" description="" type="array" variable="$config">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ParserMeta\Parser" line="43" package="Phile\Plugin\Phile\ParserMeta\Parser">
        <name>parse</name>
        <full_name>\Phile\Plugin\Phile\ParserMeta\Parser\Meta::parse()</full_name>
        <docblock line="43">
          <description>parse the content and extract meta information</description>
          <long-description></long-description>
          <tag name="param" line="43" description="&lt;p&gt;raw page data&lt;/p&gt;" type="string" variable="$rawData">
            <type>string</type>
          </tag>
          <tag name="return" line="43" description="with key/value store" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\MetaInterface::parse()" refers="\Phile\ServiceLocator\MetaInterface::parse()" link="/classes/Phile.ServiceLocator.MetaInterface.html#method_parse"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rawData</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ParserMeta\Parser" line="85" package="Phile\Plugin\Phile\ParserMeta\Parser">
        <name>convertKeys</name>
        <full_name>\Phile\Plugin\Phile\ParserMeta\Parser\Meta::convertKeys()</full_name>
        <docblock line="85">
          <description>convert meta data keys</description>
          <long-description>Creates "compatible" keys allowing easy access e.g. as template var.

Conversions applied:

- lowercase all chars
- replace special chars and whitespace with underscore</long-description>
          <tag name="param" line="85" description="&lt;p&gt;meta-data&lt;/p&gt;" type="array" variable="$meta">
            <type>array</type>
          </tag>
          <tag name="return" line="85" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$meta</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\ParserMeta\Parser" line="107" package="Phile\Plugin\Phile\ParserMeta\Parser">
        <name>parsePhileFormat</name>
        <full_name>\Phile\Plugin\Phile\ParserMeta\Parser\Meta::parsePhileFormat()</full_name>
        <docblock line="107">
          <description>Phile meta format parser.</description>
          <long-description></long-description>
          <tag name="param" line="107" description="&lt;p&gt;unparsed meta-data&lt;/p&gt;" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="107" description="array with meta-tags; null: on meta-data found" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="deprecated" line="107" description="since 1.6.0 Phile is going to switch to YAML"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJyNVktv2zgQvvtXTAMDktLETnrYg123u8higaINECC9FLbXYOixLUQiBZKKa3Tz33c4omVJttvqoAc5z2++Ger9x2JT9IaXlz24hK8bhHt0Ah6EsWjgk3JoVkIibQ57SuRoC/qCh02a4ewhK9epmoUP1vDK4XXc65V2L/qI5iWV+EVL4bSZebHa9pjlHnf5Sqvd7E7nhVao3OybyDO+kaUQ310mrOUI6csv/ClKt9EGKjd394+8mKXqGejaOFfY0XBY+E2Z24HUeRCQqMipF6B9XdCXLo3EgTbrYdi1w/tPX1mccn4W699Lm5GSdZyQ5kWGOeVTfR8Q/dHzIXJi/iI3L8KAMEbsoC+1WqVrcFSP6rU0wqVawYqSdZvUQhG8se6Qn4VJX4TDvTbB1vEQzFlnSkllCMu1fzIp8nYEbfvlE0EDq1JJjmWxqI3F7bgnoMosS1irytNf6QriN6ld+L04iCZJQ8BffZ/d9YfaUJ3MXuC1V927yTEg+xQdAQ5CLQG/OyOkg5xroQi+nIE8nTtQNqlaQ9+I7d+CNOhJhqn0S+E5F4QNutKogNQ2dRt4xt3wRWQlkgVt8KewcaDx3kUXpNr1BCiW/CB3QKC/QiXRenCaYE2jaj2ah8qzrHXCOC9KgRWhMAdThAcKuYF4b1PYYP6oLrUh3p5Gvmm8q5ZQhmpNcEw8kPQeV1pJW8rzwJZPJFJndwU3V3vtBCaTSfDXjSJEwpnsA5GZttiNxF9PlNtze/m1QaMWL4PRSWBux20o+HQ+PqXfZ3KFeh0l1kaCvwttGwLsuiuXwDWBVC/pIoG3cJskDSgZRmeczvQWyWOHC8z0aF6hGe1ojkZHNQ2B+yE7GgVe+rWGl1fAjPrqtGLwyZo8D/9hr8dGjrCKw0sN+EdCF0YNRr+gcZ9xZ4+MhWLw8vjMMAj6Vdv73vUdajtNf0f8cMT5CzoWCpoKTxlesByIjDD1gwCF3YGQ1BkWcLAe+P5wSCPdz1ma14OuSfZrqc3JSFFkKS5HHZFr4HpJQaiSH5AbQu+waZCM0xFrC5SpCNs8yrab1IXzl2dOqZbkSh7GTXeYhZnMGPjb9dkh1jlGtEPpcHkYWc1yNKwez67K5qTVKYcZw5H4CUMgw+QD9HlkdlnpeU2nBPuJg8jJOVAN3MlJzlRq55qf1RVuP/s4oNlEFFlH6yBXGFwvQn3iaDj9d7Z9Ox9GVxAt6BbkutoVJNOwO/fhcmynmmPP7Op5jtvcaBWzqyYP/wJdLnbPtPAsFYsvf0GJ/3xbNo84FndibcfcsSMgXtQmKBKiYzeAJRJk9MdHzmxKsxpuB38MbkIC9A+z1j4gp8GSB2IIvX376/7Lr9h4PG6q1E79b1Cvul0tcGaut8/E42HVZHOffi757MXvRaaXGF/M1MXVHt3kFO0rDc97/3Y0hCkd1zQYjTybvOgVvDtxdEqCmnJmtQTe0AR9d6o9/F9QqppEayfX8s11XuSiiCN/ivkAKvsdNntAptXW9GbObK4+buc/I3RzVL/2/ge2IIU9</source>
  </file>
  <file path="lib/Phile/Gateway/EventObserverInterface.php" generated-path="lib.Phile.Gateway.EventObserverInterface.html" hash="f074e4127c8b992a61ce17d01477a4f4" package="Default">
    <docblock line="0">
      <description>The EventObserverInterface</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Phile\Gateway" line="15" package="Phile\Gateway">
      <name>EventObserverInterface</name>
      <full_name>\Phile\Gateway\EventObserverInterface</full_name>
      <docblock line="15">
        <description>Interface EventObserverInterface</description>
        <long-description></long-description>
        <tag name="author" line="15" description="Frank NÃ¤gler"/>
        <tag name="link" line="15" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="15" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="15" description="Phile\Gateway"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Gateway" line="25" package="Phile\Gateway">
        <name>on</name>
        <full_name>\Phile\Gateway\EventObserverInterface::on()</full_name>
        <docblock line="25">
          <description>event method</description>
          <long-description></long-description>
          <tag name="param" line="25" description="" type="string" variable="$eventKey">
            <type>string</type>
          </tag>
          <tag name="param" line="25" description="" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
          <tag name="return" line="25" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
    </interface>
    <source>eJyFjz1OAzEQhXufYooUsEJxT0DQAIoQP0VKGsc7WVtZj62xHYgQt+EmXAyvs0mxEmIaa+Z9fvPm6iaYIGTTCGhgZRDudkjpZR2Rd8hLSsgbpbGoUpByGEPp4NXYHt8eVMJ3tV+I4/8T/rfLgN2qnIxngHtWtIXnn++uR65Kb8uglEkpxEspw7BIuzjX3o2ARopYgaL7UDqfWePccydHNcqn5ariJe1WdZPA9Rj7X9ZPMQSplw3VAA4cOCzZ23F2lMoeVg5iYksdzCr5iPuJ7OwHtgCzViU1NWBMmemAjENZ35DX5SrYZNLJegJPZyf/i4MXXAPlvj9fiC/xC56/j6U=</source>
  </file>
  <file path="plugins/phile/errorHandler/Classes/ErrorLog.php" generated-path="plugins.phile.errorHandler.Classes.ErrorLog.html" hash="30e3b1403cb520637f4e99078ee18999" package="Default">
    <docblock line="0">
      <description>The Error Handler</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ErrorHandlerInterface">\Phile\ServiceLocator\ErrorHandlerInterface</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\ErrorHandler" line="13" package="Default">
      <extends/>
      <implements>\Phile\ServiceLocator\ErrorHandlerInterface</implements>
      <name>ErrorLog</name>
      <full_name>\Phile\Plugin\Phile\ErrorHandler\ErrorLog</full_name>
      <docblock line="13">
        <description>Class ErrorLog</description>
        <long-description></long-description>
        <tag name="package" line="13" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ErrorHandler" line="26" package="Default">
        <name>handleError</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\ErrorLog::handleError()</full_name>
        <docblock line="26">
          <description>handle the error</description>
          <long-description></long-description>
          <tag name="param" line="26" description="" type="integer" variable="$errno">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="" type="string" variable="$errstr">
            <type>string</type>
          </tag>
          <tag name="param" line="26" description="" type="string" variable="$errfile">
            <type>string</type>
          </tag>
          <tag name="param" line="26" description="" type="integer" variable="$errline">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="" type="array" variable="$errcontext">
            <type>array</type>
          </tag>
          <tag name="return" line="26" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\ErrorHandlerInterface::handleError()" refers="\Phile\ServiceLocator\ErrorHandlerInterface::handleError()" link="/classes/Phile.ServiceLocator.ErrorHandlerInterface.html#method_handleError"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$errno</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errstr</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errfile</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errline</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errcontext</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\ErrorHandler" line="38" package="Default">
        <name>handleException</name>
        <full_name>\Phile\Plugin\Phile\ErrorHandler\ErrorLog::handleException()</full_name>
        <docblock line="38">
          <description>handle all exceptions</description>
          <long-description></long-description>
          <tag name="param" line="38" description="" type="\Exception" variable="$exception">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="38" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\Phile\ServiceLocator\ErrorHandlerInterface::handleException()" refers="\Phile\ServiceLocator\ErrorHandlerInterface::handleException()" link="/classes/Phile.ServiceLocator.ErrorHandlerInterface.html#method_handleException"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <source>eJyNU8tqwzAQvOsrRMnBMS75gPQFIaWFFALtrSlFUTa2QJaMLJeU4H/v6uEQOzFUl0iz49mZXXL3WBUVmaUpoSn9KIAujdGGvjC1k2AQnBGiWAl1xTjQdSEkbNayyYXahIfnR/qckKbuWO9gfgSHlebMatPjvSoLZo+C+EFsvZCsrkPzlc59X96DqCgrCSUoG7GhFjkSisfruZPSwjOoxVTgvoh4V36qmGElFcq69wQpSg9qtTVC5b6G1/HiHgOPy0qhhlVmDPsNVa4xwcEOzRmwjVF0q7UEpiI8879Vs5WC032juBVaxZx+KEmIkXWWs5O97GQli93Pmk+9bhigO35c31Lnyc3nMUi2X/QYRVsMFx5OuKVowekGyN3am+nca7VkZCdMSgoHDpULUF9fzGbZEdBqdx0ZUykOsPvPkDqd5Kr6cA4TrndA788Ytw852AWiSYzoafj/qFl+hfkWCj2yG9ol8xnRHs2P9IK2QvSc1t+Us+sXFQ3FTQ3XNNhRS/4AjYM41A==</source>
  </file>
  <file path="plugins/phile/setupCheck/Classes/Plugin.php" generated-path="plugins.phile.setupCheck.Classes.Plugin.html" hash="3080a12c16507e1bd5284e4892c3257f" package="Default">
    <docblock line="0">
      <description>Plugin class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Utility">\Phile\Core\Utility</namespace-alias>
    <namespace-alias name="Page">\Phile\Model\Page</namespace-alias>
    <namespace-alias name="Phile">\Phile\Phile</namespace-alias>
    <namespace-alias name="AbstractPlugin">\Phile\Plugin\AbstractPlugin</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Plugin\Phile\SetupCheck" line="20" package="Phile\Plugin\Phile\PhileSetup">
      <extends>\Phile\Plugin\AbstractPlugin</extends>
      <name>Plugin</name>
      <full_name>\Phile\Plugin\Phile\SetupCheck\Plugin</full_name>
      <docblock line="20">
        <description>Phile Setup Plugin Class</description>
        <long-description></long-description>
        <tag name="author" line="20" description="PhileCMS"/>
        <tag name="link" line="20" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="20" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="20" description="Phile\Plugin\Phile\PhileSetup"/>
        <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin" refers="\Phile\Plugin\AbstractPlugin" link="/classes/Phile.Plugin.AbstractPlugin.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\SetupCheck" line="22" package="Phile\Plugin\Phile\PhileSetup">
        <name>$needsSetup</name>
        <full_name>\Phile\Plugin\Phile\SetupCheck\Plugin::needsSetup</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\SetupCheck" line="27" package="Phile\Plugin\Phile\PhileSetup">
        <name>$events</name>
        <full_name>\Phile\Plugin\Phile\SetupCheck\Plugin::events</full_name>
        <default>array('config_loaded' =&gt; 'onConfigLoaded', 'after_render_template' =&gt; 'onAfterRenderTemplate')</default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="27" description="&lt;p&gt;event subscription&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Plugin\AbstractPlugin::events" refers="\Phile\Plugin\AbstractPlugin::events" link="/classes/Phile.Plugin.AbstractPlugin.html#property_events"/>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Phile\Plugin\Phile\SetupCheck" line="25" package="Phile\Plugin">
        <name>$plugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::plugin</full_name>
        <default>array()</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;plugin attributes&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\SetupCheck" line="30" package="Phile\Plugin">
        <name>$events</name>
        <full_name>\Phile\Plugin\AbstractPlugin::events</full_name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="&lt;p&gt;subscribed Phile events ['eventName' =&gt; 'classMethodToCall']&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Phile\Plugin\Phile\SetupCheck" line="35" package="Phile\Plugin">
        <name>$settings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::settings</full_name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="&lt;p&gt;the plugin settings&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\SetupCheck" line="32" package="Phile\Plugin\Phile\PhileSetup">
        <name>onConfigLoaded</name>
        <full_name>\Phile\Plugin\Phile\SetupCheck\Plugin::onConfigLoaded()</full_name>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventData</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\SetupCheck" line="42" package="Phile\Plugin\Phile\PhileSetup">
        <name>onAfterRenderTemplate</name>
        <full_name>\Phile\Plugin\Phile\SetupCheck\Plugin::onAfterRenderTemplate()</full_name>
        <docblock line="42">
          <description>render setup message</description>
          <long-description></long-description>
          <tag name="param" line="42" description="" type="array" variable="$eventData">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventData</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\SetupCheck" line="64" package="Phile\Plugin\Phile\PhileSetup">
        <name>insertVars</name>
        <full_name>\Phile\Plugin\Phile\SetupCheck\Plugin::insertVars()</full_name>
        <docblock line="64">
          <description>replace twig like variables in page content</description>
          <long-description></long-description>
          <tag name="param" line="64" description="" type="\Phile\Model\Page" variable="$page">
            <type>\Phile\Model\Page</type>
          </tag>
          <tag name="param" line="64" description="" type="array" variable="$vars">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$page</name>
          <default></default>
          <type>\Phile\Model\Page</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$vars</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\SetupCheck" line="79" package="Phile\Plugin\Phile\PhileSetup">
        <name>generateToken</name>
        <full_name>\Phile\Plugin\Phile\SetupCheck\Plugin::generateToken()</full_name>
        <docblock line="79">
          <description>generate encryption key</description>
          <long-description></long-description>
          <tag name="return" line="79" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SetupCheck" line="46" package="Phile\Plugin">
        <name>initializePlugin</name>
        <full_name>\Phile\Plugin\AbstractPlugin::initializePlugin()</full_name>
        <docblock line="46">
          <description>initialize plugin</description>
          <long-description>try to keep all initialization in one method to have a clean class
for the plugin-user</long-description>
          <tag name="param" line="46" description="" type="string" variable="$pluginKey">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="46" description="since 1.5.1 will be declared 'final'"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pluginKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SetupCheck" line="98" package="Phile\Plugin">
        <name>injectSettings</name>
        <full_name>\Phile\Plugin\AbstractPlugin::injectSettings()</full_name>
        <docblock line="98">
          <description>inject settings</description>
          <long-description>backwards compatibility to Phile 1.4</long-description>
          <tag name="param" line="98" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="98" description="since 1.5.1 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Plugin\Phile\SetupCheck" line="109" package="Phile\Plugin">
        <name>on</name>
        <full_name>\Phile\Plugin\AbstractPlugin::on()</full_name>
        <docblock line="109">
          <description>implements EventObserverInterface</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="string" variable="$eventKey">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="" type="null" variable="$data">
            <type>null</type>
          </tag>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Phile\Gateway\EventObserverInterface::on()" refers="\Phile\Gateway\EventObserverInterface::on()" link="/classes/Phile.Gateway.EventObserverInterface.html#method_on"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$eventKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Phile\Plugin\Phile\SetupCheck" line="131" package="Phile\Plugin">
        <name>getPluginPath</name>
        <full_name>\Phile\Plugin\AbstractPlugin::getPluginPath()</full_name>
        <docblock line="131">
          <description>get file path to plugin root (trailing slash) or to a sub-item</description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="string" variable="$subPath">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="null if item does not exist" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subPath</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Plugin\AbstractPlugin</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="32" code="PPC:ERR-50015">Argument $eventData is missing from the Docblock of onConfigLoaded</error>
      <error line="32" code="PPC:ERR-50008">No summary for method onConfigLoaded()</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $needsSetup</error>
    </parse_markers>
    <source>eJyFVU1v2kAQvftXTCUk24jgS9VD3JBGtIeqjYSatJcYoY0ZbAuztnbXSRDiv3f2w2AMbXww2vl88+at+Xxb57UXDYceDGFWNlnBIS2ZlHSOPM42KGuWIszyosTEBiT28ICqqac5puvY8xrZxkwrgclvVZSF2sYd+321xDKZsQy7VvM+MdgWd89SCZYqe6QGLUQdBKZ1C3fq4Gr3F9aovBJg46b3D8ZYFnwN9ORK1fI6imrtTDdynFYbF5AiJwg6gPxVTaeqESmOK5FFziuj+++PJpwYWdMcl0gxbwPPEGiobIHim0K+lHA6m7fzNLZaVApThUsYcMSlNDVobu0zs+uHer8wAUwItgV8Qa5ANs8yFUWtioq7oKhf0ERKuIEnG0GPn1Z8VWSLsmJLXPpwMwG/4lNj/Glto2MwWykUC0Ho6Ufhpi6ZwjbpTjt/Gd9j6zKpcwf/iGTV8FQDhdNWgUX4lSkWmozdofVA5YW8mhwpoSmoidp2cp58Q7M/v5pkqAIfeSq2hpAfuPXDMDbV9mdc2nlAmrIkdEk7db4D3TUTbOMIP3b8B9Gd8S6QEvSr9GctVhB8OBs47EToR5BR8Phgc3MZspCToJAo6pLT7uubcfrtVkxCrWV8AxxfQd/MwHUnGq04Z0zlgW8YGm+WBy5NLinRaKrD92JNhGtZHOpwFNT6sVojD8J53N9rQfdKqD9UKTBYRrZsGJ8NdTUhFNNG0NKUharju3g6I1eNqhvlzw0TLt1uO/iPGogl+tKp1yKDslgjEJKCPZcogS6vYYouDV1hdVkkGpWj9LJ89GTvKadDiKnnWOlUOLshDpSeVQeb7f1ir1NrDjoUrejTzNIcArs7JmFACzP7emFlg32pDQRm+EaF/SjZJbsgkcPb0IexTRuDby3JPtlHfnyaekRVU5WFYzewJUeu4egQF3YFfSJPu3g3TC/8fIut4uAoSiCw/Y3ZSwT0HS549t5Oeiru8e9KuX+86+s2+gHTRricTx8PgPfeX8KGPOw=</source>
  </file>
  <file path="lib/Phile/ServiceLocator/TemplateInterface.php" generated-path="lib.Phile.ServiceLocator.TemplateInterface.html" hash="6f3c597b107e3fd40f52e6f1ecc63676" package="Default">
    <docblock line="0">
      <description>The TemplateInterface</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Phile\ServiceLocator" line="14" package="Phile\ServiceLocator">
      <name>TemplateInterface</name>
      <full_name>\Phile\ServiceLocator\TemplateInterface</full_name>
      <docblock line="14">
        <description>Interface TemplateInterface</description>
        <long-description></long-description>
        <tag name="link" line="14" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="14" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="14" description="Phile\ServiceLocator"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="21" package="Phile\ServiceLocator">
        <name>render</name>
        <full_name>\Phile\ServiceLocator\TemplateInterface::render()</full_name>
        <docblock line="21">
          <description>render the template</description>
          <long-description></long-description>
          <tag name="return" line="21" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="30" package="Phile\ServiceLocator">
        <name>setCurrentPage</name>
        <full_name>\Phile\ServiceLocator\TemplateInterface::setCurrentPage()</full_name>
        <docblock line="30">
          <description>set current page</description>
          <long-description></long-description>
          <tag name="param" line="30" description="" type="\Phile\Model\Page" variable="$page">
            <type>\Phile\Model\Page</type>
          </tag>
          <tag name="return" line="30" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$page</name>
          <default></default>
          <type>\Phile\Model\Page</type>
        </argument>
      </method>
    </interface>
    <source>eJyNkD9rAzEMxXd/Cg0d0hvivS000CmQQKA33uL6lJzJ+Q+yrhRKv3vli9MhXEu9GFnP7/2kp+c0JKWbRkED7YDQok+jYdwGRjoai9LQKhiPOUkFh8GN2L0ivTuLu2gNR3pUV4efX4s+RbEZXTiDnIE55QetUzG0Pq9t9FVgMWScBdKPSao4kcV1pJOu3az323aWC9XZnJbBZnb3B9OnKigzfDkNEIYeCVg2wVVdW1fFhpAnCuDdB/b1Uc93mt6EDo5TsOxiqF6re1nPTUpGBjuRCBiSwN9GJEPGQ3cZaR97HLtDmfFuSfxvHkl9uYQWs9Uv9oL7pb4BY7Civw==</source>
  </file>
  <file path="lib/Phile/Utility.php" generated-path="lib.Phile.Utility.html" hash="329a4db83153feac3dc68b11eae6c181" package="Default">
    <docblock line="0">
      <description>The Phile Utility class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile" line="17" package="Phile">
      <extends>\Phile\Core\Utility</extends>
      <name>Utility</name>
      <full_name>\Phile\Utility</full_name>
      <docblock line="17">
        <description>the Registry class for implementing a registry</description>
        <long-description></long-description>
        <tag name="author" line="17" description="Frank NÃ¤gler"/>
        <tag name="link" line="17" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="17" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="17" description="Phile"/>
        <tag name="deprecated" line="17" description="since 1.4 will be removed"/>
        <tag name="use" line="17" description="\Phile\Core\Utility"/>
        <tag name="inherited_from" description="\Phile\Core\Utility" refers="\Phile\Core\Utility" link="/classes/Phile.Core.Utility.html"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="26" package="Phile">
        <name>getProtocol</name>
        <full_name>\Phile\Core\Utility::getProtocol()</full_name>
        <docblock line="26">
          <description>method to get the current http protocol</description>
          <long-description></long-description>
          <tag name="return" line="26" description="the current protocol" type="string">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="26" description="since 1.5 will be removed"/>
        </docblock>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="37" package="Phile">
        <name>getBaseUrl</name>
        <full_name>\Phile\Core\Utility::getBaseUrl()</full_name>
        <docblock line="37">
          <description>detect base url</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="37" description="since 1.5 will be removed"/>
        </docblock>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="55" package="Phile">
        <name>getInstallPath</name>
        <full_name>\Phile\Core\Utility::getInstallPath()</full_name>
        <docblock line="55">
          <description>detect install path</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="55" description="since 1.5 will be removed"/>
        </docblock>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="71" package="Phile">
        <name>resolveFilePath</name>
        <full_name>\Phile\Core\Utility::resolveFilePath()</full_name>
        <docblock line="71">
          <description>resolve a file path by replace the mod: prefix</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="the full filepath or null if file does not exists" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="92" package="Phile">
        <name>load</name>
        <full_name>\Phile\Core\Utility::load()</full_name>
        <docblock line="92">
          <description>load files e.g. config files</description>
          <long-description></long-description>
          <tag name="param" line="92" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="92" description="" type="mixed|null">
            <type>mixed</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="109" package="Phile">
        <name>isPluginLoaded</name>
        <full_name>\Phile\Core\Utility::isPluginLoaded()</full_name>
        <docblock line="109">
          <description>check if a plugin is loaded</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="" variable="$plugin"/>
          <tag name="return" line="109" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="deprecated" line="109" description="since 1.5 will be removed"/>
          <tag name="use" line="109" description="'plugins_loaded' event"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="127" package="Phile">
        <name>getFiles</name>
        <full_name>\Phile\Core\Utility::getFiles()</full_name>
        <docblock line="127">
          <description>static method to get files by directory and file filter</description>
          <long-description></long-description>
          <tag name="param" line="127" description="" type="string" variable="$directory">
            <type>string</type>
          </tag>
          <tag name="param" line="127" description="" type="string" variable="$filter">
            <type>string</type>
          </tag>
          <tag name="return" line="127" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$directory</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>'\Phile\FilterIterator\GeneralFileFilterIterator'</default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="155" package="Phile">
        <name>redirect</name>
        <full_name>\Phile\Core\Utility::redirect()</full_name>
        <docblock line="155">
          <description>redirect to an url</description>
          <long-description></long-description>
          <tag name="param" line="155" description="&lt;p&gt;the url to redirect to&lt;/p&gt;" type="" variable="$url"/>
          <tag name="param" line="155" description="&lt;p&gt;the http status code&lt;/p&gt;" type="integer" variable="$statusCode">
            <type>integer</type>
          </tag>
          <tag name="deprecated" line="155" description="since 1.5 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statusCode</name>
          <default>302</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="167" package="Phile">
        <name>getSecureMD5Hash</name>
        <full_name>\Phile\Core\Utility::getSecureMD5Hash()</full_name>
        <docblock line="167">
          <description>generate secure md5 hash</description>
          <long-description></long-description>
          <tag name="param" line="167" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="167" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="185" package="Phile">
        <name>generateSecureToken</name>
        <full_name>\Phile\Core\Utility::generateSecureToken()</full_name>
        <docblock line="185">
          <description>method to generate a secure token
code from http://stackoverflow.com/a/13733588/1372085
modified by Frank NÃ¤gler</description>
          <long-description></long-description>
          <tag name="param" line="185" description="" type="integer" variable="$length">
            <type>integer</type>
          </tag>
          <tag name="param" line="185" description="" type="boolean" variable="$widthSpecialChars">
            <type>boolean</type>
          </tag>
          <tag name="param" line="185" description="" type="null" variable="$additionalChars">
            <type>null</type>
          </tag>
          <tag name="return" line="185" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$length</name>
          <default>32</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$widthSpecialChars</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$additionalChars</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile" line="214" package="Phile">
        <name>crypto_rand_secure</name>
        <full_name>\Phile\Core\Utility::crypto_rand_secure()</full_name>
        <docblock line="214">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Phile\Core\Utility</inherited_from>
      </method>
    </class>
    <source>eJxtkMtKBTEMhvd9iqxnMUVwpYKCILg4InLczaZ2YltOb7QZL4hv45v4YmY6nZ1ZJt9Hkv/qOtss5DAIGOBoER6t8wjP5LyjT9Be1cojKaIKWLPSnbgUu0QsPaFxlUrn4TUVcCF7DBjJRQMKSifYWKUbtZBlaq27ouIJHn5/jMfSht5xYytLlOuFlHldqkMddQqd0Rgr7gwjKXMjLUXjmIqRHajycH9sBh9/UqYZ7YXWnDEX1Ipwhuoif3c2nsO78x5ekI8O6Q3nBi7brrWmpk+3qeDUg2oRbc/v0eEHYZzrv/SX+BZ/MlZ5Kw==</source>
  </file>
  <file path="lib/Phile/Core/Utility.php" generated-path="lib.Phile.Core.Utility.html" hash="f929872458221b7f1194ae73316aa097" package="Default">
    <docblock line="0">
      <description>The Phile Utility class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Container">\Phile\Core\Container</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Core" line="17" package="Phile">
      <extends/>
      <name>Utility</name>
      <full_name>\Phile\Core\Utility</full_name>
      <docblock line="17">
        <description>Utility class</description>
        <long-description></long-description>
        <tag name="author" line="17" description="PhileCMS"/>
        <tag name="link" line="17" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="17" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="17" description="Phile"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="26" package="Phile">
        <name>getProtocol</name>
        <full_name>\Phile\Core\Utility::getProtocol()</full_name>
        <docblock line="26">
          <description>method to get the current http protocol</description>
          <long-description></long-description>
          <tag name="return" line="26" description="the current protocol" type="string">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="26" description="since 1.5 will be removed"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="37" package="Phile">
        <name>getBaseUrl</name>
        <full_name>\Phile\Core\Utility::getBaseUrl()</full_name>
        <docblock line="37">
          <description>detect base url</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="37" description="since 1.5 will be removed"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="55" package="Phile">
        <name>getInstallPath</name>
        <full_name>\Phile\Core\Utility::getInstallPath()</full_name>
        <docblock line="55">
          <description>detect install path</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="deprecated" line="55" description="since 1.5 will be removed"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="71" package="Phile">
        <name>resolveFilePath</name>
        <full_name>\Phile\Core\Utility::resolveFilePath()</full_name>
        <docblock line="71">
          <description>resolve a file path by replace the mod: prefix</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="the full filepath or null if file does not exists" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="92" package="Phile">
        <name>load</name>
        <full_name>\Phile\Core\Utility::load()</full_name>
        <docblock line="92">
          <description>load files e.g. config files</description>
          <long-description></long-description>
          <tag name="param" line="92" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="92" description="" type="mixed|null">
            <type>mixed</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="109" package="Phile">
        <name>isPluginLoaded</name>
        <full_name>\Phile\Core\Utility::isPluginLoaded()</full_name>
        <docblock line="109">
          <description>check if a plugin is loaded</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="" variable="$plugin"/>
          <tag name="return" line="109" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="deprecated" line="109" description="since 1.5 will be removed"/>
          <tag name="use" line="109" description="'plugins_loaded' event"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="127" package="Phile">
        <name>getFiles</name>
        <full_name>\Phile\Core\Utility::getFiles()</full_name>
        <docblock line="127">
          <description>static method to get files by directory and file filter</description>
          <long-description></long-description>
          <tag name="param" line="127" description="" type="string" variable="$directory">
            <type>string</type>
          </tag>
          <tag name="param" line="127" description="" type="string" variable="$filter">
            <type>string</type>
          </tag>
          <tag name="return" line="127" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$directory</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>'\Phile\FilterIterator\GeneralFileFilterIterator'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="155" package="Phile">
        <name>redirect</name>
        <full_name>\Phile\Core\Utility::redirect()</full_name>
        <docblock line="155">
          <description>redirect to an url</description>
          <long-description></long-description>
          <tag name="param" line="155" description="&lt;p&gt;the url to redirect to&lt;/p&gt;" type="" variable="$url"/>
          <tag name="param" line="155" description="&lt;p&gt;the http status code&lt;/p&gt;" type="integer" variable="$statusCode">
            <type>integer</type>
          </tag>
          <tag name="deprecated" line="155" description="since 1.5 will be removed"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statusCode</name>
          <default>302</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="167" package="Phile">
        <name>getSecureMD5Hash</name>
        <full_name>\Phile\Core\Utility::getSecureMD5Hash()</full_name>
        <docblock line="167">
          <description>generate secure md5 hash</description>
          <long-description></long-description>
          <tag name="param" line="167" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="167" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="185" package="Phile">
        <name>generateSecureToken</name>
        <full_name>\Phile\Core\Utility::generateSecureToken()</full_name>
        <docblock line="185">
          <description>method to generate a secure token
code from http://stackoverflow.com/a/13733588/1372085
modified by Frank NÃ¤gler</description>
          <long-description></long-description>
          <tag name="param" line="185" description="" type="integer" variable="$length">
            <type>integer</type>
          </tag>
          <tag name="param" line="185" description="" type="boolean" variable="$widthSpecialChars">
            <type>boolean</type>
          </tag>
          <tag name="param" line="185" description="" type="null" variable="$additionalChars">
            <type>null</type>
          </tag>
          <tag name="return" line="185" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$length</name>
          <default>32</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$widthSpecialChars</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$additionalChars</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="214" package="Phile">
        <name>crypto_rand_secure</name>
        <full_name>\Phile\Core\Utility::crypto_rand_secure()</full_name>
        <docblock line="214">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="214" code="PPC:ERR-50015">Argument $min is missing from the Docblock of crypto_rand_secure</error>
      <error line="214" code="PPC:ERR-50015">Argument $max is missing from the Docblock of crypto_rand_secure</error>
      <error line="214" code="PPC:ERR-50008">No summary for method crypto_rand_secure()</error>
    </parse_markers>
    <source>eJzFWPlSGzcY/99PoTCeeE0cm6M01OCEBELihquYNE2B8ci7sq2yXm0lrcFJeJu+SV+sn441exqapFPPgL3Sd+n3ndrtF+E4rLSWlytoGZ2NCToZU5+g95L6VM6Q62MhYKtVCfCEiBC7luJil3GyValEIrkA/wKJaUA4bFmhWVFqbQdHcsw4Mqy7hz296NPgCsFnLGUo2q1WqDbdiWi6bGIJXBKAQkUA+yyEJxZxlzQZH7Xsrmgdds80OVh7hUfWPn0IbUNsUeVzpaLUaTvVZxlNCJjlIcnQiEgkAQ434pwEUqtEIWeSucy35DHXDicy4oF+EpLTYJRizXChHY+EnLhYEg8JGgCiq80NdE19Hw0I4mTCpsSzxC39HUYDOBzIxhK+hlHgSsoCZeOJle3UNeFnwwYfa9LcH+02UHcDEAEKnfrT5/Do1DQy/VMWScJrZvFO4pYWdpsDySOSuBINMHgi4veD8V+c+xUof8/zx6668YFRp/TwW3NyOkTOHcvT52MssqDUE9K1Bq43QHySsQDNOy23iPiAVVpOq4Ve7baRYBOCmO8BFjco9KMRDQSaYEgXDLjIMRUAzhBSy4SU+gFLNKCSYp9+igHLGReQa2QsSdiRjQ5Lrs2fI3qP26mCEUwLsRz/L67vGgNOQH/e/coqOL0g/lA7PXOqFE00ACMd/dhQ9oZMxE81qC61OnqC1v8to2FbBbYc2IqiDFxOBPOnBGE0VOVXaxrMYDn0VclVvp8wrw21hAzpTRb3EHM8iUtPdYFnDMmXINKxRQBX+KE0aoVQkPUOZIW2wmNEoIBJRG6okOIh/rHn2Ad27SBtTNZLEPrxeQ+P99KHQiYpwVDJojAk3EnDvdIAn9RRp9NBNWCu5dIzdpLkfWrhc2oKu1oDnRy8f9M96vX3uqcNQ1kvyg6wzx0T92oORPL81kC13jfr9pBZS/JuT7g+QaAgLwsLn2FPmyAQaY6akP/BkI7MyuIgGOqWVxgEE3pDPB0DD/GoMsHR4rJuzMGgiUpggKT3I48Yw74WjrlXsC2VqhYqA+fFI4OGDQlNW1SlBuzr2jLaUXOP/dRs2e4bS2qITKHtPwRbKk4064FmdKyhRT1Neb28oaX6z66mrhV0OVi2lNbifHez2AwxNKyi1KjGLaqDSiRuZR3qUCGAIuY8tz8uz2sYUJiS2mUdPX6MFuzrbJc8IqW9yQKbHt9M3kAV9aAQuJLxGcKBSSf1Dxrf4hSas5WnWIEMe2rMOZ49JAbAUlUtIX3m+hqxbEC5dmGm63290IU/DCQXbwhEAfYVZ3qnloseA4OZCKxcJ+VztXFxSmBcFQB3LCj+TtPm6fdiq8sZtBl3pyvcXyCw3d4/Pjg4/tDvfTw86B696+UE1CvFT8nmDR0n8iXgoD2THAjUdIXdMXIsVFgY0LK5MY+3+APenmKOLnqhdkQ3GLJk4Z2TtTIzmrbk/FLlkKI2Yzd0CXXFcuqLiqPlLZ8iDMoqA3BQNJwnyyJsx+LVLKAegS8ho4iLwoVm8aeqIjwSu8wzc4u+OZk16F8emUv9XjNhbLGjTtRI6e+g9ZW1bEY4ejaGyyyD2yLUznL+0noz0uknCQyaELUwm3kbCO4OubErXTCm2I/KmnJqXr6vYPS01sO9jbeg0zFyv1vXyMYcnC3TPUjg8lmojHlHZjCBNe3RSuFK1mULHI6hk+yKzHuzig805GwSX/HBVvcKAoEPfXat3gO0cGt1/dn6+sbmpvqxtrK5MdfCPDqkEE1Q8vc5Dq7Q0d9/jfyyMq8jueqTYDQfl+MtNRag6jX15LgXEhduWrtjzEWGSs/KVex5VEGRpvkW9xqEjI/PFDqOtVKF81qjwDBk2mMjZ40q+2BlLjY06PFTBy0tbSXjxiMv/XCMB0SVy6WXr3b3Xu+/edv9+d3B4dHxyS+nvbP3v3747ePvpVxNYMMD1yPD0Zj+ceVPAhb+yYWMptc3s08L2VZW19Z/2Pjx2eZPS5kBJnfq3OifE/ao5dQ7L84vv3y+XSqaZrTcLGSPOha0+8RnOYs0QG8BFRRwXNlC8L0dR5x6evIkp8M4ptlJazu3b6zabZ14rA/R7fVNAjkr+g7qqzBJ8tTrlws7idb0kISVkKsT9d7BJqzSDQmaLGbflLeZrKpOEqN6vIRzV97kXSaVVnB52wFzINt6UOc8zD3RHQVgPzxyuSjzCrBVxjS0/oI7bLGa18HdK5kqyBqpLqQkoKf6bJmoNhTbaKXs+phiuVV61Y1cMOuHZrN5p85nI/XdgTvRyIpuoLXkFDSYSZhwgMKB8ld3NEcLbep3FltKuK00cLXSpAlOKgWac2rGAh6auCbfDbFG2Sra3jZy6oCFYRUqvKCMQpQApdYBQbc6l+Gx3Os3GOE7aExuPOI6AxqswU9HvwkWft9g0g8FiTzW1ydwzJnr9QQMCUH663Fsq7bJo8IFfyLKOfHJFEOfSJ3rFl3rd+SO5n3esW4ueuUDzgOUFF2cabeVfwBUL5p0</source>
  </file>
  <file path="lib/Phile/Core/Config.php" generated-path="lib.Phile.Core.Config.html" hash="9b4e3116406058599f3f53b44b4a9c45" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Phile\Core" line="13" package="Phile">
      <extends/>
      <name>Config</name>
      <full_name>\Phile\Core\Config</full_name>
      <docblock line="13">
        <description>Config class</description>
        <long-description></long-description>
        <tag name="author" line="13" description="PhileCMS"/>
        <tag name="link" line="13" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="13" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="13" description="Phile"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Phile\Core" line="16" package="Phile">
        <name>$isLocked</name>
        <full_name>\Phile\Core\Config::isLocked</full_name>
        <default>false</default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="16" description="&lt;p&gt;configuration is writable&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="18" package="Phile">
        <name>__construct</name>
        <full_name>\Phile\Core\Config::__construct()</full_name>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="30" package="Phile">
        <name>get</name>
        <full_name>\Phile\Core\Config::get()</full_name>
        <docblock line="30">
          <description>Getter for configuration values</description>
          <long-description></long-description>
          <tag name="param" line="30" description="&lt;p&gt;single key&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="30" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="46" package="Phile">
        <name>has</name>
        <full_name>\Phile\Core\Config::has()</full_name>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="57" package="Phile">
        <name>toArray</name>
        <full_name>\Phile\Core\Config::toArray()</full_name>
        <docblock line="57">
          <description>Return configuration as PHP-array</description>
          <long-description></long-description>
          <tag name="return" line="57" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="68" package="Phile">
        <name>set</name>
        <full_name>\Phile\Core\Config::set()</full_name>
        <docblock line="68">
          <description>Setter for configuration values</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;set single key value; sell all if array&lt;/p&gt;" type="string|array" variable="$key">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="68" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="93" package="Phile">
        <name>merge</name>
        <full_name>\Phile\Core\Config::merge()</full_name>
        <docblock line="93">
          <description>Recursively merges a configuration over the existing configuration</description>
          <long-description></long-description>
          <tag name="param" line="93" description="&lt;p&gt;configuration to merge&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="105" package="Phile">
        <name>getTemplateVars</name>
        <full_name>\Phile\Core\Config::getTemplateVars()</full_name>
        <docblock line="105">
          <description>Creates an array of template variables derived from the configuration</description>
          <long-description></long-description>
          <tag name="return" line="105" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\Core" line="123" package="Phile">
        <name>lock</name>
        <full_name>\Phile\Core\Config::lock()</full_name>
        <docblock line="123">
          <description>Locks configuration into read-only mode</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="18" code="PPC:ERR-50015">Argument $values is missing from the Docblock of __construct</error>
      <error line="18" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="46" code="PPC:ERR-50015">Argument $key is missing from the Docblock of has</error>
      <error line="46" code="PPC:ERR-50008">No summary for method has()</error>
    </parse_markers>
    <source>eJytVttu00AQffdXjFAgaZU2IIGAlnBRhAAJpIoiXtoq2tpjZ9W119pd9yLovzN7ietLnFaApTaJ58zMmeOZWb95V67KKCpYjrpkMcLRigs8XUiFh1E0292NYBcWskh5BrFgWtNve+s9q8xKKvD4xbdjd1Pw4gLoWhlT6oPZrLTGONf7scwDIMZCowOQXZb0S1Yqxn2pslmw6tm3Lz8cnBhdsCyQojuzyHEIhKJfkU1GJOH9JVNwLqVAVkDsrJVihssCuIYrxQ07F2gDWI9SSYOxwQRGXH+V8QV9m0PKhKaiLcCjqnMiBGlVxC7QckmBtVFVbCZMKXYDo0smKtTke3K243w8I3t9x4wT+ObgQKOZjF0Fy2M0hheZHk+tx2ENHpkV13tvLTLEDMbbaF2ix+7CJwqBClLSvl2n9wuwNZoUVCwHIkJpYXSBN6DpG0lBX2uQQlOpAnJ+jUm4OdsoQWYJ2iBzKCohujWPPCOy3lWfbaieiqt9eApezSXFXeI1uWmXY7oOt7PTSGGvQDeYTyz47E7L26jFRxtWGGJEbIysyhKVi94Q3zJIMOUFJpPaYyjp2t5Abkwd4Fal1pPsKrpivtp/kLKT8h4xh/rqe11fo6eYhqPPR3suZLezmum2No2RHyxm0i0xBHhQfX2+x38/B7/D9LppQNOYCO98SHeFAEZ/1BvNAtdx3KSE8d9auw4DMw3g/zw4YW+sl1i3Z81KySso8ApOv8qMxx+vYywtr0kLZi9dkjImDRn3eitUuAT7sGDF6dipZuV69Fg/ol3mGnjai/nsxbNXz58/ffnidcu0eWBcOUGjuVcJnjyh1Ev3APyQdAu8082aG3EBaZdvBvt9YV38w95E5r7lff8wxZXS/BLFDeSoMjojWKdN5SV1r1khuCm127ll39y/7WOnHdBIn2prPzpE+/Tq9aIU9jQMrVUPb+Owsg01D3tGYSnotYE+Q8UT6z+F9jHm3BpnHEUY1G6hkBkrWNgtIFMwmFMagzSfituTXEOCirIlkCqZOx23yvfgZUVT9yMk+8mUHlpaJ63OGp8zjcuEqzHM34KiJZOvR9NNsZLSOPPOFMazcWdUvHelhPNu+tWGroevtYmvn1MfabAwNblm+KZtyG87Ldi39dB/e8u+Q04G43cTaG5wabgR2IvfMHW96EHnuLEYZ9E+FxHqmQZCPaS+3mIbqLdJ4U6arUzOhqbALvTuhNOCltSALNmThV0sMtk+7HZn9xq4c2TQINMbLa5p3EZ/AIxCcaE=</source>
  </file>
  <file path="lib/Phile/Core/ServiceLocator.php" generated-path="lib.Phile.Core.ServiceLocator.html" hash="e2ab00f2366f33836d7f87e239fad3f6" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Container">\Phile\Core\Container</namespace-alias>
    <namespace-alias name="ServiceLocatorException">\Phile\Exception\ServiceLocatorException</namespace-alias>
    <class final="false" abstract="false" namespace="Phile\Core" line="16" package="Default">
      <extends/>
      <name>ServiceLocator</name>
      <full_name>\Phile\Core\ServiceLocator</full_name>
      <docblock line="16">
        <description>the Service Locator class</description>
        <long-description></long-description>
        <tag name="package" line="16" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="26" package="Default">
        <name>registerService</name>
        <full_name>\Phile\Core\ServiceLocator::registerService()</full_name>
        <docblock line="26">
          <description>method to register a service</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;the key for the service&lt;/p&gt;" type="string" variable="$serviceKey">
            <type>string</type>
          </tag>
          <tag name="param" line="26" description="" type="mixed" variable="$object">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="26" description="" type="\Phile\Exception\ServiceLocatorException">
            <type>\Phile\Exception\ServiceLocatorException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$serviceKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="38" package="Default">
        <name>hasService</name>
        <full_name>\Phile\Core\ServiceLocator::hasService()</full_name>
        <docblock line="38">
          <description>checks if a service is registered</description>
          <long-description></long-description>
          <tag name="param" line="38" description="" type="string" variable="$serviceKey">
            <type>string</type>
          </tag>
          <tag name="return" line="38" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$serviceKey</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Phile\Core" line="51" package="Default">
        <name>getService</name>
        <full_name>\Phile\Core\ServiceLocator::getService()</full_name>
        <docblock line="51">
          <description>returns a service</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;the service key&lt;/p&gt;" type="string" variable="$serviceKey">
            <type>string</type>
          </tag>
          <tag name="return" line="51" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="51" description="" type="\Phile\Exception\ServiceLocatorException">
            <type>\Phile\Exception\ServiceLocatorException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$serviceKey</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytUrFuwjAQ3f0VN3QoqMU7VC0S6oBapEp0ZDHmSNwQ27Kdlqri33sxJiURSKjCQ+z43nu593IPTza3jPcZ9GEsqpAbB/CWqw1OZvN4uVG6AFp5CNYPObd1UZZ+IE2ZABK1xwigurH0ZioncWBcxlPV89n0neCcMS1K9FZI3H9nMTEOR4xV/viCHjoIpdGNjirPW4k2KKMXc3SfpPxqpAjGNfekw/vRTMgREggSCuRGeB+biCdoi7AfVvuM/Hr1oUTKYwXBgMNM+YAOBPg9KWEO0LEVTpTgg1M6g5sEesHv2EhB+5oaqM9t/oFYqi2uAG7M8gNl6IqH3Jmvbr+N6QTjcbfVkiKnRkSgbV1pWUMaA0ni9qjDu8NXe1Fgn0K9ml8wHGYYppo0NVF7948ew2mFUSTvWDdJmaMsPKj1X4CgfNMVri6Ns4tzGCqnYWnM5pIYcuFPJNA1nkTP+yeZFv+c7b2Q/+fUHIIqztqOU3PFKSGb14gna49HE8+O/QJRpF0H</source>
  </file>
  <file path="lib/Phile/ServiceLocator/ErrorHandlerInterface.php" generated-path="lib.Phile.ServiceLocator.ErrorHandlerInterface.html" hash="e1393771d93daef7921fd93c331471fb" package="Default">
    <docblock line="0">
      <description>The ErrorHandlerInterface</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Phile\ServiceLocator" line="14" package="Phile\ServiceLocator">
      <name>ErrorHandlerInterface</name>
      <full_name>\Phile\ServiceLocator\ErrorHandlerInterface</full_name>
      <docblock line="14">
        <description>Interface ErrorHandlerInterface</description>
        <long-description></long-description>
        <tag name="link" line="14" description="https://philecms.com" link="https://philecms.com"/>
        <tag name="license" line="14" description="http://opensource.org/licenses/MIT" link="http://opensource.org/licenses/MIT"/>
        <tag name="package" line="14" description="Phile\ServiceLocator"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="27" package="Phile\ServiceLocator">
        <name>handleError</name>
        <full_name>\Phile\ServiceLocator\ErrorHandlerInterface::handleError()</full_name>
        <docblock line="27">
          <description>handle the error</description>
          <long-description></long-description>
          <tag name="param" line="27" description="" type="integer" variable="$errno">
            <type>integer</type>
          </tag>
          <tag name="param" line="27" description="" type="string" variable="$errstr">
            <type>string</type>
          </tag>
          <tag name="param" line="27" description="" type="string" variable="$errfile">
            <type>string</type>
          </tag>
          <tag name="param" line="27" description="" type="integer" variable="$errline">
            <type>integer</type>
          </tag>
          <tag name="param" line="27" description="" type="array" variable="$errcontext">
            <type>array</type>
          </tag>
          <tag name="return" line="27" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$errno</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errstr</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errfile</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errline</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$errcontext</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Phile\ServiceLocator" line="36" package="Phile\ServiceLocator">
        <name>handleException</name>
        <full_name>\Phile\ServiceLocator\ErrorHandlerInterface::handleException()</full_name>
        <docblock line="36">
          <description>handle all exceptions</description>
          <long-description></long-description>
          <tag name="param" line="36" description="" type="\Exception" variable="$exception">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="36" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
    </interface>
    <source>eJyNUcFKxDAUvPcrcvCwlrK5q6CXBRcUBPe4l2z2tQ3bJuEllYr4775kkyKlRXNpkpnMm5k+PNrWFrwsC1ayQwtsh2jwWehzB7jXHrAWEgjkhRY9OEsn9taqDo7vgB9KwouRwhu8L7LK9GpVK7CeOqUvjFbrvXV3nNsgKnu3laZPBAnaQSQQbiydzIAStgYbnlDHX/eHSCdnF9Esm4v+1R++vopgJ4YIq2RtZDBPrUB4ke4zTBNR9Ixkw/mGKNrMMOdR6SZitF0Ha7K8LktNzVGBKD6vqDSUYPRzcwh+QM1OxnQgdLrm8WuHE7XH6kFLr4xOOWMpm2uMKluuJnvVZKVK038Nv6W/v1ye6DoGowQbJrnlBo+7TCDNvF3J06sRzv9Jk3U2i+pk+Lv4AZxB6r8=</source>
  </file>
  <file path="plugins/phile/simpleFileDataPersistence/config.php" generated-path="plugins.phile.simpleFileDataPersistence.config.html" hash="0e1c37f9a99eec97c44332560e2153c2" package="Default">
    <docblock line="0">
      <description>config file</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <source>eJyzsS/IKODS19LiUtBSSM7PS8tMV0jLzEkFcvW5VKACtgqJRUWJlRqa1lxcRaklpUV5ClApay4AWMYS/Q==</source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Phile" full_name="Phile">
    <package name="Core" full_name="Phile\Core"/>
    <package name="Exception" full_name="Phile\Exception"/>
    <package name="FilterIterator" full_name="Phile\FilterIterator"/>
    <package name="Gateway" full_name="Phile\Gateway"/>
    <package name="Model" full_name="Phile\Model"/>
    <package name="Plugin" full_name="Phile\Plugin">
      <package name="Phile" full_name="Phile\Plugin\Phile">
        <package name="ParserMarkdown" full_name="Phile\Plugin\Phile\ParserMarkdown">
          <package name="Parser" full_name="Phile\Plugin\Phile\ParserMarkdown\Parser"/>
        </package>
        <package name="ParserMeta" full_name="Phile\Plugin\Phile\ParserMeta">
          <package name="Parser" full_name="Phile\Plugin\Phile\ParserMeta\Parser"/>
        </package>
        <package name="PhileSetup" full_name="Phile\Plugin\Phile\PhileSetup"/>
        <package name="PhpFastCache" full_name="Phile\Plugin\Phile\PhpFastCache"/>
        <package name="SimpleFileDataPersistence" full_name="Phile\Plugin\Phile\SimpleFileDataPersistence">
          <package name="Persistence" full_name="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence"/>
        </package>
        <package name="TemplateTwig" full_name="Phile\Plugin\Phile\TemplateTwig">
          <package name="Template" full_name="Phile\Plugin\Phile\TemplateTwig\Template"/>
        </package>
      </package>
    </package>
    <package name="Repository" full_name="Phile\Repository"/>
    <package name="ServiceLocator" full_name="Phile\ServiceLocator"/>
  </package>
  <package name="global" full_name="global"/>
  <namespace name="global" full_name="global"/>
  <namespace name="Phile" full_name="Phile">
    <namespace name="Core" full_name="Phile\Core"/>
    <namespace name="Exception" full_name="Phile\Exception"/>
    <namespace name="FilterIterator" full_name="Phile\FilterIterator"/>
    <namespace name="Gateway" full_name="Phile\Gateway"/>
    <namespace name="Model" full_name="Phile\Model"/>
    <namespace name="Plugin" full_name="Phile\Plugin">
      <namespace name="Phile" full_name="Phile\Plugin\Phile">
        <namespace name="ErrorHandler" full_name="Phile\Plugin\Phile\ErrorHandler"/>
        <namespace name="ParserMarkdown" full_name="Phile\Plugin\Phile\ParserMarkdown">
          <namespace name="Parser" full_name="Phile\Plugin\Phile\ParserMarkdown\Parser"/>
        </namespace>
        <namespace name="ParserMeta" full_name="Phile\Plugin\Phile\ParserMeta">
          <namespace name="Parser" full_name="Phile\Plugin\Phile\ParserMeta\Parser"/>
        </namespace>
        <namespace name="PhpFastCache" full_name="Phile\Plugin\Phile\PhpFastCache"/>
        <namespace name="SetupCheck" full_name="Phile\Plugin\Phile\SetupCheck"/>
        <namespace name="SimpleFileDataPersistence" full_name="Phile\Plugin\Phile\SimpleFileDataPersistence">
          <namespace name="Persistence" full_name="Phile\Plugin\Phile\SimpleFileDataPersistence\Persistence"/>
        </namespace>
        <namespace name="TemplateTwig" full_name="Phile\Plugin\Phile\TemplateTwig">
          <namespace name="Template" full_name="Phile\Plugin\Phile\TemplateTwig\Template"/>
        </namespace>
        <namespace name="TestPlugin" full_name="Phile\Plugin\Phile\TestPlugin"/>
      </namespace>
    </namespace>
    <namespace name="Repository" full_name="Phile\Repository"/>
    <namespace name="ServiceLocator" full_name="Phile\ServiceLocator"/>
    <namespace name="Test" full_name="Phile\Test"/>
  </namespace>
  <deprecated count="45"/>
</project>
